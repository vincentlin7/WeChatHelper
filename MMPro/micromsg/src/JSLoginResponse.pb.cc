// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JSLoginResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "JSLoginResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class JSLoginResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JSLoginResponse> {
} _JSLoginResponse_default_instance_;

namespace protobuf_JSLoginResponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _jsapibaseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _scopelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _appiconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _openid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _hassessionkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _sessionticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _lifespan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSLoginResponse, _signature_),
  8,
  9,
  0,
  ~0u,
  1,
  2,
  3,
  4,
  5,
  10,
  6,
  7,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 17, sizeof(JSLoginResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_JSLoginResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "JSLoginResponse.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _JSLoginResponse_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_ScopeList_2eproto::InitDefaults();
  ::MMPro::micromsg::protobuf_JsApiBaseResponse_2eproto::InitDefaults();
  _JSLoginResponse_default_instance_.DefaultConstruct();
  _JSLoginResponse_default_instance_.get_mutable()->_baseresponse_ = const_cast< ::MMPro::micromsg::BaseResponse*>(
      ::MMPro::micromsg::BaseResponse::internal_default_instance());
  _JSLoginResponse_default_instance_.get_mutable()->_jsapibaseresponse_ = const_cast< ::MMPro::micromsg::JsApiBaseResponse*>(
      ::MMPro::micromsg::JsApiBaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025JSLoginResponse.proto\022\016MMPro.micromsg\032"
      "\022BaseResponse.proto\032\017ScopeList.proto\032\027Js"
      "ApiBaseResponse.proto\"\342\002\n\017JSLoginRespons"
      "e\0223\n\r_BaseResponse\030\001 \002(\0132\034.MMPro.microms"
      "g.BaseResponse\022=\n\022_JsApiBaseResponse\030\002 \001"
      "(\0132!.MMPro.micromsg.JsApiBaseResponse\022\r\n"
      "\005_Code\030\003 \001(\t\022-\n\n_ScopeList\030\004 \003(\0132\031.MMPro"
      ".micromsg.ScopeList\022\020\n\010_AppName\030\005 \001(\t\022\023\n"
      "\013_AppIConUrl\030\006 \001(\t\022\017\n\007_Openid\030\007 \001(\t\022\026\n\016_"
      "HasSessionKey\030\010 \001(\t\022\026\n\016_SessionTicket\030\t "
      "\001(\t\022\021\n\t_Lifespan\030\n \001(\r\022\016\n\006_State\030\013 \001(\t\022\022"
      "\n\n_Signature\030\014 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 458);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "JSLoginResponse.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_ScopeList_2eproto::AddDescriptors();
  ::MMPro::micromsg::protobuf_JsApiBaseResponse_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_JSLoginResponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSLoginResponse::kBaseResponseFieldNumber;
const int JSLoginResponse::kJsApiBaseResponseFieldNumber;
const int JSLoginResponse::kCodeFieldNumber;
const int JSLoginResponse::kScopeListFieldNumber;
const int JSLoginResponse::kAppNameFieldNumber;
const int JSLoginResponse::kAppIConUrlFieldNumber;
const int JSLoginResponse::kOpenidFieldNumber;
const int JSLoginResponse::kHasSessionKeyFieldNumber;
const int JSLoginResponse::kSessionTicketFieldNumber;
const int JSLoginResponse::kLifespanFieldNumber;
const int JSLoginResponse::kStateFieldNumber;
const int JSLoginResponse::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSLoginResponse::JSLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_JSLoginResponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.JSLoginResponse)
}
JSLoginResponse::JSLoginResponse(const JSLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _scopelist_(from._scopelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__code()) {
    _code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._code_);
  }
  _appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__appname()) {
    _appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appname_);
  }
  _appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__appiconurl()) {
    _appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appiconurl_);
  }
  _openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__openid()) {
    _openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._openid_);
  }
  _hassessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__hassessionkey()) {
    _hassessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._hassessionkey_);
  }
  _sessionticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__sessionticket()) {
    _sessionticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._sessionticket_);
  }
  _state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__state()) {
    _state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._state_);
  }
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__signature()) {
    _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
  }
  if (from.has__baseresponse()) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse(*from._baseresponse_);
  } else {
    _baseresponse_ = NULL;
  }
  if (from.has__jsapibaseresponse()) {
    _jsapibaseresponse_ = new ::MMPro::micromsg::JsApiBaseResponse(*from._jsapibaseresponse_);
  } else {
    _jsapibaseresponse_ = NULL;
  }
  _lifespan_ = from._lifespan_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.JSLoginResponse)
}

void JSLoginResponse::SharedCtor() {
  _cached_size_ = 0;
  _code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _hassessionkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _sessionticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_baseresponse_, 0, reinterpret_cast<char*>(&_lifespan_) -
    reinterpret_cast<char*>(&_baseresponse_) + sizeof(_lifespan_));
}

JSLoginResponse::~JSLoginResponse() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.JSLoginResponse)
  SharedDtor();
}

void JSLoginResponse::SharedDtor() {
  _code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _hassessionkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _sessionticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete _jsapibaseresponse_;
  }
}

void JSLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JSLoginResponse::descriptor() {
  protobuf_JSLoginResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_JSLoginResponse_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSLoginResponse& JSLoginResponse::default_instance() {
  protobuf_JSLoginResponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

JSLoginResponse* JSLoginResponse::New(::google::protobuf::Arena* arena) const {
  JSLoginResponse* n = new JSLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JSLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.JSLoginResponse)
  _scopelist_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has__code()) {
      GOOGLE_DCHECK(!_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_code_.UnsafeRawStringPointer())->clear();
    }
    if (has__appname()) {
      GOOGLE_DCHECK(!_appname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_appname_.UnsafeRawStringPointer())->clear();
    }
    if (has__appiconurl()) {
      GOOGLE_DCHECK(!_appiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_appiconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__openid()) {
      GOOGLE_DCHECK(!_openid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_openid_.UnsafeRawStringPointer())->clear();
    }
    if (has__hassessionkey()) {
      GOOGLE_DCHECK(!_hassessionkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_hassessionkey_.UnsafeRawStringPointer())->clear();
    }
    if (has__sessionticket()) {
      GOOGLE_DCHECK(!_sessionticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_sessionticket_.UnsafeRawStringPointer())->clear();
    }
    if (has__state()) {
      GOOGLE_DCHECK(!_state_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_state_.UnsafeRawStringPointer())->clear();
    }
    if (has__signature()) {
      GOOGLE_DCHECK(!_signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_signature_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has__baseresponse()) {
      GOOGLE_DCHECK(_baseresponse_ != NULL);
      _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
    }
    if (has__jsapibaseresponse()) {
      GOOGLE_DCHECK(_jsapibaseresponse_ != NULL);
      _jsapibaseresponse_->::MMPro::micromsg::JsApiBaseResponse::Clear();
    }
  }
  _lifespan_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JSLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.JSLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.JsApiBaseResponse _JsApiBaseResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__jsapibaseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_code().data(), this->_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._Code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.ScopeList _ScopeList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__scopelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AppName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_appname().data(), this->_appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._AppName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AppIConUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__appiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_appiconurl().data(), this->_appiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._AppIConUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Openid = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__openid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_openid().data(), this->_openid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._Openid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _HasSessionKey = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__hassessionkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_hassessionkey().data(), this->_hassessionkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._HasSessionKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _SessionTicket = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__sessionticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_sessionticket().data(), this->_sessionticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._SessionTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Lifespan = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has__lifespan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_lifespan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _State = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_state().data(), this->_state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._State");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Signature = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_signature().data(), this->_signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.JSLoginResponse._Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.JSLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.JSLoginResponse)
  return false;
#undef DO_
}

void JSLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.JSLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseresponse_, output);
  }

  // optional .MMPro.micromsg.JsApiBaseResponse _JsApiBaseResponse = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_jsapibaseresponse_, output);
  }

  // optional string _Code = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_code().data(), this->_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_code(), output);
  }

  // repeated .MMPro.micromsg.ScopeList _ScopeList = 4;
  for (unsigned int i = 0, n = this->_scopelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_scopelist(i), output);
  }

  // optional string _AppName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appname().data(), this->_appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_appname(), output);
  }

  // optional string _AppIConUrl = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appiconurl().data(), this->_appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._AppIConUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_appiconurl(), output);
  }

  // optional string _Openid = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_openid().data(), this->_openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Openid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_openid(), output);
  }

  // optional string _HasSessionKey = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_hassessionkey().data(), this->_hassessionkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._HasSessionKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_hassessionkey(), output);
  }

  // optional string _SessionTicket = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_sessionticket().data(), this->_sessionticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._SessionTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->_sessionticket(), output);
  }

  // optional uint32 _Lifespan = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_lifespan(), output);
  }

  // optional string _State = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_state().data(), this->_state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._State");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->_state(), output);
  }

  // optional string _Signature = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.JSLoginResponse)
}

::google::protobuf::uint8* JSLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.JSLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseresponse_, deterministic, target);
  }

  // optional .MMPro.micromsg.JsApiBaseResponse _JsApiBaseResponse = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_jsapibaseresponse_, deterministic, target);
  }

  // optional string _Code = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_code().data(), this->_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_code(), target);
  }

  // repeated .MMPro.micromsg.ScopeList _ScopeList = 4;
  for (unsigned int i = 0, n = this->_scopelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->_scopelist(i), deterministic, target);
  }

  // optional string _AppName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appname().data(), this->_appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_appname(), target);
  }

  // optional string _AppIConUrl = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appiconurl().data(), this->_appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._AppIConUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_appiconurl(), target);
  }

  // optional string _Openid = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_openid().data(), this->_openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Openid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_openid(), target);
  }

  // optional string _HasSessionKey = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_hassessionkey().data(), this->_hassessionkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._HasSessionKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->_hassessionkey(), target);
  }

  // optional string _SessionTicket = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_sessionticket().data(), this->_sessionticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._SessionTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->_sessionticket(), target);
  }

  // optional uint32 _Lifespan = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_lifespan(), target);
  }

  // optional string _State = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_state().data(), this->_state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._State");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->_state(), target);
  }

  // optional string _Signature = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.JSLoginResponse._Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->_signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.JSLoginResponse)
  return target;
}

size_t JSLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.JSLoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (has__baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);
  }
  // repeated .MMPro.micromsg.ScopeList _ScopeList = 4;
  {
    unsigned int count = this->_scopelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_scopelist(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string _Code = 3;
    if (has__code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_code());
    }

    // optional string _AppName = 5;
    if (has__appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_appname());
    }

    // optional string _AppIConUrl = 6;
    if (has__appiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_appiconurl());
    }

    // optional string _Openid = 7;
    if (has__openid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_openid());
    }

    // optional string _HasSessionKey = 8;
    if (has__hassessionkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_hassessionkey());
    }

    // optional string _SessionTicket = 9;
    if (has__sessionticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_sessionticket());
    }

    // optional string _State = 11;
    if (has__state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_state());
    }

    // optional string _Signature = 12;
    if (has__signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_signature());
    }

  }
  if (_has_bits_[8 / 32] & 1536u) {
    // optional .MMPro.micromsg.JsApiBaseResponse _JsApiBaseResponse = 2;
    if (has__jsapibaseresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_jsapibaseresponse_);
    }

    // optional uint32 _Lifespan = 10;
    if (has__lifespan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_lifespan());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JSLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.JSLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JSLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.JSLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.JSLoginResponse)
    MergeFrom(*source);
  }
}

void JSLoginResponse::MergeFrom(const JSLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.JSLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _scopelist_.MergeFrom(from._scopelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__code();
      _code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._code_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__appname();
      _appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__appiconurl();
      _appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appiconurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__openid();
      _openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._openid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__hassessionkey();
      _hassessionkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._hassessionkey_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has__sessionticket();
      _sessionticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._sessionticket_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has__state();
      _state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._state_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has__signature();
      _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      mutable__baseresponse()->::MMPro::micromsg::BaseResponse::MergeFrom(from._baseresponse());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable__jsapibaseresponse()->::MMPro::micromsg::JsApiBaseResponse::MergeFrom(from._jsapibaseresponse());
    }
    if (cached_has_bits & 0x00000400u) {
      _lifespan_ = from._lifespan_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JSLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.JSLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSLoginResponse::CopyFrom(const JSLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.JSLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSLoginResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000100) != 0x00000100) return false;
  if (has__baseresponse()) {
    if (!this->_baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void JSLoginResponse::Swap(JSLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSLoginResponse::InternalSwap(JSLoginResponse* other) {
  _scopelist_.InternalSwap(&other->_scopelist_);
  _code_.Swap(&other->_code_);
  _appname_.Swap(&other->_appname_);
  _appiconurl_.Swap(&other->_appiconurl_);
  _openid_.Swap(&other->_openid_);
  _hassessionkey_.Swap(&other->_hassessionkey_);
  _sessionticket_.Swap(&other->_sessionticket_);
  _state_.Swap(&other->_state_);
  _signature_.Swap(&other->_signature_);
  std::swap(_baseresponse_, other->_baseresponse_);
  std::swap(_jsapibaseresponse_, other->_jsapibaseresponse_);
  std::swap(_lifespan_, other->_lifespan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JSLoginResponse::GetMetadata() const {
  protobuf_JSLoginResponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_JSLoginResponse_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JSLoginResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
bool JSLoginResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void JSLoginResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000100u;
}
void JSLoginResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000100u;
}
void JSLoginResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
const ::MMPro::micromsg::BaseResponse& JSLoginResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
::MMPro::micromsg::BaseResponse* JSLoginResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._BaseResponse)
  return _baseresponse_;
}
::MMPro::micromsg::BaseResponse* JSLoginResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
void JSLoginResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._BaseResponse)
}

// optional .MMPro.micromsg.JsApiBaseResponse _JsApiBaseResponse = 2;
bool JSLoginResponse::has__jsapibaseresponse() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void JSLoginResponse::set_has__jsapibaseresponse() {
  _has_bits_[0] |= 0x00000200u;
}
void JSLoginResponse::clear_has__jsapibaseresponse() {
  _has_bits_[0] &= ~0x00000200u;
}
void JSLoginResponse::clear__jsapibaseresponse() {
  if (_jsapibaseresponse_ != NULL) _jsapibaseresponse_->::MMPro::micromsg::JsApiBaseResponse::Clear();
  clear_has__jsapibaseresponse();
}
const ::MMPro::micromsg::JsApiBaseResponse& JSLoginResponse::_jsapibaseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._JsApiBaseResponse)
  return _jsapibaseresponse_ != NULL ? *_jsapibaseresponse_
                         : *::MMPro::micromsg::JsApiBaseResponse::internal_default_instance();
}
::MMPro::micromsg::JsApiBaseResponse* JSLoginResponse::mutable__jsapibaseresponse() {
  set_has__jsapibaseresponse();
  if (_jsapibaseresponse_ == NULL) {
    _jsapibaseresponse_ = new ::MMPro::micromsg::JsApiBaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._JsApiBaseResponse)
  return _jsapibaseresponse_;
}
::MMPro::micromsg::JsApiBaseResponse* JSLoginResponse::release__jsapibaseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._JsApiBaseResponse)
  clear_has__jsapibaseresponse();
  ::MMPro::micromsg::JsApiBaseResponse* temp = _jsapibaseresponse_;
  _jsapibaseresponse_ = NULL;
  return temp;
}
void JSLoginResponse::set_allocated__jsapibaseresponse(::MMPro::micromsg::JsApiBaseResponse* _jsapibaseresponse) {
  delete _jsapibaseresponse_;
  _jsapibaseresponse_ = _jsapibaseresponse;
  if (_jsapibaseresponse) {
    set_has__jsapibaseresponse();
  } else {
    clear_has__jsapibaseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._JsApiBaseResponse)
}

// optional string _Code = 3;
bool JSLoginResponse::has__code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JSLoginResponse::set_has__code() {
  _has_bits_[0] |= 0x00000001u;
}
void JSLoginResponse::clear_has__code() {
  _has_bits_[0] &= ~0x00000001u;
}
void JSLoginResponse::clear__code() {
  _code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__code();
}
const ::std::string& JSLoginResponse::_code() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Code)
  return _code_.GetNoArena();
}
void JSLoginResponse::set__code(const ::std::string& value) {
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._Code)
}
#if LANG_CXX11
void JSLoginResponse::set__code(::std::string&& value) {
  set_has__code();
  _code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._Code)
}
#endif
void JSLoginResponse::set__code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._Code)
}
void JSLoginResponse::set__code(const char* value, size_t size) {
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._Code)
}
::std::string* JSLoginResponse::mutable__code() {
  set_has__code();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Code)
  return _code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__code() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._Code)
  clear_has__code();
  return _code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__code(::std::string* _code) {
  if (_code != NULL) {
    set_has__code();
  } else {
    clear_has__code();
  }
  _code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _code);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._Code)
}

// repeated .MMPro.micromsg.ScopeList _ScopeList = 4;
int JSLoginResponse::_scopelist_size() const {
  return _scopelist_.size();
}
void JSLoginResponse::clear__scopelist() {
  _scopelist_.Clear();
}
const ::MMPro::micromsg::ScopeList& JSLoginResponse::_scopelist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._ScopeList)
  return _scopelist_.Get(index);
}
::MMPro::micromsg::ScopeList* JSLoginResponse::mutable__scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._ScopeList)
  return _scopelist_.Mutable(index);
}
::MMPro::micromsg::ScopeList* JSLoginResponse::add__scopelist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.JSLoginResponse._ScopeList)
  return _scopelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::ScopeList >*
JSLoginResponse::mutable__scopelist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.JSLoginResponse._ScopeList)
  return &_scopelist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::ScopeList >&
JSLoginResponse::_scopelist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.JSLoginResponse._ScopeList)
  return _scopelist_;
}

// optional string _AppName = 5;
bool JSLoginResponse::has__appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JSLoginResponse::set_has__appname() {
  _has_bits_[0] |= 0x00000002u;
}
void JSLoginResponse::clear_has__appname() {
  _has_bits_[0] &= ~0x00000002u;
}
void JSLoginResponse::clear__appname() {
  _appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appname();
}
const ::std::string& JSLoginResponse::_appname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._AppName)
  return _appname_.GetNoArena();
}
void JSLoginResponse::set__appname(const ::std::string& value) {
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._AppName)
}
#if LANG_CXX11
void JSLoginResponse::set__appname(::std::string&& value) {
  set_has__appname();
  _appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._AppName)
}
#endif
void JSLoginResponse::set__appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._AppName)
}
void JSLoginResponse::set__appname(const char* value, size_t size) {
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._AppName)
}
::std::string* JSLoginResponse::mutable__appname() {
  set_has__appname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._AppName)
  return _appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__appname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._AppName)
  clear_has__appname();
  return _appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__appname(::std::string* _appname) {
  if (_appname != NULL) {
    set_has__appname();
  } else {
    clear_has__appname();
  }
  _appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._AppName)
}

// optional string _AppIConUrl = 6;
bool JSLoginResponse::has__appiconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JSLoginResponse::set_has__appiconurl() {
  _has_bits_[0] |= 0x00000004u;
}
void JSLoginResponse::clear_has__appiconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void JSLoginResponse::clear__appiconurl() {
  _appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appiconurl();
}
const ::std::string& JSLoginResponse::_appiconurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  return _appiconurl_.GetNoArena();
}
void JSLoginResponse::set__appiconurl(const ::std::string& value) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
#if LANG_CXX11
void JSLoginResponse::set__appiconurl(::std::string&& value) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
#endif
void JSLoginResponse::set__appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
void JSLoginResponse::set__appiconurl(const char* value, size_t size) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
::std::string* JSLoginResponse::mutable__appiconurl() {
  set_has__appiconurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  return _appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__appiconurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  clear_has__appiconurl();
  return _appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__appiconurl(::std::string* _appiconurl) {
  if (_appiconurl != NULL) {
    set_has__appiconurl();
  } else {
    clear_has__appiconurl();
  }
  _appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appiconurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}

// optional string _Openid = 7;
bool JSLoginResponse::has__openid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JSLoginResponse::set_has__openid() {
  _has_bits_[0] |= 0x00000008u;
}
void JSLoginResponse::clear_has__openid() {
  _has_bits_[0] &= ~0x00000008u;
}
void JSLoginResponse::clear__openid() {
  _openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__openid();
}
const ::std::string& JSLoginResponse::_openid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Openid)
  return _openid_.GetNoArena();
}
void JSLoginResponse::set__openid(const ::std::string& value) {
  set_has__openid();
  _openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._Openid)
}
#if LANG_CXX11
void JSLoginResponse::set__openid(::std::string&& value) {
  set_has__openid();
  _openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._Openid)
}
#endif
void JSLoginResponse::set__openid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__openid();
  _openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._Openid)
}
void JSLoginResponse::set__openid(const char* value, size_t size) {
  set_has__openid();
  _openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._Openid)
}
::std::string* JSLoginResponse::mutable__openid() {
  set_has__openid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Openid)
  return _openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__openid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._Openid)
  clear_has__openid();
  return _openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__openid(::std::string* _openid) {
  if (_openid != NULL) {
    set_has__openid();
  } else {
    clear_has__openid();
  }
  _openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _openid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._Openid)
}

// optional string _HasSessionKey = 8;
bool JSLoginResponse::has__hassessionkey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void JSLoginResponse::set_has__hassessionkey() {
  _has_bits_[0] |= 0x00000010u;
}
void JSLoginResponse::clear_has__hassessionkey() {
  _has_bits_[0] &= ~0x00000010u;
}
void JSLoginResponse::clear__hassessionkey() {
  _hassessionkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__hassessionkey();
}
const ::std::string& JSLoginResponse::_hassessionkey() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._HasSessionKey)
  return _hassessionkey_.GetNoArena();
}
void JSLoginResponse::set__hassessionkey(const ::std::string& value) {
  set_has__hassessionkey();
  _hassessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._HasSessionKey)
}
#if LANG_CXX11
void JSLoginResponse::set__hassessionkey(::std::string&& value) {
  set_has__hassessionkey();
  _hassessionkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._HasSessionKey)
}
#endif
void JSLoginResponse::set__hassessionkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__hassessionkey();
  _hassessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._HasSessionKey)
}
void JSLoginResponse::set__hassessionkey(const char* value, size_t size) {
  set_has__hassessionkey();
  _hassessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._HasSessionKey)
}
::std::string* JSLoginResponse::mutable__hassessionkey() {
  set_has__hassessionkey();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._HasSessionKey)
  return _hassessionkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__hassessionkey() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._HasSessionKey)
  clear_has__hassessionkey();
  return _hassessionkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__hassessionkey(::std::string* _hassessionkey) {
  if (_hassessionkey != NULL) {
    set_has__hassessionkey();
  } else {
    clear_has__hassessionkey();
  }
  _hassessionkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _hassessionkey);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._HasSessionKey)
}

// optional string _SessionTicket = 9;
bool JSLoginResponse::has__sessionticket() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void JSLoginResponse::set_has__sessionticket() {
  _has_bits_[0] |= 0x00000020u;
}
void JSLoginResponse::clear_has__sessionticket() {
  _has_bits_[0] &= ~0x00000020u;
}
void JSLoginResponse::clear__sessionticket() {
  _sessionticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__sessionticket();
}
const ::std::string& JSLoginResponse::_sessionticket() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._SessionTicket)
  return _sessionticket_.GetNoArena();
}
void JSLoginResponse::set__sessionticket(const ::std::string& value) {
  set_has__sessionticket();
  _sessionticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._SessionTicket)
}
#if LANG_CXX11
void JSLoginResponse::set__sessionticket(::std::string&& value) {
  set_has__sessionticket();
  _sessionticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._SessionTicket)
}
#endif
void JSLoginResponse::set__sessionticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__sessionticket();
  _sessionticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._SessionTicket)
}
void JSLoginResponse::set__sessionticket(const char* value, size_t size) {
  set_has__sessionticket();
  _sessionticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._SessionTicket)
}
::std::string* JSLoginResponse::mutable__sessionticket() {
  set_has__sessionticket();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._SessionTicket)
  return _sessionticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__sessionticket() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._SessionTicket)
  clear_has__sessionticket();
  return _sessionticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__sessionticket(::std::string* _sessionticket) {
  if (_sessionticket != NULL) {
    set_has__sessionticket();
  } else {
    clear_has__sessionticket();
  }
  _sessionticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _sessionticket);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._SessionTicket)
}

// optional uint32 _Lifespan = 10;
bool JSLoginResponse::has__lifespan() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void JSLoginResponse::set_has__lifespan() {
  _has_bits_[0] |= 0x00000400u;
}
void JSLoginResponse::clear_has__lifespan() {
  _has_bits_[0] &= ~0x00000400u;
}
void JSLoginResponse::clear__lifespan() {
  _lifespan_ = 0u;
  clear_has__lifespan();
}
::google::protobuf::uint32 JSLoginResponse::_lifespan() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Lifespan)
  return _lifespan_;
}
void JSLoginResponse::set__lifespan(::google::protobuf::uint32 value) {
  set_has__lifespan();
  _lifespan_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._Lifespan)
}

// optional string _State = 11;
bool JSLoginResponse::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void JSLoginResponse::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
void JSLoginResponse::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
void JSLoginResponse::clear__state() {
  _state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__state();
}
const ::std::string& JSLoginResponse::_state() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._State)
  return _state_.GetNoArena();
}
void JSLoginResponse::set__state(const ::std::string& value) {
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._State)
}
#if LANG_CXX11
void JSLoginResponse::set__state(::std::string&& value) {
  set_has__state();
  _state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._State)
}
#endif
void JSLoginResponse::set__state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._State)
}
void JSLoginResponse::set__state(const char* value, size_t size) {
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._State)
}
::std::string* JSLoginResponse::mutable__state() {
  set_has__state();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._State)
  return _state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__state() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._State)
  clear_has__state();
  return _state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__state(::std::string* _state) {
  if (_state != NULL) {
    set_has__state();
  } else {
    clear_has__state();
  }
  _state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _state);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._State)
}

// optional string _Signature = 12;
bool JSLoginResponse::has__signature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void JSLoginResponse::set_has__signature() {
  _has_bits_[0] |= 0x00000080u;
}
void JSLoginResponse::clear_has__signature() {
  _has_bits_[0] &= ~0x00000080u;
}
void JSLoginResponse::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
const ::std::string& JSLoginResponse::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Signature)
  return _signature_.GetNoArena();
}
void JSLoginResponse::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._Signature)
}
#if LANG_CXX11
void JSLoginResponse::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._Signature)
}
#endif
void JSLoginResponse::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._Signature)
}
void JSLoginResponse::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._Signature)
}
::std::string* JSLoginResponse::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSLoginResponse::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSLoginResponse::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._Signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
