// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BizProfileV2Resp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BizProfileV2Resp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class BizAccountInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAccountInfo> {
} _BizAccountInfo_default_instance_;
class BizBaseInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizBaseInfo> {
} _BizBaseInfo_default_instance_;
class CommMsgBaseInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CommMsgBaseInfo> {
} _CommMsgBaseInfo_default_instance_;
class BizTextMsgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizTextMsgInfo> {
} _BizTextMsgInfo_default_instance_;
class BizImageMsgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizImageMsgInfo> {
} _BizImageMsgInfo_default_instance_;
class BizVoiceMsgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizVoiceMsgInfo> {
} _BizVoiceMsgInfo_default_instance_;
class BizVideoMsgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizVideoMsgInfo> {
} _BizVideoMsgInfo_default_instance_;
class BizAppMsgBaseInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppMsgBaseInfo> {
} _BizAppMsgBaseInfo_default_instance_;
class BizProfileFinderLiveInfo_MediaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileFinderLiveInfo_Media> {
} _BizProfileFinderLiveInfo_Media_default_instance_;
class BizProfileFinderLiveInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileFinderLiveInfo> {
} _BizProfileFinderLiveInfo_default_instance_;
class BizAppMsgDetailInfo_PicUrlsMsg_PicInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppMsgDetailInfo_PicUrlsMsg_PicInfo> {
} _BizAppMsgDetailInfo_PicUrlsMsg_PicInfo_default_instance_;
class BizAppMsgDetailInfo_PicUrlsMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppMsgDetailInfo_PicUrlsMsg> {
} _BizAppMsgDetailInfo_PicUrlsMsg_default_instance_;
class BizAppMsgDetailInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppMsgDetailInfo> {
} _BizAppMsgDetailInfo_default_instance_;
class BizAppMsgInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppMsgInfo> {
} _BizAppMsgInfo_default_instance_;
class BizMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizMessage> {
} _BizMessage_default_instance_;
class BizProfileV2PagingInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileV2PagingInfo> {
} _BizProfileV2PagingInfo_default_instance_;
class BizMessageListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizMessageList> {
} _BizMessageList_default_instance_;
class BizBrandItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizBrandItem> {
} _BizBrandItem_default_instance_;
class BizBrandBlockDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizBrandBlock> {
} _BizBrandBlock_default_instance_;
class BizBrandInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizBrandInfo> {
} _BizBrandInfo_default_instance_;
class BizServiceMenuButtonDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizServiceMenuButton> {
} _BizServiceMenuButton_default_instance_;
class BizServiceMenuDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizServiceMenu> {
} _BizServiceMenu_default_instance_;
class BizServiceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizServiceInfo> {
} _BizServiceInfo_default_instance_;
class BizTopicDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizTopic> {
} _BizTopic_default_instance_;
class BizTopicListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizTopicList> {
} _BizTopicList_default_instance_;
class BizVideoFinderInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizVideoFinderInfo> {
} _BizVideoFinderInfo_default_instance_;
class FinderLiveNoticeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FinderLiveNoticeInfo> {
} _FinderLiveNoticeInfo_default_instance_;
class ProfileSetting_SettingDescDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProfileSetting_SettingDesc> {
} _ProfileSetting_SettingDesc_default_instance_;
class ProfileSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ProfileSetting> {
} _ProfileSetting_default_instance_;
class BizNameCardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizNameCard> {
} _BizNameCard_default_instance_;
class WxaEcEntranceInfo_WxaEcLiteAppJumpInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WxaEcEntranceInfo_WxaEcLiteAppJumpInfo> {
} _WxaEcEntranceInfo_WxaEcLiteAppJumpInfo_default_instance_;
class WxaEcEntranceInfo_MiniAppConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WxaEcEntranceInfo_MiniAppConfig> {
} _WxaEcEntranceInfo_MiniAppConfig_default_instance_;
class WxaEcEntranceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WxaEcEntranceInfo> {
} _WxaEcEntranceInfo_default_instance_;
class BizProfileV2Resp_FuncFlagDescDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileV2Resp_FuncFlagDesc> {
} _BizProfileV2Resp_FuncFlagDesc_default_instance_;
class BizProfileV2Resp_FinderLiveNoticeExtinfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileV2Resp_FinderLiveNoticeExtinfo> {
} _BizProfileV2Resp_FinderLiveNoticeExtinfo_default_instance_;
class BizProfileV2RespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizProfileV2Resp> {
} _BizProfileV2Resp_default_instance_;

namespace protobuf_BizProfileV2Resp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[36];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _bantype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _banreason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _userrole_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAccountInfo, _servicetype_),
  0,
  2,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _originalarticlecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _friendsubscribecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _issubscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _originalcontentstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _friendsubscribestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBaseInfo, _bizrecommendurl_),
  3,
  4,
  5,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _funcflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommMsgBaseInfo, _uniqueid_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTextMsgInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTextMsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTextMsgInfo, _content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _fileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _masterid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _cdnurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizImageMsgInfo, _contenturl_),
  2,
  3,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _fileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _voicelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _vocieid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVoiceMsgInfo, _contenturl_),
  3,
  4,
  5,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoMsgInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoMsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _appmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgBaseInfo, _bigpic_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo_Media, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo_Media, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo_Media, _coverurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo_Media, _height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo_Media, _width_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _finderusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _findernonceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _exportid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _headurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _livestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _livesourcetypestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _extflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _authiconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _authicontypestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _media_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileFinderLiveInfo, _category_),
  0,
  1,
  2,
  3,
  4,
  5,
  11,
  6,
  12,
  7,
  8,
  10,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo, _picurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo, _width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo, _height_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg, _picinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg, _picurlv1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo_PicUrlsMsg, _picurlv1preload_),
  ~0u,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _digest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _itemindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _contenturl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _sourceurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _coverimageurl1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _coverimageurl11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _coverimageurl2351_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _itemshowtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _audioid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _audioration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _audioplayurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _videoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _videowidth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _videoheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _videoduration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _showdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _authordesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _piccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _ispaysubscribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _ispaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _picurls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _coverimageurl169_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _coverimageurl16960_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _finderfeedxml_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _finderlive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _voiceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _nonceid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgDetailInfo, _voicetype_),
  0,
  1,
  19,
  2,
  3,
  4,
  5,
  6,
  20,
  21,
  22,
  7,
  8,
  23,
  24,
  25,
  9,
  10,
  26,
  27,
  28,
  17,
  11,
  12,
  13,
  18,
  30,
  31,
  14,
  15,
  16,
  29,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgInfo, _baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppMsgInfo, _detailinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _video_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessage, _appmsg_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2PagingInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2PagingInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2PagingInfo, _offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2PagingInfo, _isend_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _paginginfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _featuredlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizMessageList, _featuredupdatetime_),
  ~0u,
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _fontsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _fontcolor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _lineheight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandItem, _fontstyle_),
  0,
  2,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandBlock, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandBlock, _title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandBlock, _items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandBlock, _useseparator_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizBrandInfo, _brandblock_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _subbuttonlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _acttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenuButton, _nativeurl_),
  4,
  5,
  0,
  1,
  2,
  ~0u,
  6,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _uin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _interactivemode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _buttonlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceMenu, _type_),
  0,
  1,
  2,
  ~0u,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizServiceInfo, _menuinfo_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _topicname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _topicdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _topicurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopic, _topicid_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopicList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopicList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopicList, _title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizTopicList, _topic_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoFinderInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoFinderInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoFinderInfo, _username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizVideoFinderInfo, _nickname_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _starttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _reservestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _introduction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FinderLiveNoticeInfo, _noticeid_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting_SettingDesc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting_SettingDesc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting_SettingDesc, _funcflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting_SettingDesc, _wording_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting, _blockfinder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProfileSetting, _settingwording_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizNameCard, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizNameCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizNameCard, _buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizNameCard, _signature_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo, _appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo, _path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo, _query_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _fetchinfoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo_MiniAppConfig, _appusername_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _isshow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _tailicon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _wording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _jumpinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _isshoptag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _isownshop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _jumptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WxaEcEntranceInfo, _miniappinfo_),
  4,
  0,
  1,
  2,
  5,
  6,
  7,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FuncFlagDesc, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FuncFlagDesc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FuncFlagDesc, _funcflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FuncFlagDesc, _wording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FuncFlagDesc, _jumpurl_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FinderLiveNoticeExtinfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FinderLiveNoticeExtinfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FinderLiveNoticeExtinfo, _totalnoticecnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FinderLiveNoticeExtinfo, _totalreservedcnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp_FinderLiveNoticeExtinfo, _continueflag_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _accountinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _bizbaseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _msglist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _brandinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _videolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _serviceinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _funcflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _funcflagwording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _preload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _searchguideinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _biztopiclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _bizvideofinderinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _shortmsglist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _videotabtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _shortmsgtabtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _liveinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _findervideoisbizmode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _namecard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _liveextinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _ipwording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _wxaecentranceinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _showsubbizrec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizProfileV2Resp, _audiotabtype_),
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  16,
  ~0u,
  17,
  0,
  9,
  10,
  11,
  18,
  19,
  ~0u,
  20,
  12,
  13,
  14,
  1,
  15,
  21,
  22,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(BizAccountInfo)},
  { 15, 26, sizeof(BizBaseInfo)},
  { 32, 43, sizeof(CommMsgBaseInfo)},
  { 49, 55, sizeof(BizTextMsgInfo)},
  { 56, 66, sizeof(BizImageMsgInfo)},
  { 71, 82, sizeof(BizVoiceMsgInfo)},
  { 88, 93, sizeof(BizVideoMsgInfo)},
  { 93, 103, sizeof(BizAppMsgBaseInfo)},
  { 108, 116, sizeof(BizProfileFinderLiveInfo_Media)},
  { 119, 137, sizeof(BizProfileFinderLiveInfo)},
  { 150, 158, sizeof(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo)},
  { 161, 169, sizeof(BizAppMsgDetailInfo_PicUrlsMsg)},
  { 172, 209, sizeof(BizAppMsgDetailInfo)},
  { 241, 248, sizeof(BizAppMsgInfo)},
  { 250, 261, sizeof(BizMessage)},
  { 267, 274, sizeof(BizProfileV2PagingInfo)},
  { 276, 285, sizeof(BizMessageList)},
  { 289, 299, sizeof(BizBrandItem)},
  { 304, 312, sizeof(BizBrandBlock)},
  { 315, 321, sizeof(BizBrandInfo)},
  { 322, 335, sizeof(BizServiceMenuButton)},
  { 343, 354, sizeof(BizServiceMenu)},
  { 360, 366, sizeof(BizServiceInfo)},
  { 367, 376, sizeof(BizTopic)},
  { 380, 387, sizeof(BizTopicList)},
  { 389, 396, sizeof(BizVideoFinderInfo)},
  { 398, 407, sizeof(FinderLiveNoticeInfo)},
  { 411, 418, sizeof(ProfileSetting_SettingDesc)},
  { 420, 427, sizeof(ProfileSetting)},
  { 429, 436, sizeof(BizNameCard)},
  { 438, 446, sizeof(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo)},
  { 449, 458, sizeof(WxaEcEntranceInfo_MiniAppConfig)},
  { 462, 475, sizeof(WxaEcEntranceInfo)},
  { 483, 491, sizeof(BizProfileV2Resp_FuncFlagDesc)},
  { 494, 502, sizeof(BizProfileV2Resp_FinderLiveNoticeExtinfo)},
  { 505, 535, sizeof(BizProfileV2Resp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAccountInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommMsgBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizTextMsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizImageMsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizVoiceMsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizVideoMsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppMsgBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileFinderLiveInfo_Media_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileFinderLiveInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppMsgDetailInfo_PicUrlsMsg_PicInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppMsgDetailInfo_PicUrlsMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppMsgDetailInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppMsgInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileV2PagingInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizMessageList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizBrandItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizBrandBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizBrandInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizServiceMenuButton_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizServiceMenu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizServiceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizTopic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizTopicList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizVideoFinderInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FinderLiveNoticeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfileSetting_SettingDesc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ProfileSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizNameCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WxaEcEntranceInfo_WxaEcLiteAppJumpInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WxaEcEntranceInfo_MiniAppConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WxaEcEntranceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileV2Resp_FuncFlagDesc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileV2Resp_FinderLiveNoticeExtinfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizProfileV2Resp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "BizProfileV2Resp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 36);
}

}  // namespace

void TableStruct::Shutdown() {
  _BizAccountInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BizBaseInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CommMsgBaseInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _BizTextMsgInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _BizImageMsgInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _BizVoiceMsgInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _BizVideoMsgInfo_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _BizAppMsgBaseInfo_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _BizProfileFinderLiveInfo_Media_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _BizProfileFinderLiveInfo_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _BizAppMsgDetailInfo_PicUrlsMsg_PicInfo_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _BizAppMsgDetailInfo_PicUrlsMsg_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _BizAppMsgDetailInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _BizAppMsgInfo_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _BizMessage_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _BizProfileV2PagingInfo_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _BizMessageList_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _BizBrandItem_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _BizBrandBlock_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _BizBrandInfo_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _BizServiceMenuButton_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _BizServiceMenu_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _BizServiceInfo_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _BizTopic_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _BizTopicList_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _BizVideoFinderInfo_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _FinderLiveNoticeInfo_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _ProfileSetting_SettingDesc_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _ProfileSetting_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _BizNameCard_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _WxaEcEntranceInfo_WxaEcLiteAppJumpInfo_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _WxaEcEntranceInfo_MiniAppConfig_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _WxaEcEntranceInfo_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _BizProfileV2Resp_FuncFlagDesc_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _BizProfileV2Resp_FinderLiveNoticeExtinfo_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _BizProfileV2Resp_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::InitDefaults();
  _BizAccountInfo_default_instance_.DefaultConstruct();
  _BizBaseInfo_default_instance_.DefaultConstruct();
  _CommMsgBaseInfo_default_instance_.DefaultConstruct();
  _BizTextMsgInfo_default_instance_.DefaultConstruct();
  _BizImageMsgInfo_default_instance_.DefaultConstruct();
  _BizVoiceMsgInfo_default_instance_.DefaultConstruct();
  _BizVideoMsgInfo_default_instance_.DefaultConstruct();
  _BizAppMsgBaseInfo_default_instance_.DefaultConstruct();
  _BizProfileFinderLiveInfo_Media_default_instance_.DefaultConstruct();
  _BizProfileFinderLiveInfo_default_instance_.DefaultConstruct();
  _BizAppMsgDetailInfo_PicUrlsMsg_PicInfo_default_instance_.DefaultConstruct();
  _BizAppMsgDetailInfo_PicUrlsMsg_default_instance_.DefaultConstruct();
  _BizAppMsgDetailInfo_default_instance_.DefaultConstruct();
  _BizAppMsgInfo_default_instance_.DefaultConstruct();
  _BizMessage_default_instance_.DefaultConstruct();
  _BizProfileV2PagingInfo_default_instance_.DefaultConstruct();
  _BizMessageList_default_instance_.DefaultConstruct();
  _BizBrandItem_default_instance_.DefaultConstruct();
  _BizBrandBlock_default_instance_.DefaultConstruct();
  _BizBrandInfo_default_instance_.DefaultConstruct();
  _BizServiceMenuButton_default_instance_.DefaultConstruct();
  _BizServiceMenu_default_instance_.DefaultConstruct();
  _BizServiceInfo_default_instance_.DefaultConstruct();
  _BizTopic_default_instance_.DefaultConstruct();
  _BizTopicList_default_instance_.DefaultConstruct();
  _BizVideoFinderInfo_default_instance_.DefaultConstruct();
  _FinderLiveNoticeInfo_default_instance_.DefaultConstruct();
  _ProfileSetting_SettingDesc_default_instance_.DefaultConstruct();
  _ProfileSetting_default_instance_.DefaultConstruct();
  _BizNameCard_default_instance_.DefaultConstruct();
  _WxaEcEntranceInfo_WxaEcLiteAppJumpInfo_default_instance_.DefaultConstruct();
  _WxaEcEntranceInfo_MiniAppConfig_default_instance_.DefaultConstruct();
  _WxaEcEntranceInfo_default_instance_.DefaultConstruct();
  _BizProfileV2Resp_FuncFlagDesc_default_instance_.DefaultConstruct();
  _BizProfileV2Resp_FinderLiveNoticeExtinfo_default_instance_.DefaultConstruct();
  _BizProfileV2Resp_default_instance_.DefaultConstruct();
  _BizProfileFinderLiveInfo_default_instance_.get_mutable()->_media_ = const_cast< ::MMPro::micromsg::BizProfileFinderLiveInfo_Media*>(
      ::MMPro::micromsg::BizProfileFinderLiveInfo_Media::internal_default_instance());
  _BizAppMsgDetailInfo_default_instance_.get_mutable()->_picurls_ = const_cast< ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg*>(
      ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg::internal_default_instance());
  _BizAppMsgDetailInfo_default_instance_.get_mutable()->_finderlive_ = const_cast< ::MMPro::micromsg::BizProfileFinderLiveInfo*>(
      ::MMPro::micromsg::BizProfileFinderLiveInfo::internal_default_instance());
  _BizAppMsgInfo_default_instance_.get_mutable()->_baseinfo_ = const_cast< ::MMPro::micromsg::BizAppMsgBaseInfo*>(
      ::MMPro::micromsg::BizAppMsgBaseInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_baseinfo_ = const_cast< ::MMPro::micromsg::CommMsgBaseInfo*>(
      ::MMPro::micromsg::CommMsgBaseInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_text_ = const_cast< ::MMPro::micromsg::BizTextMsgInfo*>(
      ::MMPro::micromsg::BizTextMsgInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_image_ = const_cast< ::MMPro::micromsg::BizImageMsgInfo*>(
      ::MMPro::micromsg::BizImageMsgInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_voice_ = const_cast< ::MMPro::micromsg::BizVoiceMsgInfo*>(
      ::MMPro::micromsg::BizVoiceMsgInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_video_ = const_cast< ::MMPro::micromsg::BizVideoMsgInfo*>(
      ::MMPro::micromsg::BizVideoMsgInfo::internal_default_instance());
  _BizMessage_default_instance_.get_mutable()->_appmsg_ = const_cast< ::MMPro::micromsg::BizAppMsgInfo*>(
      ::MMPro::micromsg::BizAppMsgInfo::internal_default_instance());
  _BizMessageList_default_instance_.get_mutable()->_paginginfo_ = const_cast< ::MMPro::micromsg::BizProfileV2PagingInfo*>(
      ::MMPro::micromsg::BizProfileV2PagingInfo::internal_default_instance());
  _BizServiceInfo_default_instance_.get_mutable()->_menuinfo_ = const_cast< ::MMPro::micromsg::BizServiceMenu*>(
      ::MMPro::micromsg::BizServiceMenu::internal_default_instance());
  _WxaEcEntranceInfo_default_instance_.get_mutable()->_jumpinfo_ = const_cast< ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo*>(
      ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::internal_default_instance());
  _WxaEcEntranceInfo_default_instance_.get_mutable()->_miniappinfo_ = const_cast< ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig*>(
      ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_baseresponse_ = const_cast< ::MMPro::micromsg::BaseResponse*>(
      ::MMPro::micromsg::BaseResponse::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_accountinfo_ = const_cast< ::MMPro::micromsg::BizAccountInfo*>(
      ::MMPro::micromsg::BizAccountInfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_bizbaseinfo_ = const_cast< ::MMPro::micromsg::BizBaseInfo*>(
      ::MMPro::micromsg::BizBaseInfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_msglist_ = const_cast< ::MMPro::micromsg::BizMessageList*>(
      ::MMPro::micromsg::BizMessageList::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_brandinfo_ = const_cast< ::MMPro::micromsg::BizBrandInfo*>(
      ::MMPro::micromsg::BizBrandInfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_videolist_ = const_cast< ::MMPro::micromsg::BizMessageList*>(
      ::MMPro::micromsg::BizMessageList::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_serviceinfo_ = const_cast< ::MMPro::micromsg::BizServiceInfo*>(
      ::MMPro::micromsg::BizServiceInfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_biztopiclist_ = const_cast< ::MMPro::micromsg::BizTopicList*>(
      ::MMPro::micromsg::BizTopicList::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_bizvideofinderinfo_ = const_cast< ::MMPro::micromsg::BizVideoFinderInfo*>(
      ::MMPro::micromsg::BizVideoFinderInfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_shortmsglist_ = const_cast< ::MMPro::micromsg::BizMessageList*>(
      ::MMPro::micromsg::BizMessageList::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_setting_ = const_cast< ::MMPro::micromsg::ProfileSetting*>(
      ::MMPro::micromsg::ProfileSetting::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_namecard_ = const_cast< ::MMPro::micromsg::BizNameCard*>(
      ::MMPro::micromsg::BizNameCard::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_liveextinfo_ = const_cast< ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo*>(
      ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo::internal_default_instance());
  _BizProfileV2Resp_default_instance_.get_mutable()->_wxaecentranceinfo_ = const_cast< ::MMPro::micromsg::WxaEcEntranceInfo*>(
      ::MMPro::micromsg::WxaEcEntranceInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026BizProfileV2Resp.proto\022\016MMPro.micromsg"
      "\032\022BaseResponse.proto\"r\n\016BizAccountInfo\022\021"
      "\n\t_UserName\030\001 \001(\t\022\020\n\010_BanType\030\002 \001(\r\022\022\n\n_"
      "BanReason\030\003 \001(\t\022\021\n\t_UserRole\030\004 \001(\r\022\024\n\014_S"
      "erviceType\030\005 \001(\r\"\266\001\n\013BizBaseInfo\022\035\n\025_Ori"
      "ginalArticleCount\030\001 \001(\005\022\035\n\025_FriendSubscr"
      "ibeCount\030\002 \001(\005\022\025\n\r_IsSubscribed\030\003 \001(\005\022\033\n"
      "\023_OriginalContentStr\030\004 \001(\t\022\033\n\023_FriendSub"
      "scribeStr\030\005 \001(\t\022\030\n\020_BizRecommendUrl\030\007 \001("
      "\t\"}\n\017CommMsgBaseInfo\022\016\n\006_MsgId\030\001 \001(\r\022\020\n\010"
      "_MsgType\030\002 \001(\r\022\021\n\t_DateTime\030\003 \001(\r\022\017\n\007_St"
      "atus\030\004 \001(\r\022\021\n\t_FuncFlag\030\005 \001(\r\022\021\n\t_Unique"
      "Id\030\006 \001(\t\"\"\n\016BizTextMsgInfo\022\020\n\010_Content\030\001"
      " \001(\t\"l\n\017BizImageMsgInfo\022\017\n\007_FileId\030\001 \001(\r"
      "\022\017\n\007_Length\030\002 \001(\r\022\021\n\t_MasterId\030\003 \001(\004\022\017\n\007"
      "_CdnUrl\030\004 \001(\t\022\023\n\013_ContentUrl\030\005 \001(\t\"\200\001\n\017B"
      "izVoiceMsgInfo\022\017\n\007_FileId\030\001 \001(\r\022\017\n\007_Leng"
      "th\030\002 \001(\r\022\024\n\014_VoiceLength\030\003 \001(\r\022\016\n\006_Title"
      "\030\004 \001(\t\022\020\n\010_VocieId\030\005 \001(\t\022\023\n\013_ContentUrl\030"
      "\006 \001(\t\"\021\n\017BizVideoMsgInfo\"p\n\021BizAppMsgBas"
      "eInfo\022\021\n\t_AppMsgId\030\001 \001(\r\022\023\n\013_CreateTime\030"
      "\002 \001(\r\022\023\n\013_UpdateTime\030\003 \001(\r\022\r\n\005_Type\030\004 \001("
      "\r\022\017\n\007_BigPic\030\005 \001(\r\"\225\003\n\030BizProfileFinderL"
      "iveInfo\022\027\n\017_FinderUserName\030\001 \001(\t\022\026\n\016_Fin"
      "derNonceId\030\002 \001(\t\022\021\n\t_ExportId\030\003 \001(\t\022\021\n\t_"
      "NickName\030\004 \001(\t\022\020\n\010_HeadUrl\030\005 \001(\t\022\r\n\005_Des"
      "c\030\006 \001(\t\022\023\n\013_LiveStatus\030\007 \001(\r\022\032\n\022_LiveSou"
      "rceTypeStr\030\010 \001(\t\022\020\n\010_ExtFlag\030\t \001(\r\022\024\n\014_A"
      "uthIConUrl\030\n \001(\t\022\030\n\020_AuthIConTypeStr\030\013 \001"
      "(\t\022>\n\006_Media\030\014 \001(\0132..MMPro.micromsg.BizP"
      "rofileFinderLiveInfo.Media\022\021\n\t_CateGory\030"
      "\r \001(\t\032;\n\005Media\022\021\n\t_CoverUrl\030\001 \001(\t\022\017\n\007_He"
      "ight\030\002 \001(\r\022\016\n\006_Width\030\003 \001(\r\"\325\007\n\023BizAppMsg"
      "DetailInfo\022\016\n\006_Title\030\001 \001(\t\022\017\n\007_Digest\030\002 "
      "\001(\t\022\022\n\n_ItemIndex\030\004 \001(\r\022\023\n\013_ContentUrl\030\005"
      " \001(\t\022\022\n\n_SourceUrl\030\006 \001(\t\022\027\n\017_CoverImageU"
      "rl1\030\007 \001(\t\022\030\n\020_CoverImageUrl11\030\010 \001(\t\022\032\n\022_"
      "CoverImageUrl2351\030\t \001(\t\022\025\n\r_ItemShowType"
      "\030\n \001(\r\022\020\n\010_AudioId\030\016 \001(\r\022\024\n\014_AudioRation"
      "\030\017 \001(\r\022\025\n\r_AudioPlayUrl\030\020 \001(\t\022\020\n\010_VideoI"
      "d\030\021 \001(\t\022\023\n\013_VideoWidth\030\022 \001(\r\022\024\n\014_VideoHe"
      "ight\030\023 \001(\r\022\026\n\016_VideoDuration\030\024 \001(\r\022\021\n\t_S"
      "howDesc\030\025 \001(\t\022\023\n\013_AuthorDesc\030\026 \001(\t\022\021\n\t_P"
      "icCount\030\034 \001(\r\022\027\n\017_isPaySubscribe\030\035 \001(\r\022\017"
      "\n\007_isPaid\030\036 \001(\r\022@\n\010_PicUrls\030\037 \001(\0132..MMPr"
      "o.micromsg.BizAppMsgDetailInfo.PicUrlsMs"
      "g\022\031\n\021_CoverImageUrl169\030  \001(\t\022\033\n\023_CoverIm"
      "ageuRL16960\030! \001(\t\022\026\n\016_FinderFeedXml\030$ \001("
      "\t\022=\n\013_FinderLive\030\' \001(\0132(.MMPro.micromsg."
      "BizProfileFinderLiveInfo\022\023\n\013_Createtime\030"
      "* \001(\r\022\016\n\006_MsgId\030+ \001(\r\022\020\n\010_VoiceId\030- \001(\t\022"
      "\014\n\004_Tid\030. \001(\t\022\020\n\010_NonceId\030/ \001(\t\022\022\n\n_voic"
      "eType\0300 \001(\r\032\304\001\n\nPicUrlsMsg\022L\n\014_PicInfoLi"
      "st\030\001 \003(\01326.MMPro.micromsg.BizAppMsgDetai"
      "lInfo.PicUrlsMsg.PicInfo\022\021\n\t_PiCUrlV1\030\002 "
      "\003(\t\022\030\n\020_PicUrlV1Preload\030\003 \001(\003\032;\n\007PicInfo"
      "\022\017\n\007_PicUrl\030\001 \001(\t\022\016\n\006_Width\030\002 \001(\r\022\017\n\007_He"
      "ight\030\003 \001(\r\"\177\n\rBizAppMsgInfo\0224\n\t_BaseInfo"
      "\030\001 \001(\0132!.MMPro.micromsg.BizAppMsgBaseInf"
      "o\0228\n\013_DetailInfo\030\002 \003(\0132#.MMPro.micromsg."
      "BizAppMsgDetailInfo\"\262\002\n\nBizMessage\0222\n\t_B"
      "aseInfo\030\001 \001(\0132\037.MMPro.micromsg.CommMsgBa"
      "seInfo\022-\n\005_Text\030\002 \001(\0132\036.MMPro.micromsg.B"
      "izTextMsgInfo\022/\n\006_Image\030\003 \001(\0132\037.MMPro.mi"
      "cromsg.BizImageMsgInfo\022/\n\006_Voice\030\004 \001(\0132\037"
      ".MMPro.micromsg.BizVoiceMsgInfo\022/\n\006_Vide"
      "o\030\005 \001(\0132\037.MMPro.micromsg.BizVideoMsgInfo"
      "\022.\n\007_AppMsg\030\006 \001(\0132\035.MMPro.micromsg.BizAp"
      "pMsgInfo\"9\n\026BizProfileV2PagingInfo\022\017\n\007_O"
      "ffset\030\001 \001(\014\022\016\n\006_IsEnd\030\002 \001(\r\"\307\001\n\016BizMessa"
      "geList\022(\n\004_Msg\030\001 \003(\0132\032.MMPro.micromsg.Bi"
      "zMessage\022;\n\013_PagingInfo\030\005 \001(\0132&.MMPro.mi"
      "cromsg.BizProfileV2PagingInfo\0221\n\r_Featur"
      "edList\030\006 \003(\0132\032.MMPro.micromsg.BizMessage"
      "\022\033\n\023_FeaturedUpdateTime\030\007 \001(\r\"m\n\014BizBran"
      "dItem\022\r\n\005_Text\030\001 \001(\t\022\021\n\t_FontSize\030\002 \001(\r\022"
      "\022\n\n_FontColor\030\003 \001(\t\022\023\n\013_LineHeight\030\004 \001(\r"
      "\022\022\n\n_FontStyle\030\005 \001(\r\"d\n\rBizBrandBlock\022\016\n"
      "\006_Title\030\001 \001(\t\022,\n\006_Items\030\002 \003(\0132\034.MMPro.mi"
      "cromsg.BizBrandItem\022\025\n\r_UseSeparator\030\003 \001"
      "(\010\"B\n\014BizBrandInfo\0222\n\013_BrandBlock\030\001 \003(\0132"
      "\035.MMPro.micromsg.BizBrandBlock\"\303\001\n\024BizSe"
      "rviceMenuButton\022\013\n\003_Id\030\001 \001(\r\022\r\n\005_Type\030\002 "
      "\001(\r\022\r\n\005_Name\030\003 \001(\t\022\014\n\004_Key\030\004 \001(\t\022\016\n\006_Val"
      "ue\030\005 \001(\t\022<\n\016_SubButtonList\030\006 \003(\0132$.MMPro"
      ".micromsg.BizServiceMenuButton\022\020\n\010_ActTy"
      "pe\030\007 \001(\r\022\022\n\n_NativeUrl\030\010 \001(\t\"\251\001\n\016BizServ"
      "iceMenu\022\014\n\004_Uin\030\001 \001(\r\022\030\n\020_InteractiveMod"
      "e\030\002 \001(\r\022\023\n\013_UpdateTime\030\003 \001(\r\0229\n\013_ButtonL"
      "ist\030\004 \003(\0132$.MMPro.micromsg.BizServiceMen"
      "uButton\022\020\n\010_Version\030\005 \001(\r\022\r\n\005_Type\030\006 \001(\r"
      "\"C\n\016BizServiceInfo\0221\n\t_MenuInfo\030\001 \001(\0132\036."
      "MMPro.micromsg.BizServiceMenu\"W\n\010BizTopi"
      "c\022\022\n\n_TopicName\030\001 \001(\t\022\022\n\n_TopicDesc\030\002 \001("
      "\t\022\021\n\t_TopicUrl\030\003 \001(\t\022\020\n\010_TopicID\030\004 \001(\004\"H"
      "\n\014BizTopicList\022\016\n\006_Title\030\001 \001(\t\022(\n\006_Topic"
      "\030\002 \003(\0132\030.MMPro.micromsg.BizTopic\":\n\022BizV"
      "ideoFinderInfo\022\021\n\t_UserName\030\001 \001(\t\022\021\n\t_Ni"
      "ckName\030\002 \001(\t\"l\n\024FinderLiveNoticeInfo\022\022\n\n"
      "_StartTime\030\001 \001(\r\022\026\n\016_ReserveStatus\030\002 \001(\r"
      "\022\025\n\r_Introduction\030\003 \001(\t\022\021\n\t_NoticeID\030\004 \001"
      "(\t\"\237\001\n\016ProfileSetting\022\024\n\014_BlockFinder\030\001 "
      "\001(\r\022C\n\017_SettingWording\030\002 \003(\0132*.MMPro.mic"
      "romsg.ProfileSetting.SettingDesc\0322\n\013Sett"
      "ingDesc\022\021\n\t_FuncFlag\030\001 \001(\r\022\020\n\010_Wording\030\002"
      " \001(\t\"2\n\013BizNameCard\022\017\n\007_Buffer\030\001 \001(\t\022\022\n\n"
      "_Signature\030\002 \001(\t\"\271\003\n\021WxaEcEntranceInfo\022\017"
      "\n\007_IsShow\030\001 \001(\r\022\021\n\t_TailIcon\030\002 \001(\t\022\020\n\010_W"
      "ording\030\003 \001(\t\022I\n\t_JumpInfo\030\004 \001(\01326.MMPro."
      "micromsg.WxaEcEntranceInfo.WxaEcLiteAppJ"
      "umpInfo\022\022\n\n_IsShopTag\030\005 \001(\r\022\022\n\n_IsOwnSho"
      "p\030\006 \001(\r\022\021\n\t_JumpType\030\007 \001(\r\022E\n\014_MiniappIn"
      "fo\030\010 \001(\0132/.MMPro.micromsg.WxaEcEntranceI"
      "nfo.MiniAppConfig\032E\n\024WxaEcLiteAppJumpInf"
      "o\022\016\n\006_AppID\030\001 \001(\t\022\r\n\005_Path\030\002 \001(\t\022\016\n\006_Que"
      "ry\030\003 \001(\t\032Z\n\rMiniAppConfig\022\016\n\006_AppID\030\001 \001("
      "\t\022\r\n\005_Path\030\002 \001(\t\022\024\n\014_FetchInfoId\030\003 \001(\t\022\024"
      "\n\014_AppUsername\030\004 \001(\t\"\235\n\n\020BizProfileV2Res"
      "p\0223\n\r_BaseResponse\030\001 \002(\0132\034.MMPro.microms"
      "g.BaseResponse\0224\n\014_AccountInfo\030\002 \001(\0132\036.M"
      "MPro.micromsg.BizAccountInfo\0221\n\014_BizBase"
      "Info\030\003 \001(\0132\033.MMPro.micromsg.BizBaseInfo\022"
      "0\n\010_MsgList\030\004 \001(\0132\036.MMPro.micromsg.BizMe"
      "ssageList\0220\n\n_BrandInfo\030\005 \001(\0132\034.MMPro.mi"
      "cromsg.BizBrandInfo\0222\n\n_VideoList\030\006 \001(\0132"
      "\036.MMPro.micromsg.BizMessageList\0224\n\014_Serv"
      "iceInfo\030\007 \001(\0132\036.MMPro.micromsg.BizServic"
      "eInfo\022\021\n\t_FuncFlag\030\010 \001(\r\022G\n\020_FuncFlagWor"
      "ding\030\t \003(\0132-.MMPro.micromsg.BizProfileV2"
      "Resp.FuncFlagDesc\022\020\n\010_PreLoad\030\n \001(\r\022\030\n\020_"
      "SearchGuideInfo\030\014 \001(\t\0223\n\r_BizTopicList\030\r"
      " \001(\0132\034.MMPro.micromsg.BizTopicList\022\?\n\023_B"
      "izVideoFinderInfo\030\016 \001(\0132\".MMPro.micromsg"
      ".BizVideoFinderInfo\0225\n\r_ShortMsgList\030\017 \001"
      "(\0132\036.MMPro.micromsg.BizMessageList\022\025\n\r_V"
      "ideoTabType\030\021 \001(\005\022\030\n\020_ShortMsgTabType\030\022 "
      "\001(\005\0227\n\t_LiveInfo\030\024 \003(\0132$.MMPro.micromsg."
      "FinderLiveNoticeInfo\022\035\n\025_FinderVideoIsBi"
      "zMode\030\025 \001(\010\0220\n\010_Setting\030\026 \001(\0132\036.MMPro.mi"
      "cromsg.ProfileSetting\022.\n\t_NameCard\030\027 \001(\013"
      "2\033.MMPro.micromsg.BizNameCard\022N\n\014_LiveEx"
      "tInfo\030\030 \001(\01328.MMPro.micromsg.BizProfileV"
      "2Resp.FinderLiveNoticeExtinfo\022\022\n\n_IpWord"
      "ing\030\031 \001(\t\022=\n\022_WxaEcEntranceInfo\030\032 \001(\0132!."
      "MMPro.micromsg.WxaEcEntranceInfo\022\026\n\016_Sho"
      "wSubBizRec\030\033 \001(\r\022\025\n\r_AudioTabType\030\034 \001(\005\032"
      "E\n\014FuncFlagDesc\022\021\n\t_FuncFlag\030\001 \001(\r\022\020\n\010_W"
      "ording\030\002 \001(\t\022\020\n\010_JumpUrl\030\003 \001(\t\032d\n\027Finder"
      "LiveNoticeExtinfo\022\027\n\017_TotalNoticeCnt\030\001 \001"
      "(\005\022\031\n\021_TotalReservedCnt\030\002 \001(\r\022\025\n\r_Contin"
      "ueFlag\030\003 \001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6012);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BizProfileV2Resp.proto", &protobuf_RegisterTypes);
  ::MMPro::micromsg::protobuf_BaseResponse_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_BizProfileV2Resp_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAccountInfo::kUserNameFieldNumber;
const int BizAccountInfo::kBanTypeFieldNumber;
const int BizAccountInfo::kBanReasonFieldNumber;
const int BizAccountInfo::kUserRoleFieldNumber;
const int BizAccountInfo::kServiceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAccountInfo::BizAccountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAccountInfo)
}
BizAccountInfo::BizAccountInfo(const BizAccountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__username()) {
    _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
  }
  _banreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__banreason()) {
    _banreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._banreason_);
  }
  ::memcpy(&_bantype_, &from._bantype_,
    reinterpret_cast<char*>(&_servicetype_) -
    reinterpret_cast<char*>(&_bantype_) + sizeof(_servicetype_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAccountInfo)
}

void BizAccountInfo::SharedCtor() {
  _cached_size_ = 0;
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _banreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_bantype_, 0, reinterpret_cast<char*>(&_servicetype_) -
    reinterpret_cast<char*>(&_bantype_) + sizeof(_servicetype_));
}

BizAccountInfo::~BizAccountInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAccountInfo)
  SharedDtor();
}

void BizAccountInfo::SharedDtor() {
  _username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _banreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizAccountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAccountInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAccountInfo& BizAccountInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAccountInfo* BizAccountInfo::New(::google::protobuf::Arena* arena) const {
  BizAccountInfo* n = new BizAccountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAccountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAccountInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__username()) {
      GOOGLE_DCHECK(!_username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_username_.UnsafeRawStringPointer())->clear();
    }
    if (has__banreason()) {
      GOOGLE_DCHECK(!_banreason_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_banreason_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&_bantype_, 0, reinterpret_cast<char*>(&_servicetype_) -
      reinterpret_cast<char*>(&_bantype_) + sizeof(_servicetype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAccountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAccountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAccountInfo._UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _BanType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__bantype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_bantype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BanReason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__banreason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_banreason().data(), this->_banreason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAccountInfo._BanReason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _UserRole = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__userrole();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_userrole_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ServiceType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__servicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_servicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAccountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAccountInfo)
  return false;
#undef DO_
}

void BizAccountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAccountInfo._UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_username(), output);
  }

  // optional uint32 _BanType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_bantype(), output);
  }

  // optional string _BanReason = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_banreason().data(), this->_banreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAccountInfo._BanReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_banreason(), output);
  }

  // optional uint32 _UserRole = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_userrole(), output);
  }

  // optional uint32 _ServiceType = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_servicetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAccountInfo)
}

::google::protobuf::uint8* BizAccountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAccountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAccountInfo._UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_username(), target);
  }

  // optional uint32 _BanType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_bantype(), target);
  }

  // optional string _BanReason = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_banreason().data(), this->_banreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAccountInfo._BanReason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_banreason(), target);
  }

  // optional uint32 _UserRole = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_userrole(), target);
  }

  // optional uint32 _ServiceType = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_servicetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAccountInfo)
  return target;
}

size_t BizAccountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAccountInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string _UserName = 1;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional string _BanReason = 3;
    if (has__banreason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_banreason());
    }

    // optional uint32 _BanType = 2;
    if (has__bantype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_bantype());
    }

    // optional uint32 _UserRole = 4;
    if (has__userrole()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_userrole());
    }

    // optional uint32 _ServiceType = 5;
    if (has__servicetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_servicetype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAccountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAccountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAccountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAccountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAccountInfo)
    MergeFrom(*source);
  }
}

void BizAccountInfo::MergeFrom(const BizAccountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAccountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__username();
      _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__banreason();
      _banreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._banreason_);
    }
    if (cached_has_bits & 0x00000004u) {
      _bantype_ = from._bantype_;
    }
    if (cached_has_bits & 0x00000008u) {
      _userrole_ = from._userrole_;
    }
    if (cached_has_bits & 0x00000010u) {
      _servicetype_ = from._servicetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizAccountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAccountInfo::CopyFrom(const BizAccountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAccountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAccountInfo::IsInitialized() const {
  return true;
}

void BizAccountInfo::Swap(BizAccountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAccountInfo::InternalSwap(BizAccountInfo* other) {
  _username_.Swap(&other->_username_);
  _banreason_.Swap(&other->_banreason_);
  std::swap(_bantype_, other->_bantype_);
  std::swap(_userrole_, other->_userrole_);
  std::swap(_servicetype_, other->_servicetype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAccountInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAccountInfo

// optional string _UserName = 1;
bool BizAccountInfo::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAccountInfo::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAccountInfo::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAccountInfo::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
const ::std::string& BizAccountInfo::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAccountInfo._UserName)
  return _username_.GetNoArena();
}
void BizAccountInfo::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAccountInfo._UserName)
}
#if LANG_CXX11
void BizAccountInfo::set__username(::std::string&& value) {
  set_has__username();
  _username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAccountInfo._UserName)
}
#endif
void BizAccountInfo::set__username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAccountInfo._UserName)
}
void BizAccountInfo::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAccountInfo._UserName)
}
::std::string* BizAccountInfo::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAccountInfo._UserName)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAccountInfo::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAccountInfo._UserName)
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAccountInfo::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAccountInfo._UserName)
}

// optional uint32 _BanType = 2;
bool BizAccountInfo::has__bantype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizAccountInfo::set_has__bantype() {
  _has_bits_[0] |= 0x00000004u;
}
void BizAccountInfo::clear_has__bantype() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizAccountInfo::clear__bantype() {
  _bantype_ = 0u;
  clear_has__bantype();
}
::google::protobuf::uint32 BizAccountInfo::_bantype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAccountInfo._BanType)
  return _bantype_;
}
void BizAccountInfo::set__bantype(::google::protobuf::uint32 value) {
  set_has__bantype();
  _bantype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAccountInfo._BanType)
}

// optional string _BanReason = 3;
bool BizAccountInfo::has__banreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizAccountInfo::set_has__banreason() {
  _has_bits_[0] |= 0x00000002u;
}
void BizAccountInfo::clear_has__banreason() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizAccountInfo::clear__banreason() {
  _banreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__banreason();
}
const ::std::string& BizAccountInfo::_banreason() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAccountInfo._BanReason)
  return _banreason_.GetNoArena();
}
void BizAccountInfo::set__banreason(const ::std::string& value) {
  set_has__banreason();
  _banreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAccountInfo._BanReason)
}
#if LANG_CXX11
void BizAccountInfo::set__banreason(::std::string&& value) {
  set_has__banreason();
  _banreason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAccountInfo._BanReason)
}
#endif
void BizAccountInfo::set__banreason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__banreason();
  _banreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAccountInfo._BanReason)
}
void BizAccountInfo::set__banreason(const char* value, size_t size) {
  set_has__banreason();
  _banreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAccountInfo._BanReason)
}
::std::string* BizAccountInfo::mutable__banreason() {
  set_has__banreason();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAccountInfo._BanReason)
  return _banreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAccountInfo::release__banreason() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAccountInfo._BanReason)
  clear_has__banreason();
  return _banreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAccountInfo::set_allocated__banreason(::std::string* _banreason) {
  if (_banreason != NULL) {
    set_has__banreason();
  } else {
    clear_has__banreason();
  }
  _banreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _banreason);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAccountInfo._BanReason)
}

// optional uint32 _UserRole = 4;
bool BizAccountInfo::has__userrole() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizAccountInfo::set_has__userrole() {
  _has_bits_[0] |= 0x00000008u;
}
void BizAccountInfo::clear_has__userrole() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizAccountInfo::clear__userrole() {
  _userrole_ = 0u;
  clear_has__userrole();
}
::google::protobuf::uint32 BizAccountInfo::_userrole() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAccountInfo._UserRole)
  return _userrole_;
}
void BizAccountInfo::set__userrole(::google::protobuf::uint32 value) {
  set_has__userrole();
  _userrole_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAccountInfo._UserRole)
}

// optional uint32 _ServiceType = 5;
bool BizAccountInfo::has__servicetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizAccountInfo::set_has__servicetype() {
  _has_bits_[0] |= 0x00000010u;
}
void BizAccountInfo::clear_has__servicetype() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizAccountInfo::clear__servicetype() {
  _servicetype_ = 0u;
  clear_has__servicetype();
}
::google::protobuf::uint32 BizAccountInfo::_servicetype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAccountInfo._ServiceType)
  return _servicetype_;
}
void BizAccountInfo::set__servicetype(::google::protobuf::uint32 value) {
  set_has__servicetype();
  _servicetype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAccountInfo._ServiceType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizBaseInfo::kOriginalArticleCountFieldNumber;
const int BizBaseInfo::kFriendSubscribeCountFieldNumber;
const int BizBaseInfo::kIsSubscribedFieldNumber;
const int BizBaseInfo::kOriginalContentStrFieldNumber;
const int BizBaseInfo::kFriendSubscribeStrFieldNumber;
const int BizBaseInfo::kBizRecommendUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizBaseInfo::BizBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizBaseInfo)
}
BizBaseInfo::BizBaseInfo(const BizBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _originalcontentstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__originalcontentstr()) {
    _originalcontentstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._originalcontentstr_);
  }
  _friendsubscribestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__friendsubscribestr()) {
    _friendsubscribestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._friendsubscribestr_);
  }
  _bizrecommendurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__bizrecommendurl()) {
    _bizrecommendurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bizrecommendurl_);
  }
  ::memcpy(&_originalarticlecount_, &from._originalarticlecount_,
    reinterpret_cast<char*>(&_issubscribed_) -
    reinterpret_cast<char*>(&_originalarticlecount_) + sizeof(_issubscribed_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizBaseInfo)
}

void BizBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  _originalcontentstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _friendsubscribestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _bizrecommendurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_originalarticlecount_, 0, reinterpret_cast<char*>(&_issubscribed_) -
    reinterpret_cast<char*>(&_originalarticlecount_) + sizeof(_issubscribed_));
}

BizBaseInfo::~BizBaseInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizBaseInfo)
  SharedDtor();
}

void BizBaseInfo::SharedDtor() {
  _originalcontentstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _friendsubscribestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _bizrecommendurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizBaseInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizBaseInfo& BizBaseInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizBaseInfo* BizBaseInfo::New(::google::protobuf::Arena* arena) const {
  BizBaseInfo* n = new BizBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizBaseInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has__originalcontentstr()) {
      GOOGLE_DCHECK(!_originalcontentstr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_originalcontentstr_.UnsafeRawStringPointer())->clear();
    }
    if (has__friendsubscribestr()) {
      GOOGLE_DCHECK(!_friendsubscribestr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_friendsubscribestr_.UnsafeRawStringPointer())->clear();
    }
    if (has__bizrecommendurl()) {
      GOOGLE_DCHECK(!_bizrecommendurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_bizrecommendurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&_originalarticlecount_, 0, reinterpret_cast<char*>(&_issubscribed_) -
      reinterpret_cast<char*>(&_originalarticlecount_) + sizeof(_issubscribed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _OriginalArticleCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__originalarticlecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_originalarticlecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _FriendSubscribeCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__friendsubscribecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_friendsubscribecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _IsSubscribed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__issubscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_issubscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _OriginalContentStr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__originalcontentstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_originalcontentstr().data(), this->_originalcontentstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBaseInfo._OriginalContentStr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FriendSubscribeStr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__friendsubscribestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_friendsubscribestr().data(), this->_friendsubscribestr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBaseInfo._FriendSubscribeStr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _BizRecommendUrl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__bizrecommendurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_bizrecommendurl().data(), this->_bizrecommendurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBaseInfo._BizRecommendUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizBaseInfo)
  return false;
#undef DO_
}

void BizBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _OriginalArticleCount = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_originalarticlecount(), output);
  }

  // optional int32 _FriendSubscribeCount = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->_friendsubscribecount(), output);
  }

  // optional int32 _IsSubscribed = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->_issubscribed(), output);
  }

  // optional string _OriginalContentStr = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_originalcontentstr().data(), this->_originalcontentstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._OriginalContentStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_originalcontentstr(), output);
  }

  // optional string _FriendSubscribeStr = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_friendsubscribestr().data(), this->_friendsubscribestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._FriendSubscribeStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_friendsubscribestr(), output);
  }

  // optional string _BizRecommendUrl = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bizrecommendurl().data(), this->_bizrecommendurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._BizRecommendUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_bizrecommendurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizBaseInfo)
}

::google::protobuf::uint8* BizBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _OriginalArticleCount = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_originalarticlecount(), target);
  }

  // optional int32 _FriendSubscribeCount = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->_friendsubscribecount(), target);
  }

  // optional int32 _IsSubscribed = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->_issubscribed(), target);
  }

  // optional string _OriginalContentStr = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_originalcontentstr().data(), this->_originalcontentstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._OriginalContentStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_originalcontentstr(), target);
  }

  // optional string _FriendSubscribeStr = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_friendsubscribestr().data(), this->_friendsubscribestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._FriendSubscribeStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_friendsubscribestr(), target);
  }

  // optional string _BizRecommendUrl = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_bizrecommendurl().data(), this->_bizrecommendurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBaseInfo._BizRecommendUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_bizrecommendurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizBaseInfo)
  return target;
}

size_t BizBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string _OriginalContentStr = 4;
    if (has__originalcontentstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_originalcontentstr());
    }

    // optional string _FriendSubscribeStr = 5;
    if (has__friendsubscribestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_friendsubscribestr());
    }

    // optional string _BizRecommendUrl = 7;
    if (has__bizrecommendurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_bizrecommendurl());
    }

    // optional int32 _OriginalArticleCount = 1;
    if (has__originalarticlecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_originalarticlecount());
    }

    // optional int32 _FriendSubscribeCount = 2;
    if (has__friendsubscribecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_friendsubscribecount());
    }

    // optional int32 _IsSubscribed = 3;
    if (has__issubscribed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_issubscribed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizBaseInfo)
    MergeFrom(*source);
  }
}

void BizBaseInfo::MergeFrom(const BizBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__originalcontentstr();
      _originalcontentstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._originalcontentstr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__friendsubscribestr();
      _friendsubscribestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._friendsubscribestr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__bizrecommendurl();
      _bizrecommendurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._bizrecommendurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      _originalarticlecount_ = from._originalarticlecount_;
    }
    if (cached_has_bits & 0x00000010u) {
      _friendsubscribecount_ = from._friendsubscribecount_;
    }
    if (cached_has_bits & 0x00000020u) {
      _issubscribed_ = from._issubscribed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizBaseInfo::CopyFrom(const BizBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizBaseInfo::IsInitialized() const {
  return true;
}

void BizBaseInfo::Swap(BizBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizBaseInfo::InternalSwap(BizBaseInfo* other) {
  _originalcontentstr_.Swap(&other->_originalcontentstr_);
  _friendsubscribestr_.Swap(&other->_friendsubscribestr_);
  _bizrecommendurl_.Swap(&other->_bizrecommendurl_);
  std::swap(_originalarticlecount_, other->_originalarticlecount_);
  std::swap(_friendsubscribecount_, other->_friendsubscribecount_);
  std::swap(_issubscribed_, other->_issubscribed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizBaseInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizBaseInfo

// optional int32 _OriginalArticleCount = 1;
bool BizBaseInfo::has__originalarticlecount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizBaseInfo::set_has__originalarticlecount() {
  _has_bits_[0] |= 0x00000008u;
}
void BizBaseInfo::clear_has__originalarticlecount() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizBaseInfo::clear__originalarticlecount() {
  _originalarticlecount_ = 0;
  clear_has__originalarticlecount();
}
::google::protobuf::int32 BizBaseInfo::_originalarticlecount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._OriginalArticleCount)
  return _originalarticlecount_;
}
void BizBaseInfo::set__originalarticlecount(::google::protobuf::int32 value) {
  set_has__originalarticlecount();
  _originalarticlecount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._OriginalArticleCount)
}

// optional int32 _FriendSubscribeCount = 2;
bool BizBaseInfo::has__friendsubscribecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizBaseInfo::set_has__friendsubscribecount() {
  _has_bits_[0] |= 0x00000010u;
}
void BizBaseInfo::clear_has__friendsubscribecount() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizBaseInfo::clear__friendsubscribecount() {
  _friendsubscribecount_ = 0;
  clear_has__friendsubscribecount();
}
::google::protobuf::int32 BizBaseInfo::_friendsubscribecount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._FriendSubscribeCount)
  return _friendsubscribecount_;
}
void BizBaseInfo::set__friendsubscribecount(::google::protobuf::int32 value) {
  set_has__friendsubscribecount();
  _friendsubscribecount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._FriendSubscribeCount)
}

// optional int32 _IsSubscribed = 3;
bool BizBaseInfo::has__issubscribed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizBaseInfo::set_has__issubscribed() {
  _has_bits_[0] |= 0x00000020u;
}
void BizBaseInfo::clear_has__issubscribed() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizBaseInfo::clear__issubscribed() {
  _issubscribed_ = 0;
  clear_has__issubscribed();
}
::google::protobuf::int32 BizBaseInfo::_issubscribed() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._IsSubscribed)
  return _issubscribed_;
}
void BizBaseInfo::set__issubscribed(::google::protobuf::int32 value) {
  set_has__issubscribed();
  _issubscribed_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._IsSubscribed)
}

// optional string _OriginalContentStr = 4;
bool BizBaseInfo::has__originalcontentstr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizBaseInfo::set_has__originalcontentstr() {
  _has_bits_[0] |= 0x00000001u;
}
void BizBaseInfo::clear_has__originalcontentstr() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizBaseInfo::clear__originalcontentstr() {
  _originalcontentstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__originalcontentstr();
}
const ::std::string& BizBaseInfo::_originalcontentstr() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
  return _originalcontentstr_.GetNoArena();
}
void BizBaseInfo::set__originalcontentstr(const ::std::string& value) {
  set_has__originalcontentstr();
  _originalcontentstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
}
#if LANG_CXX11
void BizBaseInfo::set__originalcontentstr(::std::string&& value) {
  set_has__originalcontentstr();
  _originalcontentstr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
}
#endif
void BizBaseInfo::set__originalcontentstr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__originalcontentstr();
  _originalcontentstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
}
void BizBaseInfo::set__originalcontentstr(const char* value, size_t size) {
  set_has__originalcontentstr();
  _originalcontentstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
}
::std::string* BizBaseInfo::mutable__originalcontentstr() {
  set_has__originalcontentstr();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
  return _originalcontentstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBaseInfo::release__originalcontentstr() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
  clear_has__originalcontentstr();
  return _originalcontentstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBaseInfo::set_allocated__originalcontentstr(::std::string* _originalcontentstr) {
  if (_originalcontentstr != NULL) {
    set_has__originalcontentstr();
  } else {
    clear_has__originalcontentstr();
  }
  _originalcontentstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _originalcontentstr);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBaseInfo._OriginalContentStr)
}

// optional string _FriendSubscribeStr = 5;
bool BizBaseInfo::has__friendsubscribestr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizBaseInfo::set_has__friendsubscribestr() {
  _has_bits_[0] |= 0x00000002u;
}
void BizBaseInfo::clear_has__friendsubscribestr() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizBaseInfo::clear__friendsubscribestr() {
  _friendsubscribestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__friendsubscribestr();
}
const ::std::string& BizBaseInfo::_friendsubscribestr() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
  return _friendsubscribestr_.GetNoArena();
}
void BizBaseInfo::set__friendsubscribestr(const ::std::string& value) {
  set_has__friendsubscribestr();
  _friendsubscribestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
}
#if LANG_CXX11
void BizBaseInfo::set__friendsubscribestr(::std::string&& value) {
  set_has__friendsubscribestr();
  _friendsubscribestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
}
#endif
void BizBaseInfo::set__friendsubscribestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__friendsubscribestr();
  _friendsubscribestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
}
void BizBaseInfo::set__friendsubscribestr(const char* value, size_t size) {
  set_has__friendsubscribestr();
  _friendsubscribestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
}
::std::string* BizBaseInfo::mutable__friendsubscribestr() {
  set_has__friendsubscribestr();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
  return _friendsubscribestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBaseInfo::release__friendsubscribestr() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
  clear_has__friendsubscribestr();
  return _friendsubscribestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBaseInfo::set_allocated__friendsubscribestr(::std::string* _friendsubscribestr) {
  if (_friendsubscribestr != NULL) {
    set_has__friendsubscribestr();
  } else {
    clear_has__friendsubscribestr();
  }
  _friendsubscribestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _friendsubscribestr);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBaseInfo._FriendSubscribeStr)
}

// optional string _BizRecommendUrl = 7;
bool BizBaseInfo::has__bizrecommendurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizBaseInfo::set_has__bizrecommendurl() {
  _has_bits_[0] |= 0x00000004u;
}
void BizBaseInfo::clear_has__bizrecommendurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizBaseInfo::clear__bizrecommendurl() {
  _bizrecommendurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__bizrecommendurl();
}
const ::std::string& BizBaseInfo::_bizrecommendurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
  return _bizrecommendurl_.GetNoArena();
}
void BizBaseInfo::set__bizrecommendurl(const ::std::string& value) {
  set_has__bizrecommendurl();
  _bizrecommendurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
}
#if LANG_CXX11
void BizBaseInfo::set__bizrecommendurl(::std::string&& value) {
  set_has__bizrecommendurl();
  _bizrecommendurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
}
#endif
void BizBaseInfo::set__bizrecommendurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__bizrecommendurl();
  _bizrecommendurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
}
void BizBaseInfo::set__bizrecommendurl(const char* value, size_t size) {
  set_has__bizrecommendurl();
  _bizrecommendurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
}
::std::string* BizBaseInfo::mutable__bizrecommendurl() {
  set_has__bizrecommendurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
  return _bizrecommendurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBaseInfo::release__bizrecommendurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
  clear_has__bizrecommendurl();
  return _bizrecommendurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBaseInfo::set_allocated__bizrecommendurl(::std::string* _bizrecommendurl) {
  if (_bizrecommendurl != NULL) {
    set_has__bizrecommendurl();
  } else {
    clear_has__bizrecommendurl();
  }
  _bizrecommendurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _bizrecommendurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBaseInfo._BizRecommendUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommMsgBaseInfo::kMsgIdFieldNumber;
const int CommMsgBaseInfo::kMsgTypeFieldNumber;
const int CommMsgBaseInfo::kDateTimeFieldNumber;
const int CommMsgBaseInfo::kStatusFieldNumber;
const int CommMsgBaseInfo::kFuncFlagFieldNumber;
const int CommMsgBaseInfo::kUniqueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommMsgBaseInfo::CommMsgBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.CommMsgBaseInfo)
}
CommMsgBaseInfo::CommMsgBaseInfo(const CommMsgBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _uniqueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__uniqueid()) {
    _uniqueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._uniqueid_);
  }
  ::memcpy(&_msgid_, &from._msgid_,
    reinterpret_cast<char*>(&_funcflag_) -
    reinterpret_cast<char*>(&_msgid_) + sizeof(_funcflag_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.CommMsgBaseInfo)
}

void CommMsgBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  _uniqueid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_msgid_, 0, reinterpret_cast<char*>(&_funcflag_) -
    reinterpret_cast<char*>(&_msgid_) + sizeof(_funcflag_));
}

CommMsgBaseInfo::~CommMsgBaseInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.CommMsgBaseInfo)
  SharedDtor();
}

void CommMsgBaseInfo::SharedDtor() {
  _uniqueid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommMsgBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommMsgBaseInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommMsgBaseInfo& CommMsgBaseInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommMsgBaseInfo* CommMsgBaseInfo::New(::google::protobuf::Arena* arena) const {
  CommMsgBaseInfo* n = new CommMsgBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommMsgBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.CommMsgBaseInfo)
  if (has__uniqueid()) {
    GOOGLE_DCHECK(!_uniqueid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_uniqueid_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&_msgid_, 0, reinterpret_cast<char*>(&_funcflag_) -
      reinterpret_cast<char*>(&_msgid_) + sizeof(_funcflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommMsgBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.CommMsgBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _MsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _MsgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _DateTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__datetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_datetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _FuncFlag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__funcflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_funcflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _UniqueId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_uniqueid().data(), this->_uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.CommMsgBaseInfo._UniqueId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.CommMsgBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.CommMsgBaseInfo)
  return false;
#undef DO_
}

void CommMsgBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.CommMsgBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _MsgId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_msgid(), output);
  }

  // optional uint32 _MsgType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_msgtype(), output);
  }

  // optional uint32 _DateTime = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_datetime(), output);
  }

  // optional uint32 _Status = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_status(), output);
  }

  // optional uint32 _FuncFlag = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_funcflag(), output);
  }

  // optional string _UniqueId = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_uniqueid().data(), this->_uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CommMsgBaseInfo._UniqueId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_uniqueid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.CommMsgBaseInfo)
}

::google::protobuf::uint8* CommMsgBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.CommMsgBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _MsgId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_msgid(), target);
  }

  // optional uint32 _MsgType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_msgtype(), target);
  }

  // optional uint32 _DateTime = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_datetime(), target);
  }

  // optional uint32 _Status = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_status(), target);
  }

  // optional uint32 _FuncFlag = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_funcflag(), target);
  }

  // optional string _UniqueId = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_uniqueid().data(), this->_uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.CommMsgBaseInfo._UniqueId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_uniqueid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.CommMsgBaseInfo)
  return target;
}

size_t CommMsgBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.CommMsgBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string _UniqueId = 6;
    if (has__uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_uniqueid());
    }

    // optional uint32 _MsgId = 1;
    if (has__msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_msgid());
    }

    // optional uint32 _MsgType = 2;
    if (has__msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_msgtype());
    }

    // optional uint32 _DateTime = 3;
    if (has__datetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_datetime());
    }

    // optional uint32 _Status = 4;
    if (has__status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_status());
    }

    // optional uint32 _FuncFlag = 5;
    if (has__funcflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_funcflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommMsgBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.CommMsgBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CommMsgBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommMsgBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.CommMsgBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.CommMsgBaseInfo)
    MergeFrom(*source);
  }
}

void CommMsgBaseInfo::MergeFrom(const CommMsgBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.CommMsgBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__uniqueid();
      _uniqueid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._uniqueid_);
    }
    if (cached_has_bits & 0x00000002u) {
      _msgid_ = from._msgid_;
    }
    if (cached_has_bits & 0x00000004u) {
      _msgtype_ = from._msgtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      _datetime_ = from._datetime_;
    }
    if (cached_has_bits & 0x00000010u) {
      _status_ = from._status_;
    }
    if (cached_has_bits & 0x00000020u) {
      _funcflag_ = from._funcflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CommMsgBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.CommMsgBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommMsgBaseInfo::CopyFrom(const CommMsgBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.CommMsgBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommMsgBaseInfo::IsInitialized() const {
  return true;
}

void CommMsgBaseInfo::Swap(CommMsgBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommMsgBaseInfo::InternalSwap(CommMsgBaseInfo* other) {
  _uniqueid_.Swap(&other->_uniqueid_);
  std::swap(_msgid_, other->_msgid_);
  std::swap(_msgtype_, other->_msgtype_);
  std::swap(_datetime_, other->_datetime_);
  std::swap(_status_, other->_status_);
  std::swap(_funcflag_, other->_funcflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommMsgBaseInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommMsgBaseInfo

// optional uint32 _MsgId = 1;
bool CommMsgBaseInfo::has__msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CommMsgBaseInfo::set_has__msgid() {
  _has_bits_[0] |= 0x00000002u;
}
void CommMsgBaseInfo::clear_has__msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CommMsgBaseInfo::clear__msgid() {
  _msgid_ = 0u;
  clear_has__msgid();
}
::google::protobuf::uint32 CommMsgBaseInfo::_msgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._MsgId)
  return _msgid_;
}
void CommMsgBaseInfo::set__msgid(::google::protobuf::uint32 value) {
  set_has__msgid();
  _msgid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._MsgId)
}

// optional uint32 _MsgType = 2;
bool CommMsgBaseInfo::has__msgtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CommMsgBaseInfo::set_has__msgtype() {
  _has_bits_[0] |= 0x00000004u;
}
void CommMsgBaseInfo::clear_has__msgtype() {
  _has_bits_[0] &= ~0x00000004u;
}
void CommMsgBaseInfo::clear__msgtype() {
  _msgtype_ = 0u;
  clear_has__msgtype();
}
::google::protobuf::uint32 CommMsgBaseInfo::_msgtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._MsgType)
  return _msgtype_;
}
void CommMsgBaseInfo::set__msgtype(::google::protobuf::uint32 value) {
  set_has__msgtype();
  _msgtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._MsgType)
}

// optional uint32 _DateTime = 3;
bool CommMsgBaseInfo::has__datetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CommMsgBaseInfo::set_has__datetime() {
  _has_bits_[0] |= 0x00000008u;
}
void CommMsgBaseInfo::clear_has__datetime() {
  _has_bits_[0] &= ~0x00000008u;
}
void CommMsgBaseInfo::clear__datetime() {
  _datetime_ = 0u;
  clear_has__datetime();
}
::google::protobuf::uint32 CommMsgBaseInfo::_datetime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._DateTime)
  return _datetime_;
}
void CommMsgBaseInfo::set__datetime(::google::protobuf::uint32 value) {
  set_has__datetime();
  _datetime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._DateTime)
}

// optional uint32 _Status = 4;
bool CommMsgBaseInfo::has__status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CommMsgBaseInfo::set_has__status() {
  _has_bits_[0] |= 0x00000010u;
}
void CommMsgBaseInfo::clear_has__status() {
  _has_bits_[0] &= ~0x00000010u;
}
void CommMsgBaseInfo::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
::google::protobuf::uint32 CommMsgBaseInfo::_status() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._Status)
  return _status_;
}
void CommMsgBaseInfo::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._Status)
}

// optional uint32 _FuncFlag = 5;
bool CommMsgBaseInfo::has__funcflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CommMsgBaseInfo::set_has__funcflag() {
  _has_bits_[0] |= 0x00000020u;
}
void CommMsgBaseInfo::clear_has__funcflag() {
  _has_bits_[0] &= ~0x00000020u;
}
void CommMsgBaseInfo::clear__funcflag() {
  _funcflag_ = 0u;
  clear_has__funcflag();
}
::google::protobuf::uint32 CommMsgBaseInfo::_funcflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._FuncFlag)
  return _funcflag_;
}
void CommMsgBaseInfo::set__funcflag(::google::protobuf::uint32 value) {
  set_has__funcflag();
  _funcflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._FuncFlag)
}

// optional string _UniqueId = 6;
bool CommMsgBaseInfo::has__uniqueid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CommMsgBaseInfo::set_has__uniqueid() {
  _has_bits_[0] |= 0x00000001u;
}
void CommMsgBaseInfo::clear_has__uniqueid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CommMsgBaseInfo::clear__uniqueid() {
  _uniqueid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__uniqueid();
}
const ::std::string& CommMsgBaseInfo::_uniqueid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
  return _uniqueid_.GetNoArena();
}
void CommMsgBaseInfo::set__uniqueid(const ::std::string& value) {
  set_has__uniqueid();
  _uniqueid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
}
#if LANG_CXX11
void CommMsgBaseInfo::set__uniqueid(::std::string&& value) {
  set_has__uniqueid();
  _uniqueid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
}
#endif
void CommMsgBaseInfo::set__uniqueid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__uniqueid();
  _uniqueid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
}
void CommMsgBaseInfo::set__uniqueid(const char* value, size_t size) {
  set_has__uniqueid();
  _uniqueid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
}
::std::string* CommMsgBaseInfo::mutable__uniqueid() {
  set_has__uniqueid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
  return _uniqueid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommMsgBaseInfo::release__uniqueid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
  clear_has__uniqueid();
  return _uniqueid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommMsgBaseInfo::set_allocated__uniqueid(::std::string* _uniqueid) {
  if (_uniqueid != NULL) {
    set_has__uniqueid();
  } else {
    clear_has__uniqueid();
  }
  _uniqueid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _uniqueid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.CommMsgBaseInfo._UniqueId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizTextMsgInfo::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizTextMsgInfo::BizTextMsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizTextMsgInfo)
}
BizTextMsgInfo::BizTextMsgInfo(const BizTextMsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__content()) {
    _content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._content_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizTextMsgInfo)
}

void BizTextMsgInfo::SharedCtor() {
  _cached_size_ = 0;
  _content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BizTextMsgInfo::~BizTextMsgInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizTextMsgInfo)
  SharedDtor();
}

void BizTextMsgInfo::SharedDtor() {
  _content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizTextMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizTextMsgInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizTextMsgInfo& BizTextMsgInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizTextMsgInfo* BizTextMsgInfo::New(::google::protobuf::Arena* arena) const {
  BizTextMsgInfo* n = new BizTextMsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizTextMsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizTextMsgInfo)
  if (has__content()) {
    GOOGLE_DCHECK(!_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizTextMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizTextMsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_content().data(), this->_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizTextMsgInfo._Content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizTextMsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizTextMsgInfo)
  return false;
#undef DO_
}

void BizTextMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizTextMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_content().data(), this->_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTextMsgInfo._Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizTextMsgInfo)
}

::google::protobuf::uint8* BizTextMsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizTextMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_content().data(), this->_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTextMsgInfo._Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizTextMsgInfo)
  return target;
}

size_t BizTextMsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizTextMsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string _Content = 1;
  if (has__content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizTextMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizTextMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizTextMsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizTextMsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizTextMsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizTextMsgInfo)
    MergeFrom(*source);
  }
}

void BizTextMsgInfo::MergeFrom(const BizTextMsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizTextMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__content()) {
    set_has__content();
    _content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._content_);
  }
}

void BizTextMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizTextMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizTextMsgInfo::CopyFrom(const BizTextMsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizTextMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizTextMsgInfo::IsInitialized() const {
  return true;
}

void BizTextMsgInfo::Swap(BizTextMsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizTextMsgInfo::InternalSwap(BizTextMsgInfo* other) {
  _content_.Swap(&other->_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizTextMsgInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizTextMsgInfo

// optional string _Content = 1;
bool BizTextMsgInfo::has__content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizTextMsgInfo::set_has__content() {
  _has_bits_[0] |= 0x00000001u;
}
void BizTextMsgInfo::clear_has__content() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizTextMsgInfo::clear__content() {
  _content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__content();
}
const ::std::string& BizTextMsgInfo::_content() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTextMsgInfo._Content)
  return _content_.GetNoArena();
}
void BizTextMsgInfo::set__content(const ::std::string& value) {
  set_has__content();
  _content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTextMsgInfo._Content)
}
#if LANG_CXX11
void BizTextMsgInfo::set__content(::std::string&& value) {
  set_has__content();
  _content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizTextMsgInfo._Content)
}
#endif
void BizTextMsgInfo::set__content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__content();
  _content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizTextMsgInfo._Content)
}
void BizTextMsgInfo::set__content(const char* value, size_t size) {
  set_has__content();
  _content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizTextMsgInfo._Content)
}
::std::string* BizTextMsgInfo::mutable__content() {
  set_has__content();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTextMsgInfo._Content)
  return _content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizTextMsgInfo::release__content() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizTextMsgInfo._Content)
  clear_has__content();
  return _content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizTextMsgInfo::set_allocated__content(::std::string* _content) {
  if (_content != NULL) {
    set_has__content();
  } else {
    clear_has__content();
  }
  _content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _content);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizTextMsgInfo._Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizImageMsgInfo::kFileIdFieldNumber;
const int BizImageMsgInfo::kLengthFieldNumber;
const int BizImageMsgInfo::kMasterIdFieldNumber;
const int BizImageMsgInfo::kCdnUrlFieldNumber;
const int BizImageMsgInfo::kContentUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizImageMsgInfo::BizImageMsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizImageMsgInfo)
}
BizImageMsgInfo::BizImageMsgInfo(const BizImageMsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _cdnurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__cdnurl()) {
    _cdnurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._cdnurl_);
  }
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__contenturl()) {
    _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
  }
  ::memcpy(&_fileid_, &from._fileid_,
    reinterpret_cast<char*>(&_masterid_) -
    reinterpret_cast<char*>(&_fileid_) + sizeof(_masterid_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizImageMsgInfo)
}

void BizImageMsgInfo::SharedCtor() {
  _cached_size_ = 0;
  _cdnurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_fileid_, 0, reinterpret_cast<char*>(&_masterid_) -
    reinterpret_cast<char*>(&_fileid_) + sizeof(_masterid_));
}

BizImageMsgInfo::~BizImageMsgInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizImageMsgInfo)
  SharedDtor();
}

void BizImageMsgInfo::SharedDtor() {
  _cdnurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizImageMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizImageMsgInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizImageMsgInfo& BizImageMsgInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizImageMsgInfo* BizImageMsgInfo::New(::google::protobuf::Arena* arena) const {
  BizImageMsgInfo* n = new BizImageMsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizImageMsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizImageMsgInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__cdnurl()) {
      GOOGLE_DCHECK(!_cdnurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_cdnurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__contenturl()) {
      GOOGLE_DCHECK(!_contenturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_contenturl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&_fileid_, 0, reinterpret_cast<char*>(&_masterid_) -
      reinterpret_cast<char*>(&_fileid_) + sizeof(_masterid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizImageMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizImageMsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _FileId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__fileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_fileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 _MasterId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__masterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_masterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CdnUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__cdnurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_cdnurl().data(), this->_cdnurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizImageMsgInfo._CdnUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ContentUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__contenturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_contenturl().data(), this->_contenturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizImageMsgInfo._ContentUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizImageMsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizImageMsgInfo)
  return false;
#undef DO_
}

void BizImageMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizImageMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FileId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_fileid(), output);
  }

  // optional uint32 _Length = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_length(), output);
  }

  // optional uint64 _MasterId = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->_masterid(), output);
  }

  // optional string _CdnUrl = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_cdnurl().data(), this->_cdnurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizImageMsgInfo._CdnUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_cdnurl(), output);
  }

  // optional string _ContentUrl = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizImageMsgInfo._ContentUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_contenturl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizImageMsgInfo)
}

::google::protobuf::uint8* BizImageMsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizImageMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FileId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_fileid(), target);
  }

  // optional uint32 _Length = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_length(), target);
  }

  // optional uint64 _MasterId = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->_masterid(), target);
  }

  // optional string _CdnUrl = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_cdnurl().data(), this->_cdnurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizImageMsgInfo._CdnUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_cdnurl(), target);
  }

  // optional string _ContentUrl = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizImageMsgInfo._ContentUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_contenturl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizImageMsgInfo)
  return target;
}

size_t BizImageMsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizImageMsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string _CdnUrl = 4;
    if (has__cdnurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_cdnurl());
    }

    // optional string _ContentUrl = 5;
    if (has__contenturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_contenturl());
    }

    // optional uint32 _FileId = 1;
    if (has__fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_fileid());
    }

    // optional uint32 _Length = 2;
    if (has__length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_length());
    }

    // optional uint64 _MasterId = 3;
    if (has__masterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->_masterid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizImageMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizImageMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizImageMsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizImageMsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizImageMsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizImageMsgInfo)
    MergeFrom(*source);
  }
}

void BizImageMsgInfo::MergeFrom(const BizImageMsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizImageMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__cdnurl();
      _cdnurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._cdnurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__contenturl();
      _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
    }
    if (cached_has_bits & 0x00000004u) {
      _fileid_ = from._fileid_;
    }
    if (cached_has_bits & 0x00000008u) {
      _length_ = from._length_;
    }
    if (cached_has_bits & 0x00000010u) {
      _masterid_ = from._masterid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizImageMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizImageMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizImageMsgInfo::CopyFrom(const BizImageMsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizImageMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizImageMsgInfo::IsInitialized() const {
  return true;
}

void BizImageMsgInfo::Swap(BizImageMsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizImageMsgInfo::InternalSwap(BizImageMsgInfo* other) {
  _cdnurl_.Swap(&other->_cdnurl_);
  _contenturl_.Swap(&other->_contenturl_);
  std::swap(_fileid_, other->_fileid_);
  std::swap(_length_, other->_length_);
  std::swap(_masterid_, other->_masterid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizImageMsgInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizImageMsgInfo

// optional uint32 _FileId = 1;
bool BizImageMsgInfo::has__fileid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizImageMsgInfo::set_has__fileid() {
  _has_bits_[0] |= 0x00000004u;
}
void BizImageMsgInfo::clear_has__fileid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizImageMsgInfo::clear__fileid() {
  _fileid_ = 0u;
  clear_has__fileid();
}
::google::protobuf::uint32 BizImageMsgInfo::_fileid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizImageMsgInfo._FileId)
  return _fileid_;
}
void BizImageMsgInfo::set__fileid(::google::protobuf::uint32 value) {
  set_has__fileid();
  _fileid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizImageMsgInfo._FileId)
}

// optional uint32 _Length = 2;
bool BizImageMsgInfo::has__length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizImageMsgInfo::set_has__length() {
  _has_bits_[0] |= 0x00000008u;
}
void BizImageMsgInfo::clear_has__length() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizImageMsgInfo::clear__length() {
  _length_ = 0u;
  clear_has__length();
}
::google::protobuf::uint32 BizImageMsgInfo::_length() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizImageMsgInfo._Length)
  return _length_;
}
void BizImageMsgInfo::set__length(::google::protobuf::uint32 value) {
  set_has__length();
  _length_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizImageMsgInfo._Length)
}

// optional uint64 _MasterId = 3;
bool BizImageMsgInfo::has__masterid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizImageMsgInfo::set_has__masterid() {
  _has_bits_[0] |= 0x00000010u;
}
void BizImageMsgInfo::clear_has__masterid() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizImageMsgInfo::clear__masterid() {
  _masterid_ = GOOGLE_ULONGLONG(0);
  clear_has__masterid();
}
::google::protobuf::uint64 BizImageMsgInfo::_masterid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizImageMsgInfo._MasterId)
  return _masterid_;
}
void BizImageMsgInfo::set__masterid(::google::protobuf::uint64 value) {
  set_has__masterid();
  _masterid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizImageMsgInfo._MasterId)
}

// optional string _CdnUrl = 4;
bool BizImageMsgInfo::has__cdnurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizImageMsgInfo::set_has__cdnurl() {
  _has_bits_[0] |= 0x00000001u;
}
void BizImageMsgInfo::clear_has__cdnurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizImageMsgInfo::clear__cdnurl() {
  _cdnurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__cdnurl();
}
const ::std::string& BizImageMsgInfo::_cdnurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
  return _cdnurl_.GetNoArena();
}
void BizImageMsgInfo::set__cdnurl(const ::std::string& value) {
  set_has__cdnurl();
  _cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
}
#if LANG_CXX11
void BizImageMsgInfo::set__cdnurl(::std::string&& value) {
  set_has__cdnurl();
  _cdnurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
}
#endif
void BizImageMsgInfo::set__cdnurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__cdnurl();
  _cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
}
void BizImageMsgInfo::set__cdnurl(const char* value, size_t size) {
  set_has__cdnurl();
  _cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
}
::std::string* BizImageMsgInfo::mutable__cdnurl() {
  set_has__cdnurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
  return _cdnurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizImageMsgInfo::release__cdnurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
  clear_has__cdnurl();
  return _cdnurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizImageMsgInfo::set_allocated__cdnurl(::std::string* _cdnurl) {
  if (_cdnurl != NULL) {
    set_has__cdnurl();
  } else {
    clear_has__cdnurl();
  }
  _cdnurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _cdnurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizImageMsgInfo._CdnUrl)
}

// optional string _ContentUrl = 5;
bool BizImageMsgInfo::has__contenturl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizImageMsgInfo::set_has__contenturl() {
  _has_bits_[0] |= 0x00000002u;
}
void BizImageMsgInfo::clear_has__contenturl() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizImageMsgInfo::clear__contenturl() {
  _contenturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__contenturl();
}
const ::std::string& BizImageMsgInfo::_contenturl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
  return _contenturl_.GetNoArena();
}
void BizImageMsgInfo::set__contenturl(const ::std::string& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
}
#if LANG_CXX11
void BizImageMsgInfo::set__contenturl(::std::string&& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
}
#endif
void BizImageMsgInfo::set__contenturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
}
void BizImageMsgInfo::set__contenturl(const char* value, size_t size) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
}
::std::string* BizImageMsgInfo::mutable__contenturl() {
  set_has__contenturl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
  return _contenturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizImageMsgInfo::release__contenturl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
  clear_has__contenturl();
  return _contenturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizImageMsgInfo::set_allocated__contenturl(::std::string* _contenturl) {
  if (_contenturl != NULL) {
    set_has__contenturl();
  } else {
    clear_has__contenturl();
  }
  _contenturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _contenturl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizImageMsgInfo._ContentUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizVoiceMsgInfo::kFileIdFieldNumber;
const int BizVoiceMsgInfo::kLengthFieldNumber;
const int BizVoiceMsgInfo::kVoiceLengthFieldNumber;
const int BizVoiceMsgInfo::kTitleFieldNumber;
const int BizVoiceMsgInfo::kVocieIdFieldNumber;
const int BizVoiceMsgInfo::kContentUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizVoiceMsgInfo::BizVoiceMsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizVoiceMsgInfo)
}
BizVoiceMsgInfo::BizVoiceMsgInfo(const BizVoiceMsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__title()) {
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
  _vocieid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__vocieid()) {
    _vocieid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._vocieid_);
  }
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__contenturl()) {
    _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
  }
  ::memcpy(&_fileid_, &from._fileid_,
    reinterpret_cast<char*>(&_voicelength_) -
    reinterpret_cast<char*>(&_fileid_) + sizeof(_voicelength_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizVoiceMsgInfo)
}

void BizVoiceMsgInfo::SharedCtor() {
  _cached_size_ = 0;
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _vocieid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_fileid_, 0, reinterpret_cast<char*>(&_voicelength_) -
    reinterpret_cast<char*>(&_fileid_) + sizeof(_voicelength_));
}

BizVoiceMsgInfo::~BizVoiceMsgInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizVoiceMsgInfo)
  SharedDtor();
}

void BizVoiceMsgInfo::SharedDtor() {
  _title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _vocieid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizVoiceMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizVoiceMsgInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizVoiceMsgInfo& BizVoiceMsgInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizVoiceMsgInfo* BizVoiceMsgInfo::New(::google::protobuf::Arena* arena) const {
  BizVoiceMsgInfo* n = new BizVoiceMsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizVoiceMsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizVoiceMsgInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has__title()) {
      GOOGLE_DCHECK(!_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_title_.UnsafeRawStringPointer())->clear();
    }
    if (has__vocieid()) {
      GOOGLE_DCHECK(!_vocieid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_vocieid_.UnsafeRawStringPointer())->clear();
    }
    if (has__contenturl()) {
      GOOGLE_DCHECK(!_contenturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_contenturl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&_fileid_, 0, reinterpret_cast<char*>(&_voicelength_) -
      reinterpret_cast<char*>(&_fileid_) + sizeof(_voicelength_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizVoiceMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizVoiceMsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _FileId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__fileid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_fileid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VoiceLength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__voicelength();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_voicelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Title = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_title().data(), this->_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizVoiceMsgInfo._Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _VocieId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__vocieid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_vocieid().data(), this->_vocieid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizVoiceMsgInfo._VocieId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ContentUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__contenturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_contenturl().data(), this->_contenturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizVoiceMsgInfo._ContentUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizVoiceMsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizVoiceMsgInfo)
  return false;
#undef DO_
}

void BizVoiceMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizVoiceMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FileId = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_fileid(), output);
  }

  // optional uint32 _Length = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_length(), output);
  }

  // optional uint32 _VoiceLength = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_voicelength(), output);
  }

  // optional string _Title = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_title(), output);
  }

  // optional string _VocieId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_vocieid().data(), this->_vocieid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._VocieId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_vocieid(), output);
  }

  // optional string _ContentUrl = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._ContentUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_contenturl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizVoiceMsgInfo)
}

::google::protobuf::uint8* BizVoiceMsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizVoiceMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FileId = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_fileid(), target);
  }

  // optional uint32 _Length = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_length(), target);
  }

  // optional uint32 _VoiceLength = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_voicelength(), target);
  }

  // optional string _Title = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_title(), target);
  }

  // optional string _VocieId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_vocieid().data(), this->_vocieid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._VocieId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_vocieid(), target);
  }

  // optional string _ContentUrl = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVoiceMsgInfo._ContentUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_contenturl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizVoiceMsgInfo)
  return target;
}

size_t BizVoiceMsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizVoiceMsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string _Title = 4;
    if (has__title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_title());
    }

    // optional string _VocieId = 5;
    if (has__vocieid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_vocieid());
    }

    // optional string _ContentUrl = 6;
    if (has__contenturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_contenturl());
    }

    // optional uint32 _FileId = 1;
    if (has__fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_fileid());
    }

    // optional uint32 _Length = 2;
    if (has__length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_length());
    }

    // optional uint32 _VoiceLength = 3;
    if (has__voicelength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_voicelength());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizVoiceMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizVoiceMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizVoiceMsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizVoiceMsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizVoiceMsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizVoiceMsgInfo)
    MergeFrom(*source);
  }
}

void BizVoiceMsgInfo::MergeFrom(const BizVoiceMsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizVoiceMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__title();
      _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__vocieid();
      _vocieid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._vocieid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__contenturl();
      _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
    }
    if (cached_has_bits & 0x00000008u) {
      _fileid_ = from._fileid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _length_ = from._length_;
    }
    if (cached_has_bits & 0x00000020u) {
      _voicelength_ = from._voicelength_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizVoiceMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizVoiceMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizVoiceMsgInfo::CopyFrom(const BizVoiceMsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizVoiceMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizVoiceMsgInfo::IsInitialized() const {
  return true;
}

void BizVoiceMsgInfo::Swap(BizVoiceMsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizVoiceMsgInfo::InternalSwap(BizVoiceMsgInfo* other) {
  _title_.Swap(&other->_title_);
  _vocieid_.Swap(&other->_vocieid_);
  _contenturl_.Swap(&other->_contenturl_);
  std::swap(_fileid_, other->_fileid_);
  std::swap(_length_, other->_length_);
  std::swap(_voicelength_, other->_voicelength_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizVoiceMsgInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizVoiceMsgInfo

// optional uint32 _FileId = 1;
bool BizVoiceMsgInfo::has__fileid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizVoiceMsgInfo::set_has__fileid() {
  _has_bits_[0] |= 0x00000008u;
}
void BizVoiceMsgInfo::clear_has__fileid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizVoiceMsgInfo::clear__fileid() {
  _fileid_ = 0u;
  clear_has__fileid();
}
::google::protobuf::uint32 BizVoiceMsgInfo::_fileid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._FileId)
  return _fileid_;
}
void BizVoiceMsgInfo::set__fileid(::google::protobuf::uint32 value) {
  set_has__fileid();
  _fileid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._FileId)
}

// optional uint32 _Length = 2;
bool BizVoiceMsgInfo::has__length() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizVoiceMsgInfo::set_has__length() {
  _has_bits_[0] |= 0x00000010u;
}
void BizVoiceMsgInfo::clear_has__length() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizVoiceMsgInfo::clear__length() {
  _length_ = 0u;
  clear_has__length();
}
::google::protobuf::uint32 BizVoiceMsgInfo::_length() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._Length)
  return _length_;
}
void BizVoiceMsgInfo::set__length(::google::protobuf::uint32 value) {
  set_has__length();
  _length_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._Length)
}

// optional uint32 _VoiceLength = 3;
bool BizVoiceMsgInfo::has__voicelength() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizVoiceMsgInfo::set_has__voicelength() {
  _has_bits_[0] |= 0x00000020u;
}
void BizVoiceMsgInfo::clear_has__voicelength() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizVoiceMsgInfo::clear__voicelength() {
  _voicelength_ = 0u;
  clear_has__voicelength();
}
::google::protobuf::uint32 BizVoiceMsgInfo::_voicelength() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._VoiceLength)
  return _voicelength_;
}
void BizVoiceMsgInfo::set__voicelength(::google::protobuf::uint32 value) {
  set_has__voicelength();
  _voicelength_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._VoiceLength)
}

// optional string _Title = 4;
bool BizVoiceMsgInfo::has__title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizVoiceMsgInfo::set_has__title() {
  _has_bits_[0] |= 0x00000001u;
}
void BizVoiceMsgInfo::clear_has__title() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizVoiceMsgInfo::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
const ::std::string& BizVoiceMsgInfo::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._Title)
  return _title_.GetNoArena();
}
void BizVoiceMsgInfo::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._Title)
}
#if LANG_CXX11
void BizVoiceMsgInfo::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizVoiceMsgInfo._Title)
}
#endif
void BizVoiceMsgInfo::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizVoiceMsgInfo._Title)
}
void BizVoiceMsgInfo::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizVoiceMsgInfo._Title)
}
::std::string* BizVoiceMsgInfo::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizVoiceMsgInfo._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizVoiceMsgInfo::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizVoiceMsgInfo._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizVoiceMsgInfo::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizVoiceMsgInfo._Title)
}

// optional string _VocieId = 5;
bool BizVoiceMsgInfo::has__vocieid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizVoiceMsgInfo::set_has__vocieid() {
  _has_bits_[0] |= 0x00000002u;
}
void BizVoiceMsgInfo::clear_has__vocieid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizVoiceMsgInfo::clear__vocieid() {
  _vocieid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__vocieid();
}
const ::std::string& BizVoiceMsgInfo::_vocieid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
  return _vocieid_.GetNoArena();
}
void BizVoiceMsgInfo::set__vocieid(const ::std::string& value) {
  set_has__vocieid();
  _vocieid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
}
#if LANG_CXX11
void BizVoiceMsgInfo::set__vocieid(::std::string&& value) {
  set_has__vocieid();
  _vocieid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
}
#endif
void BizVoiceMsgInfo::set__vocieid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__vocieid();
  _vocieid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
}
void BizVoiceMsgInfo::set__vocieid(const char* value, size_t size) {
  set_has__vocieid();
  _vocieid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
}
::std::string* BizVoiceMsgInfo::mutable__vocieid() {
  set_has__vocieid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
  return _vocieid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizVoiceMsgInfo::release__vocieid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
  clear_has__vocieid();
  return _vocieid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizVoiceMsgInfo::set_allocated__vocieid(::std::string* _vocieid) {
  if (_vocieid != NULL) {
    set_has__vocieid();
  } else {
    clear_has__vocieid();
  }
  _vocieid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _vocieid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizVoiceMsgInfo._VocieId)
}

// optional string _ContentUrl = 6;
bool BizVoiceMsgInfo::has__contenturl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizVoiceMsgInfo::set_has__contenturl() {
  _has_bits_[0] |= 0x00000004u;
}
void BizVoiceMsgInfo::clear_has__contenturl() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizVoiceMsgInfo::clear__contenturl() {
  _contenturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__contenturl();
}
const ::std::string& BizVoiceMsgInfo::_contenturl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
  return _contenturl_.GetNoArena();
}
void BizVoiceMsgInfo::set__contenturl(const ::std::string& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
}
#if LANG_CXX11
void BizVoiceMsgInfo::set__contenturl(::std::string&& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
}
#endif
void BizVoiceMsgInfo::set__contenturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
}
void BizVoiceMsgInfo::set__contenturl(const char* value, size_t size) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
}
::std::string* BizVoiceMsgInfo::mutable__contenturl() {
  set_has__contenturl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
  return _contenturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizVoiceMsgInfo::release__contenturl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
  clear_has__contenturl();
  return _contenturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizVoiceMsgInfo::set_allocated__contenturl(::std::string* _contenturl) {
  if (_contenturl != NULL) {
    set_has__contenturl();
  } else {
    clear_has__contenturl();
  }
  _contenturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _contenturl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizVoiceMsgInfo._ContentUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizVideoMsgInfo::BizVideoMsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizVideoMsgInfo)
}
BizVideoMsgInfo::BizVideoMsgInfo(const BizVideoMsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizVideoMsgInfo)
}

void BizVideoMsgInfo::SharedCtor() {
  _cached_size_ = 0;
}

BizVideoMsgInfo::~BizVideoMsgInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizVideoMsgInfo)
  SharedDtor();
}

void BizVideoMsgInfo::SharedDtor() {
}

void BizVideoMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizVideoMsgInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizVideoMsgInfo& BizVideoMsgInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizVideoMsgInfo* BizVideoMsgInfo::New(::google::protobuf::Arena* arena) const {
  BizVideoMsgInfo* n = new BizVideoMsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizVideoMsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizVideoMsgInfo)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizVideoMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizVideoMsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizVideoMsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizVideoMsgInfo)
  return false;
#undef DO_
}

void BizVideoMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizVideoMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizVideoMsgInfo)
}

::google::protobuf::uint8* BizVideoMsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizVideoMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizVideoMsgInfo)
  return target;
}

size_t BizVideoMsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizVideoMsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizVideoMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizVideoMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizVideoMsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizVideoMsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizVideoMsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizVideoMsgInfo)
    MergeFrom(*source);
  }
}

void BizVideoMsgInfo::MergeFrom(const BizVideoMsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizVideoMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BizVideoMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizVideoMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizVideoMsgInfo::CopyFrom(const BizVideoMsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizVideoMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizVideoMsgInfo::IsInitialized() const {
  return true;
}

void BizVideoMsgInfo::Swap(BizVideoMsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizVideoMsgInfo::InternalSwap(BizVideoMsgInfo* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizVideoMsgInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizVideoMsgInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppMsgBaseInfo::kAppMsgIdFieldNumber;
const int BizAppMsgBaseInfo::kCreateTimeFieldNumber;
const int BizAppMsgBaseInfo::kUpdateTimeFieldNumber;
const int BizAppMsgBaseInfo::kTypeFieldNumber;
const int BizAppMsgBaseInfo::kBigPicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppMsgBaseInfo::BizAppMsgBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAppMsgBaseInfo)
}
BizAppMsgBaseInfo::BizAppMsgBaseInfo(const BizAppMsgBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_appmsgid_, &from._appmsgid_,
    reinterpret_cast<char*>(&_bigpic_) -
    reinterpret_cast<char*>(&_appmsgid_) + sizeof(_bigpic_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAppMsgBaseInfo)
}

void BizAppMsgBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_appmsgid_, 0, reinterpret_cast<char*>(&_bigpic_) -
    reinterpret_cast<char*>(&_appmsgid_) + sizeof(_bigpic_));
}

BizAppMsgBaseInfo::~BizAppMsgBaseInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAppMsgBaseInfo)
  SharedDtor();
}

void BizAppMsgBaseInfo::SharedDtor() {
}

void BizAppMsgBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppMsgBaseInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppMsgBaseInfo& BizAppMsgBaseInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppMsgBaseInfo* BizAppMsgBaseInfo::New(::google::protobuf::Arena* arena) const {
  BizAppMsgBaseInfo* n = new BizAppMsgBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppMsgBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAppMsgBaseInfo)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&_appmsgid_, 0, reinterpret_cast<char*>(&_bigpic_) -
      reinterpret_cast<char*>(&_appmsgid_) + sizeof(_bigpic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppMsgBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAppMsgBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _AppMsgId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__appmsgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_appmsgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _CreateTime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _UpdateTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__updatetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _BigPic = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__bigpic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_bigpic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAppMsgBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAppMsgBaseInfo)
  return false;
#undef DO_
}

void BizAppMsgBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAppMsgBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _AppMsgId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_appmsgid(), output);
  }

  // optional uint32 _CreateTime = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_createtime(), output);
  }

  // optional uint32 _UpdateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_updatetime(), output);
  }

  // optional uint32 _Type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_type(), output);
  }

  // optional uint32 _BigPic = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_bigpic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAppMsgBaseInfo)
}

::google::protobuf::uint8* BizAppMsgBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAppMsgBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _AppMsgId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_appmsgid(), target);
  }

  // optional uint32 _CreateTime = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_createtime(), target);
  }

  // optional uint32 _UpdateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_updatetime(), target);
  }

  // optional uint32 _Type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_type(), target);
  }

  // optional uint32 _BigPic = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_bigpic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAppMsgBaseInfo)
  return target;
}

size_t BizAppMsgBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAppMsgBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 _AppMsgId = 1;
    if (has__appmsgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_appmsgid());
    }

    // optional uint32 _CreateTime = 2;
    if (has__createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_createtime());
    }

    // optional uint32 _UpdateTime = 3;
    if (has__updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_updatetime());
    }

    // optional uint32 _Type = 4;
    if (has__type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_type());
    }

    // optional uint32 _BigPic = 5;
    if (has__bigpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_bigpic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppMsgBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAppMsgBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppMsgBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppMsgBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAppMsgBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAppMsgBaseInfo)
    MergeFrom(*source);
  }
}

void BizAppMsgBaseInfo::MergeFrom(const BizAppMsgBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAppMsgBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      _appmsgid_ = from._appmsgid_;
    }
    if (cached_has_bits & 0x00000002u) {
      _createtime_ = from._createtime_;
    }
    if (cached_has_bits & 0x00000004u) {
      _updatetime_ = from._updatetime_;
    }
    if (cached_has_bits & 0x00000008u) {
      _type_ = from._type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _bigpic_ = from._bigpic_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizAppMsgBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAppMsgBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppMsgBaseInfo::CopyFrom(const BizAppMsgBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAppMsgBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppMsgBaseInfo::IsInitialized() const {
  return true;
}

void BizAppMsgBaseInfo::Swap(BizAppMsgBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppMsgBaseInfo::InternalSwap(BizAppMsgBaseInfo* other) {
  std::swap(_appmsgid_, other->_appmsgid_);
  std::swap(_createtime_, other->_createtime_);
  std::swap(_updatetime_, other->_updatetime_);
  std::swap(_type_, other->_type_);
  std::swap(_bigpic_, other->_bigpic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppMsgBaseInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppMsgBaseInfo

// optional uint32 _AppMsgId = 1;
bool BizAppMsgBaseInfo::has__appmsgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppMsgBaseInfo::set_has__appmsgid() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppMsgBaseInfo::clear_has__appmsgid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppMsgBaseInfo::clear__appmsgid() {
  _appmsgid_ = 0u;
  clear_has__appmsgid();
}
::google::protobuf::uint32 BizAppMsgBaseInfo::_appmsgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgBaseInfo._AppMsgId)
  return _appmsgid_;
}
void BizAppMsgBaseInfo::set__appmsgid(::google::protobuf::uint32 value) {
  set_has__appmsgid();
  _appmsgid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgBaseInfo._AppMsgId)
}

// optional uint32 _CreateTime = 2;
bool BizAppMsgBaseInfo::has__createtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizAppMsgBaseInfo::set_has__createtime() {
  _has_bits_[0] |= 0x00000002u;
}
void BizAppMsgBaseInfo::clear_has__createtime() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizAppMsgBaseInfo::clear__createtime() {
  _createtime_ = 0u;
  clear_has__createtime();
}
::google::protobuf::uint32 BizAppMsgBaseInfo::_createtime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgBaseInfo._CreateTime)
  return _createtime_;
}
void BizAppMsgBaseInfo::set__createtime(::google::protobuf::uint32 value) {
  set_has__createtime();
  _createtime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgBaseInfo._CreateTime)
}

// optional uint32 _UpdateTime = 3;
bool BizAppMsgBaseInfo::has__updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizAppMsgBaseInfo::set_has__updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
void BizAppMsgBaseInfo::clear_has__updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizAppMsgBaseInfo::clear__updatetime() {
  _updatetime_ = 0u;
  clear_has__updatetime();
}
::google::protobuf::uint32 BizAppMsgBaseInfo::_updatetime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgBaseInfo._UpdateTime)
  return _updatetime_;
}
void BizAppMsgBaseInfo::set__updatetime(::google::protobuf::uint32 value) {
  set_has__updatetime();
  _updatetime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgBaseInfo._UpdateTime)
}

// optional uint32 _Type = 4;
bool BizAppMsgBaseInfo::has__type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizAppMsgBaseInfo::set_has__type() {
  _has_bits_[0] |= 0x00000008u;
}
void BizAppMsgBaseInfo::clear_has__type() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizAppMsgBaseInfo::clear__type() {
  _type_ = 0u;
  clear_has__type();
}
::google::protobuf::uint32 BizAppMsgBaseInfo::_type() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgBaseInfo._Type)
  return _type_;
}
void BizAppMsgBaseInfo::set__type(::google::protobuf::uint32 value) {
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgBaseInfo._Type)
}

// optional uint32 _BigPic = 5;
bool BizAppMsgBaseInfo::has__bigpic() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizAppMsgBaseInfo::set_has__bigpic() {
  _has_bits_[0] |= 0x00000010u;
}
void BizAppMsgBaseInfo::clear_has__bigpic() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizAppMsgBaseInfo::clear__bigpic() {
  _bigpic_ = 0u;
  clear_has__bigpic();
}
::google::protobuf::uint32 BizAppMsgBaseInfo::_bigpic() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgBaseInfo._BigPic)
  return _bigpic_;
}
void BizAppMsgBaseInfo::set__bigpic(::google::protobuf::uint32 value) {
  set_has__bigpic();
  _bigpic_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgBaseInfo._BigPic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileFinderLiveInfo_Media::kCoverUrlFieldNumber;
const int BizProfileFinderLiveInfo_Media::kHeightFieldNumber;
const int BizProfileFinderLiveInfo_Media::kWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileFinderLiveInfo_Media::BizProfileFinderLiveInfo_Media()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
}
BizProfileFinderLiveInfo_Media::BizProfileFinderLiveInfo_Media(const BizProfileFinderLiveInfo_Media& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _coverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverurl()) {
    _coverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverurl_);
  }
  ::memcpy(&_height_, &from._height_,
    reinterpret_cast<char*>(&_width_) -
    reinterpret_cast<char*>(&_height_) + sizeof(_width_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
}

void BizProfileFinderLiveInfo_Media::SharedCtor() {
  _cached_size_ = 0;
  _coverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_height_, 0, reinterpret_cast<char*>(&_width_) -
    reinterpret_cast<char*>(&_height_) + sizeof(_width_));
}

BizProfileFinderLiveInfo_Media::~BizProfileFinderLiveInfo_Media() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  SharedDtor();
}

void BizProfileFinderLiveInfo_Media::SharedDtor() {
  _coverurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizProfileFinderLiveInfo_Media::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileFinderLiveInfo_Media::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileFinderLiveInfo_Media& BizProfileFinderLiveInfo_Media::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileFinderLiveInfo_Media* BizProfileFinderLiveInfo_Media::New(::google::protobuf::Arena* arena) const {
  BizProfileFinderLiveInfo_Media* n = new BizProfileFinderLiveInfo_Media;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileFinderLiveInfo_Media::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  if (has__coverurl()) {
    GOOGLE_DCHECK(!_coverurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_coverurl_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&_height_, 0, reinterpret_cast<char*>(&_width_) -
      reinterpret_cast<char*>(&_height_) + sizeof(_width_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileFinderLiveInfo_Media::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _CoverUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverurl().data(), this->_coverurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  return false;
#undef DO_
}

void BizProfileFinderLiveInfo_Media::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _CoverUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverurl().data(), this->_coverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_coverurl(), output);
  }

  // optional uint32 _Height = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_height(), output);
  }

  // optional uint32 _Width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_width(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
}

::google::protobuf::uint8* BizProfileFinderLiveInfo_Media::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _CoverUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverurl().data(), this->_coverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_coverurl(), target);
  }

  // optional uint32 _Height = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_height(), target);
  }

  // optional uint32 _Width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_width(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  return target;
}

size_t BizProfileFinderLiveInfo_Media::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string _CoverUrl = 1;
    if (has__coverurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverurl());
    }

    // optional uint32 _Height = 2;
    if (has__height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_height());
    }

    // optional uint32 _Width = 3;
    if (has__width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_width());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileFinderLiveInfo_Media::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileFinderLiveInfo_Media* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileFinderLiveInfo_Media>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
    MergeFrom(*source);
  }
}

void BizProfileFinderLiveInfo_Media::MergeFrom(const BizProfileFinderLiveInfo_Media& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__coverurl();
      _coverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      _height_ = from._height_;
    }
    if (cached_has_bits & 0x00000004u) {
      _width_ = from._width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileFinderLiveInfo_Media::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileFinderLiveInfo_Media::CopyFrom(const BizProfileFinderLiveInfo_Media& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileFinderLiveInfo.Media)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileFinderLiveInfo_Media::IsInitialized() const {
  return true;
}

void BizProfileFinderLiveInfo_Media::Swap(BizProfileFinderLiveInfo_Media* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileFinderLiveInfo_Media::InternalSwap(BizProfileFinderLiveInfo_Media* other) {
  _coverurl_.Swap(&other->_coverurl_);
  std::swap(_height_, other->_height_);
  std::swap(_width_, other->_width_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileFinderLiveInfo_Media::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileFinderLiveInfo_Media

// optional string _CoverUrl = 1;
bool BizProfileFinderLiveInfo_Media::has__coverurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileFinderLiveInfo_Media::set_has__coverurl() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileFinderLiveInfo_Media::clear_has__coverurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileFinderLiveInfo_Media::clear__coverurl() {
  _coverurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverurl();
}
const ::std::string& BizProfileFinderLiveInfo_Media::_coverurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
  return _coverurl_.GetNoArena();
}
void BizProfileFinderLiveInfo_Media::set__coverurl(const ::std::string& value) {
  set_has__coverurl();
  _coverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo_Media::set__coverurl(::std::string&& value) {
  set_has__coverurl();
  _coverurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
}
#endif
void BizProfileFinderLiveInfo_Media::set__coverurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverurl();
  _coverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
}
void BizProfileFinderLiveInfo_Media::set__coverurl(const char* value, size_t size) {
  set_has__coverurl();
  _coverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
}
::std::string* BizProfileFinderLiveInfo_Media::mutable__coverurl() {
  set_has__coverurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
  return _coverurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo_Media::release__coverurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
  clear_has__coverurl();
  return _coverurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo_Media::set_allocated__coverurl(::std::string* _coverurl) {
  if (_coverurl != NULL) {
    set_has__coverurl();
  } else {
    clear_has__coverurl();
  }
  _coverurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo.Media._CoverUrl)
}

// optional uint32 _Height = 2;
bool BizProfileFinderLiveInfo_Media::has__height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileFinderLiveInfo_Media::set_has__height() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileFinderLiveInfo_Media::clear_has__height() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileFinderLiveInfo_Media::clear__height() {
  _height_ = 0u;
  clear_has__height();
}
::google::protobuf::uint32 BizProfileFinderLiveInfo_Media::_height() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo.Media._Height)
  return _height_;
}
void BizProfileFinderLiveInfo_Media::set__height(::google::protobuf::uint32 value) {
  set_has__height();
  _height_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo.Media._Height)
}

// optional uint32 _Width = 3;
bool BizProfileFinderLiveInfo_Media::has__width() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizProfileFinderLiveInfo_Media::set_has__width() {
  _has_bits_[0] |= 0x00000004u;
}
void BizProfileFinderLiveInfo_Media::clear_has__width() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizProfileFinderLiveInfo_Media::clear__width() {
  _width_ = 0u;
  clear_has__width();
}
::google::protobuf::uint32 BizProfileFinderLiveInfo_Media::_width() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo.Media._Width)
  return _width_;
}
void BizProfileFinderLiveInfo_Media::set__width(::google::protobuf::uint32 value) {
  set_has__width();
  _width_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo.Media._Width)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileFinderLiveInfo::kFinderUserNameFieldNumber;
const int BizProfileFinderLiveInfo::kFinderNonceIdFieldNumber;
const int BizProfileFinderLiveInfo::kExportIdFieldNumber;
const int BizProfileFinderLiveInfo::kNickNameFieldNumber;
const int BizProfileFinderLiveInfo::kHeadUrlFieldNumber;
const int BizProfileFinderLiveInfo::kDescFieldNumber;
const int BizProfileFinderLiveInfo::kLiveStatusFieldNumber;
const int BizProfileFinderLiveInfo::kLiveSourceTypeStrFieldNumber;
const int BizProfileFinderLiveInfo::kExtFlagFieldNumber;
const int BizProfileFinderLiveInfo::kAuthIConUrlFieldNumber;
const int BizProfileFinderLiveInfo::kAuthIConTypeStrFieldNumber;
const int BizProfileFinderLiveInfo::kMediaFieldNumber;
const int BizProfileFinderLiveInfo::kCateGoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileFinderLiveInfo::BizProfileFinderLiveInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileFinderLiveInfo)
}
BizProfileFinderLiveInfo::BizProfileFinderLiveInfo(const BizProfileFinderLiveInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _finderusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__finderusername()) {
    _finderusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._finderusername_);
  }
  _findernonceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__findernonceid()) {
    _findernonceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._findernonceid_);
  }
  _exportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__exportid()) {
    _exportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._exportid_);
  }
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__nickname()) {
    _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
  }
  _headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__headurl()) {
    _headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._headurl_);
  }
  _desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__desc()) {
    _desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._desc_);
  }
  _livesourcetypestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__livesourcetypestr()) {
    _livesourcetypestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._livesourcetypestr_);
  }
  _authiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__authiconurl()) {
    _authiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authiconurl_);
  }
  _authicontypestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__authicontypestr()) {
    _authicontypestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authicontypestr_);
  }
  _category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__category()) {
    _category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._category_);
  }
  if (from.has__media()) {
    _media_ = new ::MMPro::micromsg::BizProfileFinderLiveInfo_Media(*from._media_);
  } else {
    _media_ = NULL;
  }
  ::memcpy(&_livestatus_, &from._livestatus_,
    reinterpret_cast<char*>(&_extflag_) -
    reinterpret_cast<char*>(&_livestatus_) + sizeof(_extflag_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileFinderLiveInfo)
}

void BizProfileFinderLiveInfo::SharedCtor() {
  _cached_size_ = 0;
  _finderusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _findernonceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _exportid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _headurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _livesourcetypestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authicontypestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _category_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_media_, 0, reinterpret_cast<char*>(&_extflag_) -
    reinterpret_cast<char*>(&_media_) + sizeof(_extflag_));
}

BizProfileFinderLiveInfo::~BizProfileFinderLiveInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileFinderLiveInfo)
  SharedDtor();
}

void BizProfileFinderLiveInfo::SharedDtor() {
  _finderusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _findernonceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _exportid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _headurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _livesourcetypestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authicontypestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _category_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _media_;
  }
}

void BizProfileFinderLiveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileFinderLiveInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileFinderLiveInfo& BizProfileFinderLiveInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileFinderLiveInfo* BizProfileFinderLiveInfo::New(::google::protobuf::Arena* arena) const {
  BizProfileFinderLiveInfo* n = new BizProfileFinderLiveInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileFinderLiveInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has__finderusername()) {
      GOOGLE_DCHECK(!_finderusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_finderusername_.UnsafeRawStringPointer())->clear();
    }
    if (has__findernonceid()) {
      GOOGLE_DCHECK(!_findernonceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_findernonceid_.UnsafeRawStringPointer())->clear();
    }
    if (has__exportid()) {
      GOOGLE_DCHECK(!_exportid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_exportid_.UnsafeRawStringPointer())->clear();
    }
    if (has__nickname()) {
      GOOGLE_DCHECK(!_nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has__headurl()) {
      GOOGLE_DCHECK(!_headurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_headurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__desc()) {
      GOOGLE_DCHECK(!_desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_desc_.UnsafeRawStringPointer())->clear();
    }
    if (has__livesourcetypestr()) {
      GOOGLE_DCHECK(!_livesourcetypestr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_livesourcetypestr_.UnsafeRawStringPointer())->clear();
    }
    if (has__authiconurl()) {
      GOOGLE_DCHECK(!_authiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_authiconurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    if (has__authicontypestr()) {
      GOOGLE_DCHECK(!_authicontypestr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_authicontypestr_.UnsafeRawStringPointer())->clear();
    }
    if (has__category()) {
      GOOGLE_DCHECK(!_category_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_category_.UnsafeRawStringPointer())->clear();
    }
    if (has__media()) {
      GOOGLE_DCHECK(_media_ != NULL);
      _media_->::MMPro::micromsg::BizProfileFinderLiveInfo_Media::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 6144u) {
    ::memset(&_livestatus_, 0, reinterpret_cast<char*>(&_extflag_) -
      reinterpret_cast<char*>(&_livestatus_) + sizeof(_extflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileFinderLiveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _FinderUserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__finderusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_finderusername().data(), this->_finderusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FinderNonceId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__findernonceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_findernonceid().data(), this->_findernonceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ExportId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__exportid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_exportid().data(), this->_exportid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._ExportId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _NickName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nickname().data(), this->_nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _HeadUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__headurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_headurl().data(), this->_headurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Desc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_desc().data(), this->_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._Desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _LiveStatus = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__livestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_livestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _LiveSourceTypeStr = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__livesourcetypestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_livesourcetypestr().data(), this->_livesourcetypestr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ExtFlag = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has__extflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_extflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AuthIConUrl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__authiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_authiconurl().data(), this->_authiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AuthIConTypeStr = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__authicontypestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_authicontypestr().data(), this->_authicontypestr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizProfileFinderLiveInfo.Media _Media = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__media()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CateGory = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__category()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_category().data(), this->_category().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileFinderLiveInfo._CateGory");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileFinderLiveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileFinderLiveInfo)
  return false;
#undef DO_
}

void BizProfileFinderLiveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _FinderUserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_finderusername().data(), this->_finderusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_finderusername(), output);
  }

  // optional string _FinderNonceId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_findernonceid().data(), this->_findernonceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_findernonceid(), output);
  }

  // optional string _ExportId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_exportid().data(), this->_exportid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._ExportId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_exportid(), output);
  }

  // optional string _NickName = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_nickname(), output);
  }

  // optional string _HeadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_headurl().data(), this->_headurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_headurl(), output);
  }

  // optional string _Desc = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_desc().data(), this->_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_desc(), output);
  }

  // optional uint32 _LiveStatus = 7;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_livestatus(), output);
  }

  // optional string _LiveSourceTypeStr = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_livesourcetypestr().data(), this->_livesourcetypestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_livesourcetypestr(), output);
  }

  // optional uint32 _ExtFlag = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->_extflag(), output);
  }

  // optional string _AuthIConUrl = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authiconurl().data(), this->_authiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->_authiconurl(), output);
  }

  // optional string _AuthIConTypeStr = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authicontypestr().data(), this->_authicontypestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->_authicontypestr(), output);
  }

  // optional .MMPro.micromsg.BizProfileFinderLiveInfo.Media _Media = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->_media_, output);
  }

  // optional string _CateGory = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_category().data(), this->_category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._CateGory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->_category(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileFinderLiveInfo)
}

::google::protobuf::uint8* BizProfileFinderLiveInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _FinderUserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_finderusername().data(), this->_finderusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_finderusername(), target);
  }

  // optional string _FinderNonceId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_findernonceid().data(), this->_findernonceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_findernonceid(), target);
  }

  // optional string _ExportId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_exportid().data(), this->_exportid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._ExportId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_exportid(), target);
  }

  // optional string _NickName = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_nickname(), target);
  }

  // optional string _HeadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_headurl().data(), this->_headurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_headurl(), target);
  }

  // optional string _Desc = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_desc().data(), this->_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_desc(), target);
  }

  // optional uint32 _LiveStatus = 7;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_livestatus(), target);
  }

  // optional string _LiveSourceTypeStr = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_livesourcetypestr().data(), this->_livesourcetypestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->_livesourcetypestr(), target);
  }

  // optional uint32 _ExtFlag = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->_extflag(), target);
  }

  // optional string _AuthIConUrl = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authiconurl().data(), this->_authiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->_authiconurl(), target);
  }

  // optional string _AuthIConTypeStr = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authicontypestr().data(), this->_authicontypestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->_authicontypestr(), target);
  }

  // optional .MMPro.micromsg.BizProfileFinderLiveInfo.Media _Media = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->_media_, deterministic, target);
  }

  // optional string _CateGory = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_category().data(), this->_category().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileFinderLiveInfo._CateGory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->_category(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileFinderLiveInfo)
  return target;
}

size_t BizProfileFinderLiveInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string _FinderUserName = 1;
    if (has__finderusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_finderusername());
    }

    // optional string _FinderNonceId = 2;
    if (has__findernonceid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_findernonceid());
    }

    // optional string _ExportId = 3;
    if (has__exportid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_exportid());
    }

    // optional string _NickName = 4;
    if (has__nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nickname());
    }

    // optional string _HeadUrl = 5;
    if (has__headurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_headurl());
    }

    // optional string _Desc = 6;
    if (has__desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_desc());
    }

    // optional string _LiveSourceTypeStr = 8;
    if (has__livesourcetypestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_livesourcetypestr());
    }

    // optional string _AuthIConUrl = 10;
    if (has__authiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_authiconurl());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional string _AuthIConTypeStr = 11;
    if (has__authicontypestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_authicontypestr());
    }

    // optional string _CateGory = 13;
    if (has__category()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_category());
    }

    // optional .MMPro.micromsg.BizProfileFinderLiveInfo.Media _Media = 12;
    if (has__media()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_media_);
    }

    // optional uint32 _LiveStatus = 7;
    if (has__livestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_livestatus());
    }

    // optional uint32 _ExtFlag = 9;
    if (has__extflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_extflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileFinderLiveInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileFinderLiveInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileFinderLiveInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileFinderLiveInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileFinderLiveInfo)
    MergeFrom(*source);
  }
}

void BizProfileFinderLiveInfo::MergeFrom(const BizProfileFinderLiveInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__finderusername();
      _finderusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._finderusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__findernonceid();
      _findernonceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._findernonceid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__exportid();
      _exportid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._exportid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__nickname();
      _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__headurl();
      _headurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._headurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has__desc();
      _desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._desc_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has__livesourcetypestr();
      _livesourcetypestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._livesourcetypestr_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has__authiconurl();
      _authiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authiconurl_);
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      set_has__authicontypestr();
      _authicontypestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authicontypestr_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has__category();
      _category_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._category_);
    }
    if (cached_has_bits & 0x00000400u) {
      mutable__media()->::MMPro::micromsg::BizProfileFinderLiveInfo_Media::MergeFrom(from._media());
    }
    if (cached_has_bits & 0x00000800u) {
      _livestatus_ = from._livestatus_;
    }
    if (cached_has_bits & 0x00001000u) {
      _extflag_ = from._extflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileFinderLiveInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileFinderLiveInfo::CopyFrom(const BizProfileFinderLiveInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileFinderLiveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileFinderLiveInfo::IsInitialized() const {
  return true;
}

void BizProfileFinderLiveInfo::Swap(BizProfileFinderLiveInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileFinderLiveInfo::InternalSwap(BizProfileFinderLiveInfo* other) {
  _finderusername_.Swap(&other->_finderusername_);
  _findernonceid_.Swap(&other->_findernonceid_);
  _exportid_.Swap(&other->_exportid_);
  _nickname_.Swap(&other->_nickname_);
  _headurl_.Swap(&other->_headurl_);
  _desc_.Swap(&other->_desc_);
  _livesourcetypestr_.Swap(&other->_livesourcetypestr_);
  _authiconurl_.Swap(&other->_authiconurl_);
  _authicontypestr_.Swap(&other->_authicontypestr_);
  _category_.Swap(&other->_category_);
  std::swap(_media_, other->_media_);
  std::swap(_livestatus_, other->_livestatus_);
  std::swap(_extflag_, other->_extflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileFinderLiveInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileFinderLiveInfo

// optional string _FinderUserName = 1;
bool BizProfileFinderLiveInfo::has__finderusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileFinderLiveInfo::set_has__finderusername() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileFinderLiveInfo::clear_has__finderusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileFinderLiveInfo::clear__finderusername() {
  _finderusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__finderusername();
}
const ::std::string& BizProfileFinderLiveInfo::_finderusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
  return _finderusername_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__finderusername(const ::std::string& value) {
  set_has__finderusername();
  _finderusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__finderusername(::std::string&& value) {
  set_has__finderusername();
  _finderusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
}
#endif
void BizProfileFinderLiveInfo::set__finderusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__finderusername();
  _finderusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
}
void BizProfileFinderLiveInfo::set__finderusername(const char* value, size_t size) {
  set_has__finderusername();
  _finderusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
}
::std::string* BizProfileFinderLiveInfo::mutable__finderusername() {
  set_has__finderusername();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
  return _finderusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__finderusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
  clear_has__finderusername();
  return _finderusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__finderusername(::std::string* _finderusername) {
  if (_finderusername != NULL) {
    set_has__finderusername();
  } else {
    clear_has__finderusername();
  }
  _finderusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _finderusername);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._FinderUserName)
}

// optional string _FinderNonceId = 2;
bool BizProfileFinderLiveInfo::has__findernonceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileFinderLiveInfo::set_has__findernonceid() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileFinderLiveInfo::clear_has__findernonceid() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileFinderLiveInfo::clear__findernonceid() {
  _findernonceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__findernonceid();
}
const ::std::string& BizProfileFinderLiveInfo::_findernonceid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
  return _findernonceid_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__findernonceid(const ::std::string& value) {
  set_has__findernonceid();
  _findernonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__findernonceid(::std::string&& value) {
  set_has__findernonceid();
  _findernonceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
}
#endif
void BizProfileFinderLiveInfo::set__findernonceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__findernonceid();
  _findernonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
}
void BizProfileFinderLiveInfo::set__findernonceid(const char* value, size_t size) {
  set_has__findernonceid();
  _findernonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
}
::std::string* BizProfileFinderLiveInfo::mutable__findernonceid() {
  set_has__findernonceid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
  return _findernonceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__findernonceid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
  clear_has__findernonceid();
  return _findernonceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__findernonceid(::std::string* _findernonceid) {
  if (_findernonceid != NULL) {
    set_has__findernonceid();
  } else {
    clear_has__findernonceid();
  }
  _findernonceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _findernonceid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._FinderNonceId)
}

// optional string _ExportId = 3;
bool BizProfileFinderLiveInfo::has__exportid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizProfileFinderLiveInfo::set_has__exportid() {
  _has_bits_[0] |= 0x00000004u;
}
void BizProfileFinderLiveInfo::clear_has__exportid() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizProfileFinderLiveInfo::clear__exportid() {
  _exportid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__exportid();
}
const ::std::string& BizProfileFinderLiveInfo::_exportid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
  return _exportid_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__exportid(const ::std::string& value) {
  set_has__exportid();
  _exportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__exportid(::std::string&& value) {
  set_has__exportid();
  _exportid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
}
#endif
void BizProfileFinderLiveInfo::set__exportid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__exportid();
  _exportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
}
void BizProfileFinderLiveInfo::set__exportid(const char* value, size_t size) {
  set_has__exportid();
  _exportid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
}
::std::string* BizProfileFinderLiveInfo::mutable__exportid() {
  set_has__exportid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
  return _exportid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__exportid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
  clear_has__exportid();
  return _exportid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__exportid(::std::string* _exportid) {
  if (_exportid != NULL) {
    set_has__exportid();
  } else {
    clear_has__exportid();
  }
  _exportid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _exportid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._ExportId)
}

// optional string _NickName = 4;
bool BizProfileFinderLiveInfo::has__nickname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizProfileFinderLiveInfo::set_has__nickname() {
  _has_bits_[0] |= 0x00000008u;
}
void BizProfileFinderLiveInfo::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizProfileFinderLiveInfo::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
const ::std::string& BizProfileFinderLiveInfo::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
  return _nickname_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__nickname(::std::string&& value) {
  set_has__nickname();
  _nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
}
#endif
void BizProfileFinderLiveInfo::set__nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
}
void BizProfileFinderLiveInfo::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
}
::std::string* BizProfileFinderLiveInfo::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._NickName)
}

// optional string _HeadUrl = 5;
bool BizProfileFinderLiveInfo::has__headurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizProfileFinderLiveInfo::set_has__headurl() {
  _has_bits_[0] |= 0x00000010u;
}
void BizProfileFinderLiveInfo::clear_has__headurl() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizProfileFinderLiveInfo::clear__headurl() {
  _headurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__headurl();
}
const ::std::string& BizProfileFinderLiveInfo::_headurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
  return _headurl_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__headurl(const ::std::string& value) {
  set_has__headurl();
  _headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__headurl(::std::string&& value) {
  set_has__headurl();
  _headurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
}
#endif
void BizProfileFinderLiveInfo::set__headurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__headurl();
  _headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
}
void BizProfileFinderLiveInfo::set__headurl(const char* value, size_t size) {
  set_has__headurl();
  _headurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
}
::std::string* BizProfileFinderLiveInfo::mutable__headurl() {
  set_has__headurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
  return _headurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__headurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
  clear_has__headurl();
  return _headurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__headurl(::std::string* _headurl) {
  if (_headurl != NULL) {
    set_has__headurl();
  } else {
    clear_has__headurl();
  }
  _headurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _headurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._HeadUrl)
}

// optional string _Desc = 6;
bool BizProfileFinderLiveInfo::has__desc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizProfileFinderLiveInfo::set_has__desc() {
  _has_bits_[0] |= 0x00000020u;
}
void BizProfileFinderLiveInfo::clear_has__desc() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizProfileFinderLiveInfo::clear__desc() {
  _desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__desc();
}
const ::std::string& BizProfileFinderLiveInfo::_desc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
  return _desc_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__desc(const ::std::string& value) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__desc(::std::string&& value) {
  set_has__desc();
  _desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
}
#endif
void BizProfileFinderLiveInfo::set__desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
}
void BizProfileFinderLiveInfo::set__desc(const char* value, size_t size) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
}
::std::string* BizProfileFinderLiveInfo::mutable__desc() {
  set_has__desc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
  return _desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__desc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
  clear_has__desc();
  return _desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__desc(::std::string* _desc) {
  if (_desc != NULL) {
    set_has__desc();
  } else {
    clear_has__desc();
  }
  _desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _desc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._Desc)
}

// optional uint32 _LiveStatus = 7;
bool BizProfileFinderLiveInfo::has__livestatus() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BizProfileFinderLiveInfo::set_has__livestatus() {
  _has_bits_[0] |= 0x00000800u;
}
void BizProfileFinderLiveInfo::clear_has__livestatus() {
  _has_bits_[0] &= ~0x00000800u;
}
void BizProfileFinderLiveInfo::clear__livestatus() {
  _livestatus_ = 0u;
  clear_has__livestatus();
}
::google::protobuf::uint32 BizProfileFinderLiveInfo::_livestatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._LiveStatus)
  return _livestatus_;
}
void BizProfileFinderLiveInfo::set__livestatus(::google::protobuf::uint32 value) {
  set_has__livestatus();
  _livestatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._LiveStatus)
}

// optional string _LiveSourceTypeStr = 8;
bool BizProfileFinderLiveInfo::has__livesourcetypestr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BizProfileFinderLiveInfo::set_has__livesourcetypestr() {
  _has_bits_[0] |= 0x00000040u;
}
void BizProfileFinderLiveInfo::clear_has__livesourcetypestr() {
  _has_bits_[0] &= ~0x00000040u;
}
void BizProfileFinderLiveInfo::clear__livesourcetypestr() {
  _livesourcetypestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__livesourcetypestr();
}
const ::std::string& BizProfileFinderLiveInfo::_livesourcetypestr() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
  return _livesourcetypestr_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__livesourcetypestr(const ::std::string& value) {
  set_has__livesourcetypestr();
  _livesourcetypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__livesourcetypestr(::std::string&& value) {
  set_has__livesourcetypestr();
  _livesourcetypestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
}
#endif
void BizProfileFinderLiveInfo::set__livesourcetypestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__livesourcetypestr();
  _livesourcetypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
}
void BizProfileFinderLiveInfo::set__livesourcetypestr(const char* value, size_t size) {
  set_has__livesourcetypestr();
  _livesourcetypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
}
::std::string* BizProfileFinderLiveInfo::mutable__livesourcetypestr() {
  set_has__livesourcetypestr();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
  return _livesourcetypestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__livesourcetypestr() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
  clear_has__livesourcetypestr();
  return _livesourcetypestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__livesourcetypestr(::std::string* _livesourcetypestr) {
  if (_livesourcetypestr != NULL) {
    set_has__livesourcetypestr();
  } else {
    clear_has__livesourcetypestr();
  }
  _livesourcetypestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _livesourcetypestr);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._LiveSourceTypeStr)
}

// optional uint32 _ExtFlag = 9;
bool BizProfileFinderLiveInfo::has__extflag() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BizProfileFinderLiveInfo::set_has__extflag() {
  _has_bits_[0] |= 0x00001000u;
}
void BizProfileFinderLiveInfo::clear_has__extflag() {
  _has_bits_[0] &= ~0x00001000u;
}
void BizProfileFinderLiveInfo::clear__extflag() {
  _extflag_ = 0u;
  clear_has__extflag();
}
::google::protobuf::uint32 BizProfileFinderLiveInfo::_extflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._ExtFlag)
  return _extflag_;
}
void BizProfileFinderLiveInfo::set__extflag(::google::protobuf::uint32 value) {
  set_has__extflag();
  _extflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._ExtFlag)
}

// optional string _AuthIConUrl = 10;
bool BizProfileFinderLiveInfo::has__authiconurl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BizProfileFinderLiveInfo::set_has__authiconurl() {
  _has_bits_[0] |= 0x00000080u;
}
void BizProfileFinderLiveInfo::clear_has__authiconurl() {
  _has_bits_[0] &= ~0x00000080u;
}
void BizProfileFinderLiveInfo::clear__authiconurl() {
  _authiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authiconurl();
}
const ::std::string& BizProfileFinderLiveInfo::_authiconurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
  return _authiconurl_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__authiconurl(const ::std::string& value) {
  set_has__authiconurl();
  _authiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__authiconurl(::std::string&& value) {
  set_has__authiconurl();
  _authiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
}
#endif
void BizProfileFinderLiveInfo::set__authiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authiconurl();
  _authiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
}
void BizProfileFinderLiveInfo::set__authiconurl(const char* value, size_t size) {
  set_has__authiconurl();
  _authiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
}
::std::string* BizProfileFinderLiveInfo::mutable__authiconurl() {
  set_has__authiconurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
  return _authiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__authiconurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
  clear_has__authiconurl();
  return _authiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__authiconurl(::std::string* _authiconurl) {
  if (_authiconurl != NULL) {
    set_has__authiconurl();
  } else {
    clear_has__authiconurl();
  }
  _authiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authiconurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConUrl)
}

// optional string _AuthIConTypeStr = 11;
bool BizProfileFinderLiveInfo::has__authicontypestr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BizProfileFinderLiveInfo::set_has__authicontypestr() {
  _has_bits_[0] |= 0x00000100u;
}
void BizProfileFinderLiveInfo::clear_has__authicontypestr() {
  _has_bits_[0] &= ~0x00000100u;
}
void BizProfileFinderLiveInfo::clear__authicontypestr() {
  _authicontypestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authicontypestr();
}
const ::std::string& BizProfileFinderLiveInfo::_authicontypestr() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
  return _authicontypestr_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__authicontypestr(const ::std::string& value) {
  set_has__authicontypestr();
  _authicontypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__authicontypestr(::std::string&& value) {
  set_has__authicontypestr();
  _authicontypestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
}
#endif
void BizProfileFinderLiveInfo::set__authicontypestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authicontypestr();
  _authicontypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
}
void BizProfileFinderLiveInfo::set__authicontypestr(const char* value, size_t size) {
  set_has__authicontypestr();
  _authicontypestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
}
::std::string* BizProfileFinderLiveInfo::mutable__authicontypestr() {
  set_has__authicontypestr();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
  return _authicontypestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__authicontypestr() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
  clear_has__authicontypestr();
  return _authicontypestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__authicontypestr(::std::string* _authicontypestr) {
  if (_authicontypestr != NULL) {
    set_has__authicontypestr();
  } else {
    clear_has__authicontypestr();
  }
  _authicontypestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authicontypestr);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._AuthIConTypeStr)
}

// optional .MMPro.micromsg.BizProfileFinderLiveInfo.Media _Media = 12;
bool BizProfileFinderLiveInfo::has__media() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BizProfileFinderLiveInfo::set_has__media() {
  _has_bits_[0] |= 0x00000400u;
}
void BizProfileFinderLiveInfo::clear_has__media() {
  _has_bits_[0] &= ~0x00000400u;
}
void BizProfileFinderLiveInfo::clear__media() {
  if (_media_ != NULL) _media_->::MMPro::micromsg::BizProfileFinderLiveInfo_Media::Clear();
  clear_has__media();
}
const ::MMPro::micromsg::BizProfileFinderLiveInfo_Media& BizProfileFinderLiveInfo::_media() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._Media)
  return _media_ != NULL ? *_media_
                         : *::MMPro::micromsg::BizProfileFinderLiveInfo_Media::internal_default_instance();
}
::MMPro::micromsg::BizProfileFinderLiveInfo_Media* BizProfileFinderLiveInfo::mutable__media() {
  set_has__media();
  if (_media_ == NULL) {
    _media_ = new ::MMPro::micromsg::BizProfileFinderLiveInfo_Media;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._Media)
  return _media_;
}
::MMPro::micromsg::BizProfileFinderLiveInfo_Media* BizProfileFinderLiveInfo::release__media() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._Media)
  clear_has__media();
  ::MMPro::micromsg::BizProfileFinderLiveInfo_Media* temp = _media_;
  _media_ = NULL;
  return temp;
}
void BizProfileFinderLiveInfo::set_allocated__media(::MMPro::micromsg::BizProfileFinderLiveInfo_Media* _media) {
  delete _media_;
  _media_ = _media;
  if (_media) {
    set_has__media();
  } else {
    clear_has__media();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._Media)
}

// optional string _CateGory = 13;
bool BizProfileFinderLiveInfo::has__category() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BizProfileFinderLiveInfo::set_has__category() {
  _has_bits_[0] |= 0x00000200u;
}
void BizProfileFinderLiveInfo::clear_has__category() {
  _has_bits_[0] &= ~0x00000200u;
}
void BizProfileFinderLiveInfo::clear__category() {
  _category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__category();
}
const ::std::string& BizProfileFinderLiveInfo::_category() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
  return _category_.GetNoArena();
}
void BizProfileFinderLiveInfo::set__category(const ::std::string& value) {
  set_has__category();
  _category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
}
#if LANG_CXX11
void BizProfileFinderLiveInfo::set__category(::std::string&& value) {
  set_has__category();
  _category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
}
#endif
void BizProfileFinderLiveInfo::set__category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__category();
  _category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
}
void BizProfileFinderLiveInfo::set__category(const char* value, size_t size) {
  set_has__category();
  _category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
}
::std::string* BizProfileFinderLiveInfo::mutable__category() {
  set_has__category();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
  return _category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileFinderLiveInfo::release__category() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
  clear_has__category();
  return _category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileFinderLiveInfo::set_allocated__category(::std::string* _category) {
  if (_category != NULL) {
    set_has__category();
  } else {
    clear_has__category();
  }
  _category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _category);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileFinderLiveInfo._CateGory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::kPicUrlFieldNumber;
const int BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::kWidthFieldNumber;
const int BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
}
BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo(const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _picurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__picurl()) {
    _picurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._picurl_);
  }
  ::memcpy(&_width_, &from._width_,
    reinterpret_cast<char*>(&_height_) -
    reinterpret_cast<char*>(&_width_) + sizeof(_height_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::SharedCtor() {
  _cached_size_ = 0;
  _picurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_width_, 0, reinterpret_cast<char*>(&_height_) -
    reinterpret_cast<char*>(&_width_) + sizeof(_height_));
}

BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::~BizAppMsgDetailInfo_PicUrlsMsg_PicInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  SharedDtor();
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::SharedDtor() {
  _picurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo& BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::New(::google::protobuf::Arena* arena) const {
  BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* n = new BizAppMsgDetailInfo_PicUrlsMsg_PicInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  if (has__picurl()) {
    GOOGLE_DCHECK(!_picurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_picurl_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&_width_, 0, reinterpret_cast<char*>(&_height_) -
      reinterpret_cast<char*>(&_width_) + sizeof(_height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _PicUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__picurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_picurl().data(), this->_picurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  return false;
#undef DO_
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _PicUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_picurl().data(), this->_picurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_picurl(), output);
  }

  // optional uint32 _Width = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_width(), output);
  }

  // optional uint32 _Height = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
}

::google::protobuf::uint8* BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _PicUrl = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_picurl().data(), this->_picurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_picurl(), target);
  }

  // optional uint32 _Width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_width(), target);
  }

  // optional uint32 _Height = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  return target;
}

size_t BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string _PicUrl = 1;
    if (has__picurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_picurl());
    }

    // optional uint32 _Width = 2;
    if (has__width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_width());
    }

    // optional uint32 _Height = 3;
    if (has__height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_height());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
    MergeFrom(*source);
  }
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::MergeFrom(const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__picurl();
      _picurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._picurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      _width_ = from._width_;
    }
    if (cached_has_bits & 0x00000004u) {
      _height_ = from._height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::CopyFrom(const BizAppMsgDetailInfo_PicUrlsMsg_PicInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::IsInitialized() const {
  return true;
}

void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::Swap(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::InternalSwap(BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* other) {
  _picurl_.Swap(&other->_picurl_);
  std::swap(_width_, other->_width_);
  std::swap(_height_, other->_height_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppMsgDetailInfo_PicUrlsMsg_PicInfo

// optional string _PicUrl = 1;
bool BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::has__picurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set_has__picurl() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear_has__picurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear__picurl() {
  _picurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__picurl();
}
const ::std::string& BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::_picurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
  return _picurl_.GetNoArena();
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__picurl(const ::std::string& value) {
  set_has__picurl();
  _picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
}
#if LANG_CXX11
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__picurl(::std::string&& value) {
  set_has__picurl();
  _picurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
}
#endif
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__picurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__picurl();
  _picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__picurl(const char* value, size_t size) {
  set_has__picurl();
  _picurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
}
::std::string* BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::mutable__picurl() {
  set_has__picurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
  return _picurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::release__picurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
  clear_has__picurl();
  return _picurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set_allocated__picurl(::std::string* _picurl) {
  if (_picurl != NULL) {
    set_has__picurl();
  } else {
    clear_has__picurl();
  }
  _picurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _picurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._PicUrl)
}

// optional uint32 _Width = 2;
bool BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::has__width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set_has__width() {
  _has_bits_[0] |= 0x00000002u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear_has__width() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear__width() {
  _width_ = 0u;
  clear_has__width();
}
::google::protobuf::uint32 BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::_width() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._Width)
  return _width_;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__width(::google::protobuf::uint32 value) {
  set_has__width();
  _width_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._Width)
}

// optional uint32 _Height = 3;
bool BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::has__height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set_has__height() {
  _has_bits_[0] |= 0x00000004u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear_has__height() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::clear__height() {
  _height_ = 0u;
  clear_has__height();
}
::google::protobuf::uint32 BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::_height() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._Height)
  return _height_;
}
void BizAppMsgDetailInfo_PicUrlsMsg_PicInfo::set__height(::google::protobuf::uint32 value) {
  set_has__height();
  _height_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo._Height)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppMsgDetailInfo_PicUrlsMsg::kPicInfoListFieldNumber;
const int BizAppMsgDetailInfo_PicUrlsMsg::kPiCUrlV1FieldNumber;
const int BizAppMsgDetailInfo_PicUrlsMsg::kPicUrlV1PreloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppMsgDetailInfo_PicUrlsMsg::BizAppMsgDetailInfo_PicUrlsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
}
BizAppMsgDetailInfo_PicUrlsMsg::BizAppMsgDetailInfo_PicUrlsMsg(const BizAppMsgDetailInfo_PicUrlsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _picinfolist_(from._picinfolist_),
      _picurlv1_(from._picurlv1_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _picurlv1preload_ = from._picurlv1preload_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
}

void BizAppMsgDetailInfo_PicUrlsMsg::SharedCtor() {
  _cached_size_ = 0;
  _picurlv1preload_ = GOOGLE_LONGLONG(0);
}

BizAppMsgDetailInfo_PicUrlsMsg::~BizAppMsgDetailInfo_PicUrlsMsg() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  SharedDtor();
}

void BizAppMsgDetailInfo_PicUrlsMsg::SharedDtor() {
}

void BizAppMsgDetailInfo_PicUrlsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppMsgDetailInfo_PicUrlsMsg::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppMsgDetailInfo_PicUrlsMsg& BizAppMsgDetailInfo_PicUrlsMsg::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppMsgDetailInfo_PicUrlsMsg* BizAppMsgDetailInfo_PicUrlsMsg::New(::google::protobuf::Arena* arena) const {
  BizAppMsgDetailInfo_PicUrlsMsg* n = new BizAppMsgDetailInfo_PicUrlsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppMsgDetailInfo_PicUrlsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  _picinfolist_.Clear();
  _picurlv1_.Clear();
  _picurlv1preload_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppMsgDetailInfo_PicUrlsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo _PicInfoList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__picinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string _PiCUrlV1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add__picurlv1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_picurlv1(this->_picurlv1_size() - 1).data(),
            this->_picurlv1(this->_picurlv1_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 _PicUrlV1Preload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__picurlv1preload();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &_picurlv1preload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  return false;
#undef DO_
}

void BizAppMsgDetailInfo_PicUrlsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo _PicInfoList = 1;
  for (unsigned int i = 0, n = this->_picinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_picinfolist(i), output);
  }

  // repeated string _PiCUrlV1 = 2;
  for (int i = 0, n = this->_picurlv1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_picurlv1(i).data(), this->_picurlv1(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->_picurlv1(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 _PicUrlV1Preload = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->_picurlv1preload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
}

::google::protobuf::uint8* BizAppMsgDetailInfo_PicUrlsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo _PicInfoList = 1;
  for (unsigned int i = 0, n = this->_picinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->_picinfolist(i), deterministic, target);
  }

  // repeated string _PiCUrlV1 = 2;
  for (int i = 0, n = this->_picurlv1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_picurlv1(i).data(), this->_picurlv1(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->_picurlv1(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional int64 _PicUrlV1Preload = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->_picurlv1preload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  return target;
}

size_t BizAppMsgDetailInfo_PicUrlsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo _PicInfoList = 1;
  {
    unsigned int count = this->_picinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_picinfolist(i));
    }
  }

  // repeated string _PiCUrlV1 = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->_picurlv1_size());
  for (int i = 0, n = this->_picurlv1_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->_picurlv1(i));
  }

  // optional int64 _PicUrlV1Preload = 3;
  if (has__picurlv1preload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->_picurlv1preload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppMsgDetailInfo_PicUrlsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppMsgDetailInfo_PicUrlsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppMsgDetailInfo_PicUrlsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
    MergeFrom(*source);
  }
}

void BizAppMsgDetailInfo_PicUrlsMsg::MergeFrom(const BizAppMsgDetailInfo_PicUrlsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _picinfolist_.MergeFrom(from._picinfolist_);
  _picurlv1_.MergeFrom(from._picurlv1_);
  if (from.has__picurlv1preload()) {
    set__picurlv1preload(from._picurlv1preload());
  }
}

void BizAppMsgDetailInfo_PicUrlsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppMsgDetailInfo_PicUrlsMsg::CopyFrom(const BizAppMsgDetailInfo_PicUrlsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppMsgDetailInfo_PicUrlsMsg::IsInitialized() const {
  return true;
}

void BizAppMsgDetailInfo_PicUrlsMsg::Swap(BizAppMsgDetailInfo_PicUrlsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppMsgDetailInfo_PicUrlsMsg::InternalSwap(BizAppMsgDetailInfo_PicUrlsMsg* other) {
  _picinfolist_.InternalSwap(&other->_picinfolist_);
  _picurlv1_.InternalSwap(&other->_picurlv1_);
  std::swap(_picurlv1preload_, other->_picurlv1preload_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppMsgDetailInfo_PicUrlsMsg::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppMsgDetailInfo_PicUrlsMsg

// repeated .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg.PicInfo _PicInfoList = 1;
int BizAppMsgDetailInfo_PicUrlsMsg::_picinfolist_size() const {
  return _picinfolist_.size();
}
void BizAppMsgDetailInfo_PicUrlsMsg::clear__picinfolist() {
  _picinfolist_.Clear();
}
const ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo& BizAppMsgDetailInfo_PicUrlsMsg::_picinfolist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicInfoList)
  return _picinfolist_.Get(index);
}
::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* BizAppMsgDetailInfo_PicUrlsMsg::mutable__picinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicInfoList)
  return _picinfolist_.Mutable(index);
}
::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo* BizAppMsgDetailInfo_PicUrlsMsg::add__picinfolist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicInfoList)
  return _picinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo >*
BizAppMsgDetailInfo_PicUrlsMsg::mutable__picinfolist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicInfoList)
  return &_picinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg_PicInfo >&
BizAppMsgDetailInfo_PicUrlsMsg::_picinfolist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicInfoList)
  return _picinfolist_;
}

// repeated string _PiCUrlV1 = 2;
int BizAppMsgDetailInfo_PicUrlsMsg::_picurlv1_size() const {
  return _picurlv1_.size();
}
void BizAppMsgDetailInfo_PicUrlsMsg::clear__picurlv1() {
  _picurlv1_.Clear();
}
const ::std::string& BizAppMsgDetailInfo_PicUrlsMsg::_picurlv1(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  return _picurlv1_.Get(index);
}
::std::string* BizAppMsgDetailInfo_PicUrlsMsg::mutable__picurlv1(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  return _picurlv1_.Mutable(index);
}
void BizAppMsgDetailInfo_PicUrlsMsg::set__picurlv1(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  _picurlv1_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BizAppMsgDetailInfo_PicUrlsMsg::set__picurlv1(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  _picurlv1_.Mutable(index)->assign(std::move(value));
}
#endif
void BizAppMsgDetailInfo_PicUrlsMsg::set__picurlv1(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _picurlv1_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
void BizAppMsgDetailInfo_PicUrlsMsg::set__picurlv1(int index, const char* value, size_t size) {
  _picurlv1_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
::std::string* BizAppMsgDetailInfo_PicUrlsMsg::add__picurlv1() {
  // @@protoc_insertion_point(field_add_mutable:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  return _picurlv1_.Add();
}
void BizAppMsgDetailInfo_PicUrlsMsg::add__picurlv1(const ::std::string& value) {
  _picurlv1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
#if LANG_CXX11
void BizAppMsgDetailInfo_PicUrlsMsg::add__picurlv1(::std::string&& value) {
  _picurlv1_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
#endif
void BizAppMsgDetailInfo_PicUrlsMsg::add__picurlv1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  _picurlv1_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
void BizAppMsgDetailInfo_PicUrlsMsg::add__picurlv1(const char* value, size_t size) {
  _picurlv1_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BizAppMsgDetailInfo_PicUrlsMsg::_picurlv1() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  return _picurlv1_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BizAppMsgDetailInfo_PicUrlsMsg::mutable__picurlv1() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PiCUrlV1)
  return &_picurlv1_;
}

// optional int64 _PicUrlV1Preload = 3;
bool BizAppMsgDetailInfo_PicUrlsMsg::has__picurlv1preload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppMsgDetailInfo_PicUrlsMsg::set_has__picurlv1preload() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppMsgDetailInfo_PicUrlsMsg::clear_has__picurlv1preload() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppMsgDetailInfo_PicUrlsMsg::clear__picurlv1preload() {
  _picurlv1preload_ = GOOGLE_LONGLONG(0);
  clear_has__picurlv1preload();
}
::google::protobuf::int64 BizAppMsgDetailInfo_PicUrlsMsg::_picurlv1preload() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicUrlV1Preload)
  return _picurlv1preload_;
}
void BizAppMsgDetailInfo_PicUrlsMsg::set__picurlv1preload(::google::protobuf::int64 value) {
  set_has__picurlv1preload();
  _picurlv1preload_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg._PicUrlV1Preload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppMsgDetailInfo::kTitleFieldNumber;
const int BizAppMsgDetailInfo::kDigestFieldNumber;
const int BizAppMsgDetailInfo::kItemIndexFieldNumber;
const int BizAppMsgDetailInfo::kContentUrlFieldNumber;
const int BizAppMsgDetailInfo::kSourceUrlFieldNumber;
const int BizAppMsgDetailInfo::kCoverImageUrl1FieldNumber;
const int BizAppMsgDetailInfo::kCoverImageUrl11FieldNumber;
const int BizAppMsgDetailInfo::kCoverImageUrl2351FieldNumber;
const int BizAppMsgDetailInfo::kItemShowTypeFieldNumber;
const int BizAppMsgDetailInfo::kAudioIdFieldNumber;
const int BizAppMsgDetailInfo::kAudioRationFieldNumber;
const int BizAppMsgDetailInfo::kAudioPlayUrlFieldNumber;
const int BizAppMsgDetailInfo::kVideoIdFieldNumber;
const int BizAppMsgDetailInfo::kVideoWidthFieldNumber;
const int BizAppMsgDetailInfo::kVideoHeightFieldNumber;
const int BizAppMsgDetailInfo::kVideoDurationFieldNumber;
const int BizAppMsgDetailInfo::kShowDescFieldNumber;
const int BizAppMsgDetailInfo::kAuthorDescFieldNumber;
const int BizAppMsgDetailInfo::kPicCountFieldNumber;
const int BizAppMsgDetailInfo::kIsPaySubscribeFieldNumber;
const int BizAppMsgDetailInfo::kIsPaidFieldNumber;
const int BizAppMsgDetailInfo::kPicUrlsFieldNumber;
const int BizAppMsgDetailInfo::kCoverImageUrl169FieldNumber;
const int BizAppMsgDetailInfo::kCoverImageuRL16960FieldNumber;
const int BizAppMsgDetailInfo::kFinderFeedXmlFieldNumber;
const int BizAppMsgDetailInfo::kFinderLiveFieldNumber;
const int BizAppMsgDetailInfo::kCreatetimeFieldNumber;
const int BizAppMsgDetailInfo::kMsgIdFieldNumber;
const int BizAppMsgDetailInfo::kVoiceIdFieldNumber;
const int BizAppMsgDetailInfo::kTidFieldNumber;
const int BizAppMsgDetailInfo::kNonceIdFieldNumber;
const int BizAppMsgDetailInfo::kVoiceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppMsgDetailInfo::BizAppMsgDetailInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAppMsgDetailInfo)
}
BizAppMsgDetailInfo::BizAppMsgDetailInfo(const BizAppMsgDetailInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__title()) {
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
  _digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__digest()) {
    _digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._digest_);
  }
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__contenturl()) {
    _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
  }
  _sourceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__sourceurl()) {
    _sourceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._sourceurl_);
  }
  _coverimageurl1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverimageurl1()) {
    _coverimageurl1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl1_);
  }
  _coverimageurl11_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverimageurl11()) {
    _coverimageurl11_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl11_);
  }
  _coverimageurl2351_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverimageurl2351()) {
    _coverimageurl2351_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl2351_);
  }
  _audioplayurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__audioplayurl()) {
    _audioplayurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._audioplayurl_);
  }
  _videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__videoid()) {
    _videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._videoid_);
  }
  _showdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__showdesc()) {
    _showdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._showdesc_);
  }
  _authordesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__authordesc()) {
    _authordesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authordesc_);
  }
  _coverimageurl169_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverimageurl169()) {
    _coverimageurl169_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl169_);
  }
  _coverimageurl16960_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__coverimageurl16960()) {
    _coverimageurl16960_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl16960_);
  }
  _finderfeedxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__finderfeedxml()) {
    _finderfeedxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._finderfeedxml_);
  }
  _voiceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__voiceid()) {
    _voiceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._voiceid_);
  }
  _tid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__tid()) {
    _tid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tid_);
  }
  _nonceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__nonceid()) {
    _nonceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nonceid_);
  }
  if (from.has__picurls()) {
    _picurls_ = new ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg(*from._picurls_);
  } else {
    _picurls_ = NULL;
  }
  if (from.has__finderlive()) {
    _finderlive_ = new ::MMPro::micromsg::BizProfileFinderLiveInfo(*from._finderlive_);
  } else {
    _finderlive_ = NULL;
  }
  ::memcpy(&_itemindex_, &from._itemindex_,
    reinterpret_cast<char*>(&_msgid_) -
    reinterpret_cast<char*>(&_itemindex_) + sizeof(_msgid_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAppMsgDetailInfo)
}

void BizAppMsgDetailInfo::SharedCtor() {
  _cached_size_ = 0;
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _digest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _sourceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl11_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl2351_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _audioplayurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _showdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authordesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl169_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl16960_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _finderfeedxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _voiceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _tid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nonceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_picurls_, 0, reinterpret_cast<char*>(&_msgid_) -
    reinterpret_cast<char*>(&_picurls_) + sizeof(_msgid_));
}

BizAppMsgDetailInfo::~BizAppMsgDetailInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAppMsgDetailInfo)
  SharedDtor();
}

void BizAppMsgDetailInfo::SharedDtor() {
  _title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _digest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _contenturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _sourceurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl11_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl2351_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _audioplayurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _videoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _showdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authordesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl169_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _coverimageurl16960_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _finderfeedxml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _voiceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _tid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nonceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _picurls_;
  }
  if (this != internal_default_instance()) {
    delete _finderlive_;
  }
}

void BizAppMsgDetailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppMsgDetailInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppMsgDetailInfo& BizAppMsgDetailInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppMsgDetailInfo* BizAppMsgDetailInfo::New(::google::protobuf::Arena* arena) const {
  BizAppMsgDetailInfo* n = new BizAppMsgDetailInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppMsgDetailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAppMsgDetailInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has__title()) {
      GOOGLE_DCHECK(!_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_title_.UnsafeRawStringPointer())->clear();
    }
    if (has__digest()) {
      GOOGLE_DCHECK(!_digest_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_digest_.UnsafeRawStringPointer())->clear();
    }
    if (has__contenturl()) {
      GOOGLE_DCHECK(!_contenturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_contenturl_.UnsafeRawStringPointer())->clear();
    }
    if (has__sourceurl()) {
      GOOGLE_DCHECK(!_sourceurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_sourceurl_.UnsafeRawStringPointer())->clear();
    }
    if (has__coverimageurl1()) {
      GOOGLE_DCHECK(!_coverimageurl1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_coverimageurl1_.UnsafeRawStringPointer())->clear();
    }
    if (has__coverimageurl11()) {
      GOOGLE_DCHECK(!_coverimageurl11_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_coverimageurl11_.UnsafeRawStringPointer())->clear();
    }
    if (has__coverimageurl2351()) {
      GOOGLE_DCHECK(!_coverimageurl2351_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_coverimageurl2351_.UnsafeRawStringPointer())->clear();
    }
    if (has__audioplayurl()) {
      GOOGLE_DCHECK(!_audioplayurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_audioplayurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has__videoid()) {
      GOOGLE_DCHECK(!_videoid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_videoid_.UnsafeRawStringPointer())->clear();
    }
    if (has__showdesc()) {
      GOOGLE_DCHECK(!_showdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_showdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__authordesc()) {
      GOOGLE_DCHECK(!_authordesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_authordesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__coverimageurl169()) {
      GOOGLE_DCHECK(!_coverimageurl169_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_coverimageurl169_.UnsafeRawStringPointer())->clear();
    }
    if (has__coverimageurl16960()) {
      GOOGLE_DCHECK(!_coverimageurl16960_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_coverimageurl16960_.UnsafeRawStringPointer())->clear();
    }
    if (has__finderfeedxml()) {
      GOOGLE_DCHECK(!_finderfeedxml_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_finderfeedxml_.UnsafeRawStringPointer())->clear();
    }
    if (has__voiceid()) {
      GOOGLE_DCHECK(!_voiceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_voiceid_.UnsafeRawStringPointer())->clear();
    }
    if (has__tid()) {
      GOOGLE_DCHECK(!_tid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_tid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 458752u) {
    if (has__nonceid()) {
      GOOGLE_DCHECK(!_nonceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_nonceid_.UnsafeRawStringPointer())->clear();
    }
    if (has__picurls()) {
      GOOGLE_DCHECK(_picurls_ != NULL);
      _picurls_->::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg::Clear();
    }
    if (has__finderlive()) {
      GOOGLE_DCHECK(_finderlive_ != NULL);
      _finderlive_->::MMPro::micromsg::BizProfileFinderLiveInfo::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16252928u) {
    ::memset(&_itemindex_, 0, reinterpret_cast<char*>(&_videowidth_) -
      reinterpret_cast<char*>(&_itemindex_) + sizeof(_videowidth_));
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    ::memset(&_videoheight_, 0, reinterpret_cast<char*>(&_msgid_) -
      reinterpret_cast<char*>(&_videoheight_) + sizeof(_msgid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppMsgDetailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAppMsgDetailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_title().data(), this->_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Digest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__digest()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_digest().data(), this->_digest().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._Digest");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ItemIndex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__itemindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_itemindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ContentUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__contenturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_contenturl().data(), this->_contenturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _SourceUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__sourceurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_sourceurl().data(), this->_sourceurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CoverImageUrl1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverimageurl1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverimageurl1().data(), this->_coverimageurl1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CoverImageUrl11 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverimageurl11()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverimageurl11().data(), this->_coverimageurl11().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CoverImageUrl2351 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverimageurl2351()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverimageurl2351().data(), this->_coverimageurl2351().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ItemShowType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has__itemshowtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_itemshowtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _AudioId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has__audioid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_audioid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _AudioRation = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has__audioration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_audioration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AudioPlayUrl = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__audioplayurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_audioplayurl().data(), this->_audioplayurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _VideoId = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__videoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_videoid().data(), this->_videoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._VideoId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VideoWidth = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has__videowidth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_videowidth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VideoHeight = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has__videoheight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_videoheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _VideoDuration = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          set_has__videoduration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_videoduration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ShowDesc = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__showdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_showdesc().data(), this->_showdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AuthorDesc = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__authordesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_authordesc().data(), this->_authordesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _PicCount = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {
          set_has__piccount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_piccount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _isPaySubscribe = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u)) {
          set_has__ispaysubscribe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_ispaysubscribe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _isPaid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u)) {
          set_has__ispaid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_ispaid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg _PicUrls = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__picurls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CoverImageUrl169 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(258u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverimageurl169()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverimageurl169().data(), this->_coverimageurl169().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _CoverImageuRL16960 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(266u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__coverimageurl16960()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_coverimageurl16960().data(), this->_coverimageurl16960().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FinderFeedXml = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(290u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__finderfeedxml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_finderfeedxml().data(), this->_finderfeedxml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizProfileFinderLiveInfo _FinderLive = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(314u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__finderlive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Createtime = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(336u)) {
          set_has__createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _MsgId = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(344u)) {
          set_has__msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _VoiceId = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(362u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__voiceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_voiceid().data(), this->_voiceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._VoiceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Tid = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(370u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__tid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_tid().data(), this->_tid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._Tid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _NonceId = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(378u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nonceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nonceid().data(), this->_nonceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizAppMsgDetailInfo._NonceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _voiceType = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(384u)) {
          set_has__voicetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_voicetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAppMsgDetailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAppMsgDetailInfo)
  return false;
#undef DO_
}

void BizAppMsgDetailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAppMsgDetailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_title(), output);
  }

  // optional string _Digest = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_digest().data(), this->_digest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Digest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_digest(), output);
  }

  // optional uint32 _ItemIndex = 4;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_itemindex(), output);
  }

  // optional string _ContentUrl = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_contenturl(), output);
  }

  // optional string _SourceUrl = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_sourceurl().data(), this->_sourceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_sourceurl(), output);
  }

  // optional string _CoverImageUrl1 = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl1().data(), this->_coverimageurl1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_coverimageurl1(), output);
  }

  // optional string _CoverImageUrl11 = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl11().data(), this->_coverimageurl11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_coverimageurl11(), output);
  }

  // optional string _CoverImageUrl2351 = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl2351().data(), this->_coverimageurl2351().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->_coverimageurl2351(), output);
  }

  // optional uint32 _ItemShowType = 10;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_itemshowtype(), output);
  }

  // optional uint32 _AudioId = 14;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->_audioid(), output);
  }

  // optional uint32 _AudioRation = 15;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->_audioration(), output);
  }

  // optional string _AudioPlayUrl = 16;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_audioplayurl().data(), this->_audioplayurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->_audioplayurl(), output);
  }

  // optional string _VideoId = 17;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_videoid().data(), this->_videoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._VideoId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->_videoid(), output);
  }

  // optional uint32 _VideoWidth = 18;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->_videowidth(), output);
  }

  // optional uint32 _VideoHeight = 19;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->_videoheight(), output);
  }

  // optional uint32 _VideoDuration = 20;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->_videoduration(), output);
  }

  // optional string _ShowDesc = 21;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_showdesc().data(), this->_showdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->_showdesc(), output);
  }

  // optional string _AuthorDesc = 22;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authordesc().data(), this->_authordesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->_authordesc(), output);
  }

  // optional uint32 _PicCount = 28;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->_piccount(), output);
  }

  // optional uint32 _isPaySubscribe = 29;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->_ispaysubscribe(), output);
  }

  // optional uint32 _isPaid = 30;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->_ispaid(), output);
  }

  // optional .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg _PicUrls = 31;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->_picurls_, output);
  }

  // optional string _CoverImageUrl169 = 32;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl169().data(), this->_coverimageurl169().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->_coverimageurl169(), output);
  }

  // optional string _CoverImageuRL16960 = 33;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl16960().data(), this->_coverimageurl16960().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->_coverimageurl16960(), output);
  }

  // optional string _FinderFeedXml = 36;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_finderfeedxml().data(), this->_finderfeedxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      36, this->_finderfeedxml(), output);
  }

  // optional .MMPro.micromsg.BizProfileFinderLiveInfo _FinderLive = 39;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *this->_finderlive_, output);
  }

  // optional uint32 _Createtime = 42;
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->_createtime(), output);
  }

  // optional uint32 _MsgId = 43;
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->_msgid(), output);
  }

  // optional string _VoiceId = 45;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_voiceid().data(), this->_voiceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._VoiceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      45, this->_voiceid(), output);
  }

  // optional string _Tid = 46;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_tid().data(), this->_tid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Tid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      46, this->_tid(), output);
  }

  // optional string _NonceId = 47;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nonceid().data(), this->_nonceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._NonceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      47, this->_nonceid(), output);
  }

  // optional uint32 _voiceType = 48;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->_voicetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAppMsgDetailInfo)
}

::google::protobuf::uint8* BizAppMsgDetailInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAppMsgDetailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_title(), target);
  }

  // optional string _Digest = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_digest().data(), this->_digest().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Digest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_digest(), target);
  }

  // optional uint32 _ItemIndex = 4;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_itemindex(), target);
  }

  // optional string _ContentUrl = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_contenturl().data(), this->_contenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_contenturl(), target);
  }

  // optional string _SourceUrl = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_sourceurl().data(), this->_sourceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_sourceurl(), target);
  }

  // optional string _CoverImageUrl1 = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl1().data(), this->_coverimageurl1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_coverimageurl1(), target);
  }

  // optional string _CoverImageUrl11 = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl11().data(), this->_coverimageurl11().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->_coverimageurl11(), target);
  }

  // optional string _CoverImageUrl2351 = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl2351().data(), this->_coverimageurl2351().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->_coverimageurl2351(), target);
  }

  // optional uint32 _ItemShowType = 10;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_itemshowtype(), target);
  }

  // optional uint32 _AudioId = 14;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->_audioid(), target);
  }

  // optional uint32 _AudioRation = 15;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->_audioration(), target);
  }

  // optional string _AudioPlayUrl = 16;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_audioplayurl().data(), this->_audioplayurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->_audioplayurl(), target);
  }

  // optional string _VideoId = 17;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_videoid().data(), this->_videoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._VideoId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->_videoid(), target);
  }

  // optional uint32 _VideoWidth = 18;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->_videowidth(), target);
  }

  // optional uint32 _VideoHeight = 19;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->_videoheight(), target);
  }

  // optional uint32 _VideoDuration = 20;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->_videoduration(), target);
  }

  // optional string _ShowDesc = 21;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_showdesc().data(), this->_showdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->_showdesc(), target);
  }

  // optional string _AuthorDesc = 22;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authordesc().data(), this->_authordesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->_authordesc(), target);
  }

  // optional uint32 _PicCount = 28;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->_piccount(), target);
  }

  // optional uint32 _isPaySubscribe = 29;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->_ispaysubscribe(), target);
  }

  // optional uint32 _isPaid = 30;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(30, this->_ispaid(), target);
  }

  // optional .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg _PicUrls = 31;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->_picurls_, deterministic, target);
  }

  // optional string _CoverImageUrl169 = 32;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl169().data(), this->_coverimageurl169().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->_coverimageurl169(), target);
  }

  // optional string _CoverImageuRL16960 = 33;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_coverimageurl16960().data(), this->_coverimageurl16960().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->_coverimageurl16960(), target);
  }

  // optional string _FinderFeedXml = 36;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_finderfeedxml().data(), this->_finderfeedxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        36, this->_finderfeedxml(), target);
  }

  // optional .MMPro.micromsg.BizProfileFinderLiveInfo _FinderLive = 39;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        39, *this->_finderlive_, deterministic, target);
  }

  // optional uint32 _Createtime = 42;
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->_createtime(), target);
  }

  // optional uint32 _MsgId = 43;
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(43, this->_msgid(), target);
  }

  // optional string _VoiceId = 45;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_voiceid().data(), this->_voiceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._VoiceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        45, this->_voiceid(), target);
  }

  // optional string _Tid = 46;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_tid().data(), this->_tid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._Tid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        46, this->_tid(), target);
  }

  // optional string _NonceId = 47;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nonceid().data(), this->_nonceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizAppMsgDetailInfo._NonceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        47, this->_nonceid(), target);
  }

  // optional uint32 _voiceType = 48;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->_voicetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAppMsgDetailInfo)
  return target;
}

size_t BizAppMsgDetailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAppMsgDetailInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string _Title = 1;
    if (has__title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_title());
    }

    // optional string _Digest = 2;
    if (has__digest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_digest());
    }

    // optional string _ContentUrl = 5;
    if (has__contenturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_contenturl());
    }

    // optional string _SourceUrl = 6;
    if (has__sourceurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_sourceurl());
    }

    // optional string _CoverImageUrl1 = 7;
    if (has__coverimageurl1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverimageurl1());
    }

    // optional string _CoverImageUrl11 = 8;
    if (has__coverimageurl11()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverimageurl11());
    }

    // optional string _CoverImageUrl2351 = 9;
    if (has__coverimageurl2351()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverimageurl2351());
    }

    // optional string _AudioPlayUrl = 16;
    if (has__audioplayurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_audioplayurl());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string _VideoId = 17;
    if (has__videoid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_videoid());
    }

    // optional string _ShowDesc = 21;
    if (has__showdesc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_showdesc());
    }

    // optional string _AuthorDesc = 22;
    if (has__authordesc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_authordesc());
    }

    // optional string _CoverImageUrl169 = 32;
    if (has__coverimageurl169()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverimageurl169());
    }

    // optional string _CoverImageuRL16960 = 33;
    if (has__coverimageurl16960()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_coverimageurl16960());
    }

    // optional string _FinderFeedXml = 36;
    if (has__finderfeedxml()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_finderfeedxml());
    }

    // optional string _VoiceId = 45;
    if (has__voiceid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_voiceid());
    }

    // optional string _Tid = 46;
    if (has__tid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_tid());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional string _NonceId = 47;
    if (has__nonceid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nonceid());
    }

    // optional .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg _PicUrls = 31;
    if (has__picurls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_picurls_);
    }

    // optional .MMPro.micromsg.BizProfileFinderLiveInfo _FinderLive = 39;
    if (has__finderlive()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_finderlive_);
    }

    // optional uint32 _ItemIndex = 4;
    if (has__itemindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_itemindex());
    }

    // optional uint32 _ItemShowType = 10;
    if (has__itemshowtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_itemshowtype());
    }

    // optional uint32 _AudioId = 14;
    if (has__audioid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_audioid());
    }

    // optional uint32 _AudioRation = 15;
    if (has__audioration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_audioration());
    }

    // optional uint32 _VideoWidth = 18;
    if (has__videowidth()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_videowidth());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional uint32 _VideoHeight = 19;
    if (has__videoheight()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_videoheight());
    }

    // optional uint32 _VideoDuration = 20;
    if (has__videoduration()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_videoduration());
    }

    // optional uint32 _PicCount = 28;
    if (has__piccount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_piccount());
    }

    // optional uint32 _isPaySubscribe = 29;
    if (has__ispaysubscribe()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_ispaysubscribe());
    }

    // optional uint32 _isPaid = 30;
    if (has__ispaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_ispaid());
    }

    // optional uint32 _voiceType = 48;
    if (has__voicetype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_voicetype());
    }

    // optional uint32 _Createtime = 42;
    if (has__createtime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_createtime());
    }

    // optional uint32 _MsgId = 43;
    if (has__msgid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_msgid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppMsgDetailInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppMsgDetailInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppMsgDetailInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAppMsgDetailInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAppMsgDetailInfo)
    MergeFrom(*source);
  }
}

void BizAppMsgDetailInfo::MergeFrom(const BizAppMsgDetailInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAppMsgDetailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__title();
      _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__digest();
      _digest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._digest_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__contenturl();
      _contenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._contenturl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__sourceurl();
      _sourceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._sourceurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__coverimageurl1();
      _coverimageurl1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl1_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has__coverimageurl11();
      _coverimageurl11_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl11_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has__coverimageurl2351();
      _coverimageurl2351_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl2351_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has__audioplayurl();
      _audioplayurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._audioplayurl_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has__videoid();
      _videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._videoid_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has__showdesc();
      _showdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._showdesc_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has__authordesc();
      _authordesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authordesc_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has__coverimageurl169();
      _coverimageurl169_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl169_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has__coverimageurl16960();
      _coverimageurl16960_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._coverimageurl16960_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has__finderfeedxml();
      _finderfeedxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._finderfeedxml_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has__voiceid();
      _voiceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._voiceid_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has__tid();
      _tid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tid_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has__nonceid();
      _nonceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nonceid_);
    }
    if (cached_has_bits & 0x00020000u) {
      mutable__picurls()->::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg::MergeFrom(from._picurls());
    }
    if (cached_has_bits & 0x00040000u) {
      mutable__finderlive()->::MMPro::micromsg::BizProfileFinderLiveInfo::MergeFrom(from._finderlive());
    }
    if (cached_has_bits & 0x00080000u) {
      _itemindex_ = from._itemindex_;
    }
    if (cached_has_bits & 0x00100000u) {
      _itemshowtype_ = from._itemshowtype_;
    }
    if (cached_has_bits & 0x00200000u) {
      _audioid_ = from._audioid_;
    }
    if (cached_has_bits & 0x00400000u) {
      _audioration_ = from._audioration_;
    }
    if (cached_has_bits & 0x00800000u) {
      _videowidth_ = from._videowidth_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      _videoheight_ = from._videoheight_;
    }
    if (cached_has_bits & 0x02000000u) {
      _videoduration_ = from._videoduration_;
    }
    if (cached_has_bits & 0x04000000u) {
      _piccount_ = from._piccount_;
    }
    if (cached_has_bits & 0x08000000u) {
      _ispaysubscribe_ = from._ispaysubscribe_;
    }
    if (cached_has_bits & 0x10000000u) {
      _ispaid_ = from._ispaid_;
    }
    if (cached_has_bits & 0x20000000u) {
      _voicetype_ = from._voicetype_;
    }
    if (cached_has_bits & 0x40000000u) {
      _createtime_ = from._createtime_;
    }
    if (cached_has_bits & 0x80000000u) {
      _msgid_ = from._msgid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizAppMsgDetailInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppMsgDetailInfo::CopyFrom(const BizAppMsgDetailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAppMsgDetailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppMsgDetailInfo::IsInitialized() const {
  return true;
}

void BizAppMsgDetailInfo::Swap(BizAppMsgDetailInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppMsgDetailInfo::InternalSwap(BizAppMsgDetailInfo* other) {
  _title_.Swap(&other->_title_);
  _digest_.Swap(&other->_digest_);
  _contenturl_.Swap(&other->_contenturl_);
  _sourceurl_.Swap(&other->_sourceurl_);
  _coverimageurl1_.Swap(&other->_coverimageurl1_);
  _coverimageurl11_.Swap(&other->_coverimageurl11_);
  _coverimageurl2351_.Swap(&other->_coverimageurl2351_);
  _audioplayurl_.Swap(&other->_audioplayurl_);
  _videoid_.Swap(&other->_videoid_);
  _showdesc_.Swap(&other->_showdesc_);
  _authordesc_.Swap(&other->_authordesc_);
  _coverimageurl169_.Swap(&other->_coverimageurl169_);
  _coverimageurl16960_.Swap(&other->_coverimageurl16960_);
  _finderfeedxml_.Swap(&other->_finderfeedxml_);
  _voiceid_.Swap(&other->_voiceid_);
  _tid_.Swap(&other->_tid_);
  _nonceid_.Swap(&other->_nonceid_);
  std::swap(_picurls_, other->_picurls_);
  std::swap(_finderlive_, other->_finderlive_);
  std::swap(_itemindex_, other->_itemindex_);
  std::swap(_itemshowtype_, other->_itemshowtype_);
  std::swap(_audioid_, other->_audioid_);
  std::swap(_audioration_, other->_audioration_);
  std::swap(_videowidth_, other->_videowidth_);
  std::swap(_videoheight_, other->_videoheight_);
  std::swap(_videoduration_, other->_videoduration_);
  std::swap(_piccount_, other->_piccount_);
  std::swap(_ispaysubscribe_, other->_ispaysubscribe_);
  std::swap(_ispaid_, other->_ispaid_);
  std::swap(_voicetype_, other->_voicetype_);
  std::swap(_createtime_, other->_createtime_);
  std::swap(_msgid_, other->_msgid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppMsgDetailInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppMsgDetailInfo

// optional string _Title = 1;
bool BizAppMsgDetailInfo::has__title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppMsgDetailInfo::set_has__title() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppMsgDetailInfo::clear_has__title() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppMsgDetailInfo::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
const ::std::string& BizAppMsgDetailInfo::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._Title)
  return _title_.GetNoArena();
}
void BizAppMsgDetailInfo::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._Title)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._Title)
}
#endif
void BizAppMsgDetailInfo::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._Title)
}
void BizAppMsgDetailInfo::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._Title)
}
::std::string* BizAppMsgDetailInfo::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._Title)
}

// optional string _Digest = 2;
bool BizAppMsgDetailInfo::has__digest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizAppMsgDetailInfo::set_has__digest() {
  _has_bits_[0] |= 0x00000002u;
}
void BizAppMsgDetailInfo::clear_has__digest() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizAppMsgDetailInfo::clear__digest() {
  _digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__digest();
}
const ::std::string& BizAppMsgDetailInfo::_digest() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
  return _digest_.GetNoArena();
}
void BizAppMsgDetailInfo::set__digest(const ::std::string& value) {
  set_has__digest();
  _digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__digest(::std::string&& value) {
  set_has__digest();
  _digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
}
#endif
void BizAppMsgDetailInfo::set__digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__digest();
  _digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
}
void BizAppMsgDetailInfo::set__digest(const char* value, size_t size) {
  set_has__digest();
  _digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
}
::std::string* BizAppMsgDetailInfo::mutable__digest() {
  set_has__digest();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
  return _digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__digest() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
  clear_has__digest();
  return _digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__digest(::std::string* _digest) {
  if (_digest != NULL) {
    set_has__digest();
  } else {
    clear_has__digest();
  }
  _digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _digest);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._Digest)
}

// optional uint32 _ItemIndex = 4;
bool BizAppMsgDetailInfo::has__itemindex() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void BizAppMsgDetailInfo::set_has__itemindex() {
  _has_bits_[0] |= 0x00080000u;
}
void BizAppMsgDetailInfo::clear_has__itemindex() {
  _has_bits_[0] &= ~0x00080000u;
}
void BizAppMsgDetailInfo::clear__itemindex() {
  _itemindex_ = 0u;
  clear_has__itemindex();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_itemindex() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._ItemIndex)
  return _itemindex_;
}
void BizAppMsgDetailInfo::set__itemindex(::google::protobuf::uint32 value) {
  set_has__itemindex();
  _itemindex_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._ItemIndex)
}

// optional string _ContentUrl = 5;
bool BizAppMsgDetailInfo::has__contenturl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizAppMsgDetailInfo::set_has__contenturl() {
  _has_bits_[0] |= 0x00000004u;
}
void BizAppMsgDetailInfo::clear_has__contenturl() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizAppMsgDetailInfo::clear__contenturl() {
  _contenturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__contenturl();
}
const ::std::string& BizAppMsgDetailInfo::_contenturl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
  return _contenturl_.GetNoArena();
}
void BizAppMsgDetailInfo::set__contenturl(const ::std::string& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__contenturl(::std::string&& value) {
  set_has__contenturl();
  _contenturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
}
#endif
void BizAppMsgDetailInfo::set__contenturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
}
void BizAppMsgDetailInfo::set__contenturl(const char* value, size_t size) {
  set_has__contenturl();
  _contenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
}
::std::string* BizAppMsgDetailInfo::mutable__contenturl() {
  set_has__contenturl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
  return _contenturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__contenturl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
  clear_has__contenturl();
  return _contenturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__contenturl(::std::string* _contenturl) {
  if (_contenturl != NULL) {
    set_has__contenturl();
  } else {
    clear_has__contenturl();
  }
  _contenturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _contenturl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._ContentUrl)
}

// optional string _SourceUrl = 6;
bool BizAppMsgDetailInfo::has__sourceurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizAppMsgDetailInfo::set_has__sourceurl() {
  _has_bits_[0] |= 0x00000008u;
}
void BizAppMsgDetailInfo::clear_has__sourceurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizAppMsgDetailInfo::clear__sourceurl() {
  _sourceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__sourceurl();
}
const ::std::string& BizAppMsgDetailInfo::_sourceurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
  return _sourceurl_.GetNoArena();
}
void BizAppMsgDetailInfo::set__sourceurl(const ::std::string& value) {
  set_has__sourceurl();
  _sourceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__sourceurl(::std::string&& value) {
  set_has__sourceurl();
  _sourceurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
}
#endif
void BizAppMsgDetailInfo::set__sourceurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__sourceurl();
  _sourceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
}
void BizAppMsgDetailInfo::set__sourceurl(const char* value, size_t size) {
  set_has__sourceurl();
  _sourceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
}
::std::string* BizAppMsgDetailInfo::mutable__sourceurl() {
  set_has__sourceurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
  return _sourceurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__sourceurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
  clear_has__sourceurl();
  return _sourceurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__sourceurl(::std::string* _sourceurl) {
  if (_sourceurl != NULL) {
    set_has__sourceurl();
  } else {
    clear_has__sourceurl();
  }
  _sourceurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _sourceurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._SourceUrl)
}

// optional string _CoverImageUrl1 = 7;
bool BizAppMsgDetailInfo::has__coverimageurl1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizAppMsgDetailInfo::set_has__coverimageurl1() {
  _has_bits_[0] |= 0x00000010u;
}
void BizAppMsgDetailInfo::clear_has__coverimageurl1() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizAppMsgDetailInfo::clear__coverimageurl1() {
  _coverimageurl1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverimageurl1();
}
const ::std::string& BizAppMsgDetailInfo::_coverimageurl1() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
  return _coverimageurl1_.GetNoArena();
}
void BizAppMsgDetailInfo::set__coverimageurl1(const ::std::string& value) {
  set_has__coverimageurl1();
  _coverimageurl1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__coverimageurl1(::std::string&& value) {
  set_has__coverimageurl1();
  _coverimageurl1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
}
#endif
void BizAppMsgDetailInfo::set__coverimageurl1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverimageurl1();
  _coverimageurl1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
}
void BizAppMsgDetailInfo::set__coverimageurl1(const char* value, size_t size) {
  set_has__coverimageurl1();
  _coverimageurl1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
}
::std::string* BizAppMsgDetailInfo::mutable__coverimageurl1() {
  set_has__coverimageurl1();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
  return _coverimageurl1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__coverimageurl1() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
  clear_has__coverimageurl1();
  return _coverimageurl1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__coverimageurl1(::std::string* _coverimageurl1) {
  if (_coverimageurl1 != NULL) {
    set_has__coverimageurl1();
  } else {
    clear_has__coverimageurl1();
  }
  _coverimageurl1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverimageurl1);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl1)
}

// optional string _CoverImageUrl11 = 8;
bool BizAppMsgDetailInfo::has__coverimageurl11() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizAppMsgDetailInfo::set_has__coverimageurl11() {
  _has_bits_[0] |= 0x00000020u;
}
void BizAppMsgDetailInfo::clear_has__coverimageurl11() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizAppMsgDetailInfo::clear__coverimageurl11() {
  _coverimageurl11_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverimageurl11();
}
const ::std::string& BizAppMsgDetailInfo::_coverimageurl11() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
  return _coverimageurl11_.GetNoArena();
}
void BizAppMsgDetailInfo::set__coverimageurl11(const ::std::string& value) {
  set_has__coverimageurl11();
  _coverimageurl11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__coverimageurl11(::std::string&& value) {
  set_has__coverimageurl11();
  _coverimageurl11_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
}
#endif
void BizAppMsgDetailInfo::set__coverimageurl11(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverimageurl11();
  _coverimageurl11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
}
void BizAppMsgDetailInfo::set__coverimageurl11(const char* value, size_t size) {
  set_has__coverimageurl11();
  _coverimageurl11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
}
::std::string* BizAppMsgDetailInfo::mutable__coverimageurl11() {
  set_has__coverimageurl11();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
  return _coverimageurl11_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__coverimageurl11() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
  clear_has__coverimageurl11();
  return _coverimageurl11_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__coverimageurl11(::std::string* _coverimageurl11) {
  if (_coverimageurl11 != NULL) {
    set_has__coverimageurl11();
  } else {
    clear_has__coverimageurl11();
  }
  _coverimageurl11_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverimageurl11);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl11)
}

// optional string _CoverImageUrl2351 = 9;
bool BizAppMsgDetailInfo::has__coverimageurl2351() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BizAppMsgDetailInfo::set_has__coverimageurl2351() {
  _has_bits_[0] |= 0x00000040u;
}
void BizAppMsgDetailInfo::clear_has__coverimageurl2351() {
  _has_bits_[0] &= ~0x00000040u;
}
void BizAppMsgDetailInfo::clear__coverimageurl2351() {
  _coverimageurl2351_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverimageurl2351();
}
const ::std::string& BizAppMsgDetailInfo::_coverimageurl2351() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
  return _coverimageurl2351_.GetNoArena();
}
void BizAppMsgDetailInfo::set__coverimageurl2351(const ::std::string& value) {
  set_has__coverimageurl2351();
  _coverimageurl2351_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__coverimageurl2351(::std::string&& value) {
  set_has__coverimageurl2351();
  _coverimageurl2351_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
}
#endif
void BizAppMsgDetailInfo::set__coverimageurl2351(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverimageurl2351();
  _coverimageurl2351_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
}
void BizAppMsgDetailInfo::set__coverimageurl2351(const char* value, size_t size) {
  set_has__coverimageurl2351();
  _coverimageurl2351_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
}
::std::string* BizAppMsgDetailInfo::mutable__coverimageurl2351() {
  set_has__coverimageurl2351();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
  return _coverimageurl2351_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__coverimageurl2351() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
  clear_has__coverimageurl2351();
  return _coverimageurl2351_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__coverimageurl2351(::std::string* _coverimageurl2351) {
  if (_coverimageurl2351 != NULL) {
    set_has__coverimageurl2351();
  } else {
    clear_has__coverimageurl2351();
  }
  _coverimageurl2351_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverimageurl2351);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl2351)
}

// optional uint32 _ItemShowType = 10;
bool BizAppMsgDetailInfo::has__itemshowtype() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void BizAppMsgDetailInfo::set_has__itemshowtype() {
  _has_bits_[0] |= 0x00100000u;
}
void BizAppMsgDetailInfo::clear_has__itemshowtype() {
  _has_bits_[0] &= ~0x00100000u;
}
void BizAppMsgDetailInfo::clear__itemshowtype() {
  _itemshowtype_ = 0u;
  clear_has__itemshowtype();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_itemshowtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._ItemShowType)
  return _itemshowtype_;
}
void BizAppMsgDetailInfo::set__itemshowtype(::google::protobuf::uint32 value) {
  set_has__itemshowtype();
  _itemshowtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._ItemShowType)
}

// optional uint32 _AudioId = 14;
bool BizAppMsgDetailInfo::has__audioid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void BizAppMsgDetailInfo::set_has__audioid() {
  _has_bits_[0] |= 0x00200000u;
}
void BizAppMsgDetailInfo::clear_has__audioid() {
  _has_bits_[0] &= ~0x00200000u;
}
void BizAppMsgDetailInfo::clear__audioid() {
  _audioid_ = 0u;
  clear_has__audioid();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_audioid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._AudioId)
  return _audioid_;
}
void BizAppMsgDetailInfo::set__audioid(::google::protobuf::uint32 value) {
  set_has__audioid();
  _audioid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._AudioId)
}

// optional uint32 _AudioRation = 15;
bool BizAppMsgDetailInfo::has__audioration() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void BizAppMsgDetailInfo::set_has__audioration() {
  _has_bits_[0] |= 0x00400000u;
}
void BizAppMsgDetailInfo::clear_has__audioration() {
  _has_bits_[0] &= ~0x00400000u;
}
void BizAppMsgDetailInfo::clear__audioration() {
  _audioration_ = 0u;
  clear_has__audioration();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_audioration() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._AudioRation)
  return _audioration_;
}
void BizAppMsgDetailInfo::set__audioration(::google::protobuf::uint32 value) {
  set_has__audioration();
  _audioration_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._AudioRation)
}

// optional string _AudioPlayUrl = 16;
bool BizAppMsgDetailInfo::has__audioplayurl() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BizAppMsgDetailInfo::set_has__audioplayurl() {
  _has_bits_[0] |= 0x00000080u;
}
void BizAppMsgDetailInfo::clear_has__audioplayurl() {
  _has_bits_[0] &= ~0x00000080u;
}
void BizAppMsgDetailInfo::clear__audioplayurl() {
  _audioplayurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__audioplayurl();
}
const ::std::string& BizAppMsgDetailInfo::_audioplayurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
  return _audioplayurl_.GetNoArena();
}
void BizAppMsgDetailInfo::set__audioplayurl(const ::std::string& value) {
  set_has__audioplayurl();
  _audioplayurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__audioplayurl(::std::string&& value) {
  set_has__audioplayurl();
  _audioplayurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
}
#endif
void BizAppMsgDetailInfo::set__audioplayurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__audioplayurl();
  _audioplayurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
}
void BizAppMsgDetailInfo::set__audioplayurl(const char* value, size_t size) {
  set_has__audioplayurl();
  _audioplayurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
}
::std::string* BizAppMsgDetailInfo::mutable__audioplayurl() {
  set_has__audioplayurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
  return _audioplayurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__audioplayurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
  clear_has__audioplayurl();
  return _audioplayurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__audioplayurl(::std::string* _audioplayurl) {
  if (_audioplayurl != NULL) {
    set_has__audioplayurl();
  } else {
    clear_has__audioplayurl();
  }
  _audioplayurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _audioplayurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._AudioPlayUrl)
}

// optional string _VideoId = 17;
bool BizAppMsgDetailInfo::has__videoid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BizAppMsgDetailInfo::set_has__videoid() {
  _has_bits_[0] |= 0x00000100u;
}
void BizAppMsgDetailInfo::clear_has__videoid() {
  _has_bits_[0] &= ~0x00000100u;
}
void BizAppMsgDetailInfo::clear__videoid() {
  _videoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__videoid();
}
const ::std::string& BizAppMsgDetailInfo::_videoid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
  return _videoid_.GetNoArena();
}
void BizAppMsgDetailInfo::set__videoid(const ::std::string& value) {
  set_has__videoid();
  _videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__videoid(::std::string&& value) {
  set_has__videoid();
  _videoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
}
#endif
void BizAppMsgDetailInfo::set__videoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__videoid();
  _videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
}
void BizAppMsgDetailInfo::set__videoid(const char* value, size_t size) {
  set_has__videoid();
  _videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
}
::std::string* BizAppMsgDetailInfo::mutable__videoid() {
  set_has__videoid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
  return _videoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__videoid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
  clear_has__videoid();
  return _videoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__videoid(::std::string* _videoid) {
  if (_videoid != NULL) {
    set_has__videoid();
  } else {
    clear_has__videoid();
  }
  _videoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _videoid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._VideoId)
}

// optional uint32 _VideoWidth = 18;
bool BizAppMsgDetailInfo::has__videowidth() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void BizAppMsgDetailInfo::set_has__videowidth() {
  _has_bits_[0] |= 0x00800000u;
}
void BizAppMsgDetailInfo::clear_has__videowidth() {
  _has_bits_[0] &= ~0x00800000u;
}
void BizAppMsgDetailInfo::clear__videowidth() {
  _videowidth_ = 0u;
  clear_has__videowidth();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_videowidth() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._VideoWidth)
  return _videowidth_;
}
void BizAppMsgDetailInfo::set__videowidth(::google::protobuf::uint32 value) {
  set_has__videowidth();
  _videowidth_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._VideoWidth)
}

// optional uint32 _VideoHeight = 19;
bool BizAppMsgDetailInfo::has__videoheight() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__videoheight() {
  _has_bits_[0] |= 0x01000000u;
}
void BizAppMsgDetailInfo::clear_has__videoheight() {
  _has_bits_[0] &= ~0x01000000u;
}
void BizAppMsgDetailInfo::clear__videoheight() {
  _videoheight_ = 0u;
  clear_has__videoheight();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_videoheight() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._VideoHeight)
  return _videoheight_;
}
void BizAppMsgDetailInfo::set__videoheight(::google::protobuf::uint32 value) {
  set_has__videoheight();
  _videoheight_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._VideoHeight)
}

// optional uint32 _VideoDuration = 20;
bool BizAppMsgDetailInfo::has__videoduration() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__videoduration() {
  _has_bits_[0] |= 0x02000000u;
}
void BizAppMsgDetailInfo::clear_has__videoduration() {
  _has_bits_[0] &= ~0x02000000u;
}
void BizAppMsgDetailInfo::clear__videoduration() {
  _videoduration_ = 0u;
  clear_has__videoduration();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_videoduration() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._VideoDuration)
  return _videoduration_;
}
void BizAppMsgDetailInfo::set__videoduration(::google::protobuf::uint32 value) {
  set_has__videoduration();
  _videoduration_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._VideoDuration)
}

// optional string _ShowDesc = 21;
bool BizAppMsgDetailInfo::has__showdesc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BizAppMsgDetailInfo::set_has__showdesc() {
  _has_bits_[0] |= 0x00000200u;
}
void BizAppMsgDetailInfo::clear_has__showdesc() {
  _has_bits_[0] &= ~0x00000200u;
}
void BizAppMsgDetailInfo::clear__showdesc() {
  _showdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__showdesc();
}
const ::std::string& BizAppMsgDetailInfo::_showdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
  return _showdesc_.GetNoArena();
}
void BizAppMsgDetailInfo::set__showdesc(const ::std::string& value) {
  set_has__showdesc();
  _showdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__showdesc(::std::string&& value) {
  set_has__showdesc();
  _showdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
}
#endif
void BizAppMsgDetailInfo::set__showdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__showdesc();
  _showdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
}
void BizAppMsgDetailInfo::set__showdesc(const char* value, size_t size) {
  set_has__showdesc();
  _showdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
}
::std::string* BizAppMsgDetailInfo::mutable__showdesc() {
  set_has__showdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
  return _showdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__showdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
  clear_has__showdesc();
  return _showdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__showdesc(::std::string* _showdesc) {
  if (_showdesc != NULL) {
    set_has__showdesc();
  } else {
    clear_has__showdesc();
  }
  _showdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _showdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._ShowDesc)
}

// optional string _AuthorDesc = 22;
bool BizAppMsgDetailInfo::has__authordesc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BizAppMsgDetailInfo::set_has__authordesc() {
  _has_bits_[0] |= 0x00000400u;
}
void BizAppMsgDetailInfo::clear_has__authordesc() {
  _has_bits_[0] &= ~0x00000400u;
}
void BizAppMsgDetailInfo::clear__authordesc() {
  _authordesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authordesc();
}
const ::std::string& BizAppMsgDetailInfo::_authordesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
  return _authordesc_.GetNoArena();
}
void BizAppMsgDetailInfo::set__authordesc(const ::std::string& value) {
  set_has__authordesc();
  _authordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__authordesc(::std::string&& value) {
  set_has__authordesc();
  _authordesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
}
#endif
void BizAppMsgDetailInfo::set__authordesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authordesc();
  _authordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
}
void BizAppMsgDetailInfo::set__authordesc(const char* value, size_t size) {
  set_has__authordesc();
  _authordesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
}
::std::string* BizAppMsgDetailInfo::mutable__authordesc() {
  set_has__authordesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
  return _authordesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__authordesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
  clear_has__authordesc();
  return _authordesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__authordesc(::std::string* _authordesc) {
  if (_authordesc != NULL) {
    set_has__authordesc();
  } else {
    clear_has__authordesc();
  }
  _authordesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authordesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._AuthorDesc)
}

// optional uint32 _PicCount = 28;
bool BizAppMsgDetailInfo::has__piccount() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__piccount() {
  _has_bits_[0] |= 0x04000000u;
}
void BizAppMsgDetailInfo::clear_has__piccount() {
  _has_bits_[0] &= ~0x04000000u;
}
void BizAppMsgDetailInfo::clear__piccount() {
  _piccount_ = 0u;
  clear_has__piccount();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_piccount() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._PicCount)
  return _piccount_;
}
void BizAppMsgDetailInfo::set__piccount(::google::protobuf::uint32 value) {
  set_has__piccount();
  _piccount_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._PicCount)
}

// optional uint32 _isPaySubscribe = 29;
bool BizAppMsgDetailInfo::has__ispaysubscribe() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__ispaysubscribe() {
  _has_bits_[0] |= 0x08000000u;
}
void BizAppMsgDetailInfo::clear_has__ispaysubscribe() {
  _has_bits_[0] &= ~0x08000000u;
}
void BizAppMsgDetailInfo::clear__ispaysubscribe() {
  _ispaysubscribe_ = 0u;
  clear_has__ispaysubscribe();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_ispaysubscribe() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._isPaySubscribe)
  return _ispaysubscribe_;
}
void BizAppMsgDetailInfo::set__ispaysubscribe(::google::protobuf::uint32 value) {
  set_has__ispaysubscribe();
  _ispaysubscribe_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._isPaySubscribe)
}

// optional uint32 _isPaid = 30;
bool BizAppMsgDetailInfo::has__ispaid() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__ispaid() {
  _has_bits_[0] |= 0x10000000u;
}
void BizAppMsgDetailInfo::clear_has__ispaid() {
  _has_bits_[0] &= ~0x10000000u;
}
void BizAppMsgDetailInfo::clear__ispaid() {
  _ispaid_ = 0u;
  clear_has__ispaid();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_ispaid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._isPaid)
  return _ispaid_;
}
void BizAppMsgDetailInfo::set__ispaid(::google::protobuf::uint32 value) {
  set_has__ispaid();
  _ispaid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._isPaid)
}

// optional .MMPro.micromsg.BizAppMsgDetailInfo.PicUrlsMsg _PicUrls = 31;
bool BizAppMsgDetailInfo::has__picurls() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void BizAppMsgDetailInfo::set_has__picurls() {
  _has_bits_[0] |= 0x00020000u;
}
void BizAppMsgDetailInfo::clear_has__picurls() {
  _has_bits_[0] &= ~0x00020000u;
}
void BizAppMsgDetailInfo::clear__picurls() {
  if (_picurls_ != NULL) _picurls_->::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg::Clear();
  clear_has__picurls();
}
const ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg& BizAppMsgDetailInfo::_picurls() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._PicUrls)
  return _picurls_ != NULL ? *_picurls_
                         : *::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg::internal_default_instance();
}
::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg* BizAppMsgDetailInfo::mutable__picurls() {
  set_has__picurls();
  if (_picurls_ == NULL) {
    _picurls_ = new ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._PicUrls)
  return _picurls_;
}
::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg* BizAppMsgDetailInfo::release__picurls() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._PicUrls)
  clear_has__picurls();
  ::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg* temp = _picurls_;
  _picurls_ = NULL;
  return temp;
}
void BizAppMsgDetailInfo::set_allocated__picurls(::MMPro::micromsg::BizAppMsgDetailInfo_PicUrlsMsg* _picurls) {
  delete _picurls_;
  _picurls_ = _picurls;
  if (_picurls) {
    set_has__picurls();
  } else {
    clear_has__picurls();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._PicUrls)
}

// optional string _CoverImageUrl169 = 32;
bool BizAppMsgDetailInfo::has__coverimageurl169() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BizAppMsgDetailInfo::set_has__coverimageurl169() {
  _has_bits_[0] |= 0x00000800u;
}
void BizAppMsgDetailInfo::clear_has__coverimageurl169() {
  _has_bits_[0] &= ~0x00000800u;
}
void BizAppMsgDetailInfo::clear__coverimageurl169() {
  _coverimageurl169_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverimageurl169();
}
const ::std::string& BizAppMsgDetailInfo::_coverimageurl169() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
  return _coverimageurl169_.GetNoArena();
}
void BizAppMsgDetailInfo::set__coverimageurl169(const ::std::string& value) {
  set_has__coverimageurl169();
  _coverimageurl169_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__coverimageurl169(::std::string&& value) {
  set_has__coverimageurl169();
  _coverimageurl169_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
}
#endif
void BizAppMsgDetailInfo::set__coverimageurl169(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverimageurl169();
  _coverimageurl169_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
}
void BizAppMsgDetailInfo::set__coverimageurl169(const char* value, size_t size) {
  set_has__coverimageurl169();
  _coverimageurl169_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
}
::std::string* BizAppMsgDetailInfo::mutable__coverimageurl169() {
  set_has__coverimageurl169();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
  return _coverimageurl169_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__coverimageurl169() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
  clear_has__coverimageurl169();
  return _coverimageurl169_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__coverimageurl169(::std::string* _coverimageurl169) {
  if (_coverimageurl169 != NULL) {
    set_has__coverimageurl169();
  } else {
    clear_has__coverimageurl169();
  }
  _coverimageurl169_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverimageurl169);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageUrl169)
}

// optional string _CoverImageuRL16960 = 33;
bool BizAppMsgDetailInfo::has__coverimageurl16960() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BizAppMsgDetailInfo::set_has__coverimageurl16960() {
  _has_bits_[0] |= 0x00001000u;
}
void BizAppMsgDetailInfo::clear_has__coverimageurl16960() {
  _has_bits_[0] &= ~0x00001000u;
}
void BizAppMsgDetailInfo::clear__coverimageurl16960() {
  _coverimageurl16960_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__coverimageurl16960();
}
const ::std::string& BizAppMsgDetailInfo::_coverimageurl16960() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
  return _coverimageurl16960_.GetNoArena();
}
void BizAppMsgDetailInfo::set__coverimageurl16960(const ::std::string& value) {
  set_has__coverimageurl16960();
  _coverimageurl16960_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__coverimageurl16960(::std::string&& value) {
  set_has__coverimageurl16960();
  _coverimageurl16960_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
}
#endif
void BizAppMsgDetailInfo::set__coverimageurl16960(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__coverimageurl16960();
  _coverimageurl16960_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
}
void BizAppMsgDetailInfo::set__coverimageurl16960(const char* value, size_t size) {
  set_has__coverimageurl16960();
  _coverimageurl16960_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
}
::std::string* BizAppMsgDetailInfo::mutable__coverimageurl16960() {
  set_has__coverimageurl16960();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
  return _coverimageurl16960_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__coverimageurl16960() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
  clear_has__coverimageurl16960();
  return _coverimageurl16960_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__coverimageurl16960(::std::string* _coverimageurl16960) {
  if (_coverimageurl16960 != NULL) {
    set_has__coverimageurl16960();
  } else {
    clear_has__coverimageurl16960();
  }
  _coverimageurl16960_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _coverimageurl16960);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._CoverImageuRL16960)
}

// optional string _FinderFeedXml = 36;
bool BizAppMsgDetailInfo::has__finderfeedxml() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BizAppMsgDetailInfo::set_has__finderfeedxml() {
  _has_bits_[0] |= 0x00002000u;
}
void BizAppMsgDetailInfo::clear_has__finderfeedxml() {
  _has_bits_[0] &= ~0x00002000u;
}
void BizAppMsgDetailInfo::clear__finderfeedxml() {
  _finderfeedxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__finderfeedxml();
}
const ::std::string& BizAppMsgDetailInfo::_finderfeedxml() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
  return _finderfeedxml_.GetNoArena();
}
void BizAppMsgDetailInfo::set__finderfeedxml(const ::std::string& value) {
  set_has__finderfeedxml();
  _finderfeedxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__finderfeedxml(::std::string&& value) {
  set_has__finderfeedxml();
  _finderfeedxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
}
#endif
void BizAppMsgDetailInfo::set__finderfeedxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__finderfeedxml();
  _finderfeedxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
}
void BizAppMsgDetailInfo::set__finderfeedxml(const char* value, size_t size) {
  set_has__finderfeedxml();
  _finderfeedxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
}
::std::string* BizAppMsgDetailInfo::mutable__finderfeedxml() {
  set_has__finderfeedxml();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
  return _finderfeedxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__finderfeedxml() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
  clear_has__finderfeedxml();
  return _finderfeedxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__finderfeedxml(::std::string* _finderfeedxml) {
  if (_finderfeedxml != NULL) {
    set_has__finderfeedxml();
  } else {
    clear_has__finderfeedxml();
  }
  _finderfeedxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _finderfeedxml);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._FinderFeedXml)
}

// optional .MMPro.micromsg.BizProfileFinderLiveInfo _FinderLive = 39;
bool BizAppMsgDetailInfo::has__finderlive() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void BizAppMsgDetailInfo::set_has__finderlive() {
  _has_bits_[0] |= 0x00040000u;
}
void BizAppMsgDetailInfo::clear_has__finderlive() {
  _has_bits_[0] &= ~0x00040000u;
}
void BizAppMsgDetailInfo::clear__finderlive() {
  if (_finderlive_ != NULL) _finderlive_->::MMPro::micromsg::BizProfileFinderLiveInfo::Clear();
  clear_has__finderlive();
}
const ::MMPro::micromsg::BizProfileFinderLiveInfo& BizAppMsgDetailInfo::_finderlive() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._FinderLive)
  return _finderlive_ != NULL ? *_finderlive_
                         : *::MMPro::micromsg::BizProfileFinderLiveInfo::internal_default_instance();
}
::MMPro::micromsg::BizProfileFinderLiveInfo* BizAppMsgDetailInfo::mutable__finderlive() {
  set_has__finderlive();
  if (_finderlive_ == NULL) {
    _finderlive_ = new ::MMPro::micromsg::BizProfileFinderLiveInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._FinderLive)
  return _finderlive_;
}
::MMPro::micromsg::BizProfileFinderLiveInfo* BizAppMsgDetailInfo::release__finderlive() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._FinderLive)
  clear_has__finderlive();
  ::MMPro::micromsg::BizProfileFinderLiveInfo* temp = _finderlive_;
  _finderlive_ = NULL;
  return temp;
}
void BizAppMsgDetailInfo::set_allocated__finderlive(::MMPro::micromsg::BizProfileFinderLiveInfo* _finderlive) {
  delete _finderlive_;
  _finderlive_ = _finderlive;
  if (_finderlive) {
    set_has__finderlive();
  } else {
    clear_has__finderlive();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._FinderLive)
}

// optional uint32 _Createtime = 42;
bool BizAppMsgDetailInfo::has__createtime() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__createtime() {
  _has_bits_[0] |= 0x40000000u;
}
void BizAppMsgDetailInfo::clear_has__createtime() {
  _has_bits_[0] &= ~0x40000000u;
}
void BizAppMsgDetailInfo::clear__createtime() {
  _createtime_ = 0u;
  clear_has__createtime();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_createtime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._Createtime)
  return _createtime_;
}
void BizAppMsgDetailInfo::set__createtime(::google::protobuf::uint32 value) {
  set_has__createtime();
  _createtime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._Createtime)
}

// optional uint32 _MsgId = 43;
bool BizAppMsgDetailInfo::has__msgid() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__msgid() {
  _has_bits_[0] |= 0x80000000u;
}
void BizAppMsgDetailInfo::clear_has__msgid() {
  _has_bits_[0] &= ~0x80000000u;
}
void BizAppMsgDetailInfo::clear__msgid() {
  _msgid_ = 0u;
  clear_has__msgid();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_msgid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._MsgId)
  return _msgid_;
}
void BizAppMsgDetailInfo::set__msgid(::google::protobuf::uint32 value) {
  set_has__msgid();
  _msgid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._MsgId)
}

// optional string _VoiceId = 45;
bool BizAppMsgDetailInfo::has__voiceid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void BizAppMsgDetailInfo::set_has__voiceid() {
  _has_bits_[0] |= 0x00004000u;
}
void BizAppMsgDetailInfo::clear_has__voiceid() {
  _has_bits_[0] &= ~0x00004000u;
}
void BizAppMsgDetailInfo::clear__voiceid() {
  _voiceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__voiceid();
}
const ::std::string& BizAppMsgDetailInfo::_voiceid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
  return _voiceid_.GetNoArena();
}
void BizAppMsgDetailInfo::set__voiceid(const ::std::string& value) {
  set_has__voiceid();
  _voiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__voiceid(::std::string&& value) {
  set_has__voiceid();
  _voiceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
}
#endif
void BizAppMsgDetailInfo::set__voiceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__voiceid();
  _voiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
}
void BizAppMsgDetailInfo::set__voiceid(const char* value, size_t size) {
  set_has__voiceid();
  _voiceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
}
::std::string* BizAppMsgDetailInfo::mutable__voiceid() {
  set_has__voiceid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
  return _voiceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__voiceid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
  clear_has__voiceid();
  return _voiceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__voiceid(::std::string* _voiceid) {
  if (_voiceid != NULL) {
    set_has__voiceid();
  } else {
    clear_has__voiceid();
  }
  _voiceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _voiceid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._VoiceId)
}

// optional string _Tid = 46;
bool BizAppMsgDetailInfo::has__tid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BizAppMsgDetailInfo::set_has__tid() {
  _has_bits_[0] |= 0x00008000u;
}
void BizAppMsgDetailInfo::clear_has__tid() {
  _has_bits_[0] &= ~0x00008000u;
}
void BizAppMsgDetailInfo::clear__tid() {
  _tid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__tid();
}
const ::std::string& BizAppMsgDetailInfo::_tid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
  return _tid_.GetNoArena();
}
void BizAppMsgDetailInfo::set__tid(const ::std::string& value) {
  set_has__tid();
  _tid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__tid(::std::string&& value) {
  set_has__tid();
  _tid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
}
#endif
void BizAppMsgDetailInfo::set__tid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__tid();
  _tid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
}
void BizAppMsgDetailInfo::set__tid(const char* value, size_t size) {
  set_has__tid();
  _tid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
}
::std::string* BizAppMsgDetailInfo::mutable__tid() {
  set_has__tid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
  return _tid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__tid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
  clear_has__tid();
  return _tid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__tid(::std::string* _tid) {
  if (_tid != NULL) {
    set_has__tid();
  } else {
    clear_has__tid();
  }
  _tid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _tid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._Tid)
}

// optional string _NonceId = 47;
bool BizAppMsgDetailInfo::has__nonceid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void BizAppMsgDetailInfo::set_has__nonceid() {
  _has_bits_[0] |= 0x00010000u;
}
void BizAppMsgDetailInfo::clear_has__nonceid() {
  _has_bits_[0] &= ~0x00010000u;
}
void BizAppMsgDetailInfo::clear__nonceid() {
  _nonceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nonceid();
}
const ::std::string& BizAppMsgDetailInfo::_nonceid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
  return _nonceid_.GetNoArena();
}
void BizAppMsgDetailInfo::set__nonceid(const ::std::string& value) {
  set_has__nonceid();
  _nonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
}
#if LANG_CXX11
void BizAppMsgDetailInfo::set__nonceid(::std::string&& value) {
  set_has__nonceid();
  _nonceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
}
#endif
void BizAppMsgDetailInfo::set__nonceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nonceid();
  _nonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
}
void BizAppMsgDetailInfo::set__nonceid(const char* value, size_t size) {
  set_has__nonceid();
  _nonceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
}
::std::string* BizAppMsgDetailInfo::mutable__nonceid() {
  set_has__nonceid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
  return _nonceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppMsgDetailInfo::release__nonceid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
  clear_has__nonceid();
  return _nonceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppMsgDetailInfo::set_allocated__nonceid(::std::string* _nonceid) {
  if (_nonceid != NULL) {
    set_has__nonceid();
  } else {
    clear_has__nonceid();
  }
  _nonceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nonceid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgDetailInfo._NonceId)
}

// optional uint32 _voiceType = 48;
bool BizAppMsgDetailInfo::has__voicetype() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void BizAppMsgDetailInfo::set_has__voicetype() {
  _has_bits_[0] |= 0x20000000u;
}
void BizAppMsgDetailInfo::clear_has__voicetype() {
  _has_bits_[0] &= ~0x20000000u;
}
void BizAppMsgDetailInfo::clear__voicetype() {
  _voicetype_ = 0u;
  clear_has__voicetype();
}
::google::protobuf::uint32 BizAppMsgDetailInfo::_voicetype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgDetailInfo._voiceType)
  return _voicetype_;
}
void BizAppMsgDetailInfo::set__voicetype(::google::protobuf::uint32 value) {
  set_has__voicetype();
  _voicetype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizAppMsgDetailInfo._voiceType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppMsgInfo::kBaseInfoFieldNumber;
const int BizAppMsgInfo::kDetailInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppMsgInfo::BizAppMsgInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizAppMsgInfo)
}
BizAppMsgInfo::BizAppMsgInfo(const BizAppMsgInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _detailinfo_(from._detailinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__baseinfo()) {
    _baseinfo_ = new ::MMPro::micromsg::BizAppMsgBaseInfo(*from._baseinfo_);
  } else {
    _baseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizAppMsgInfo)
}

void BizAppMsgInfo::SharedCtor() {
  _cached_size_ = 0;
  _baseinfo_ = NULL;
}

BizAppMsgInfo::~BizAppMsgInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizAppMsgInfo)
  SharedDtor();
}

void BizAppMsgInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _baseinfo_;
  }
}

void BizAppMsgInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppMsgInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppMsgInfo& BizAppMsgInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppMsgInfo* BizAppMsgInfo::New(::google::protobuf::Arena* arena) const {
  BizAppMsgInfo* n = new BizAppMsgInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppMsgInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizAppMsgInfo)
  _detailinfo_.Clear();
  if (has__baseinfo()) {
    GOOGLE_DCHECK(_baseinfo_ != NULL);
    _baseinfo_->::MMPro::micromsg::BizAppMsgBaseInfo::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppMsgInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizAppMsgInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MMPro.micromsg.BizAppMsgBaseInfo _BaseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizAppMsgDetailInfo _DetailInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__detailinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizAppMsgInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizAppMsgInfo)
  return false;
#undef DO_
}

void BizAppMsgInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizAppMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizAppMsgBaseInfo _BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseinfo_, output);
  }

  // repeated .MMPro.micromsg.BizAppMsgDetailInfo _DetailInfo = 2;
  for (unsigned int i = 0, n = this->_detailinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_detailinfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizAppMsgInfo)
}

::google::protobuf::uint8* BizAppMsgInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizAppMsgInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizAppMsgBaseInfo _BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseinfo_, deterministic, target);
  }

  // repeated .MMPro.micromsg.BizAppMsgDetailInfo _DetailInfo = 2;
  for (unsigned int i = 0, n = this->_detailinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->_detailinfo(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizAppMsgInfo)
  return target;
}

size_t BizAppMsgInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizAppMsgInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizAppMsgDetailInfo _DetailInfo = 2;
  {
    unsigned int count = this->_detailinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_detailinfo(i));
    }
  }

  // optional .MMPro.micromsg.BizAppMsgBaseInfo _BaseInfo = 1;
  if (has__baseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppMsgInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizAppMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppMsgInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppMsgInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizAppMsgInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizAppMsgInfo)
    MergeFrom(*source);
  }
}

void BizAppMsgInfo::MergeFrom(const BizAppMsgInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizAppMsgInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _detailinfo_.MergeFrom(from._detailinfo_);
  if (from.has__baseinfo()) {
    mutable__baseinfo()->::MMPro::micromsg::BizAppMsgBaseInfo::MergeFrom(from._baseinfo());
  }
}

void BizAppMsgInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizAppMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppMsgInfo::CopyFrom(const BizAppMsgInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizAppMsgInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppMsgInfo::IsInitialized() const {
  return true;
}

void BizAppMsgInfo::Swap(BizAppMsgInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppMsgInfo::InternalSwap(BizAppMsgInfo* other) {
  _detailinfo_.InternalSwap(&other->_detailinfo_);
  std::swap(_baseinfo_, other->_baseinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppMsgInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppMsgInfo

// optional .MMPro.micromsg.BizAppMsgBaseInfo _BaseInfo = 1;
bool BizAppMsgInfo::has__baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppMsgInfo::set_has__baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppMsgInfo::clear_has__baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppMsgInfo::clear__baseinfo() {
  if (_baseinfo_ != NULL) _baseinfo_->::MMPro::micromsg::BizAppMsgBaseInfo::Clear();
  clear_has__baseinfo();
}
const ::MMPro::micromsg::BizAppMsgBaseInfo& BizAppMsgInfo::_baseinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgInfo._BaseInfo)
  return _baseinfo_ != NULL ? *_baseinfo_
                         : *::MMPro::micromsg::BizAppMsgBaseInfo::internal_default_instance();
}
::MMPro::micromsg::BizAppMsgBaseInfo* BizAppMsgInfo::mutable__baseinfo() {
  set_has__baseinfo();
  if (_baseinfo_ == NULL) {
    _baseinfo_ = new ::MMPro::micromsg::BizAppMsgBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgInfo._BaseInfo)
  return _baseinfo_;
}
::MMPro::micromsg::BizAppMsgBaseInfo* BizAppMsgInfo::release__baseinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizAppMsgInfo._BaseInfo)
  clear_has__baseinfo();
  ::MMPro::micromsg::BizAppMsgBaseInfo* temp = _baseinfo_;
  _baseinfo_ = NULL;
  return temp;
}
void BizAppMsgInfo::set_allocated__baseinfo(::MMPro::micromsg::BizAppMsgBaseInfo* _baseinfo) {
  delete _baseinfo_;
  _baseinfo_ = _baseinfo;
  if (_baseinfo) {
    set_has__baseinfo();
  } else {
    clear_has__baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizAppMsgInfo._BaseInfo)
}

// repeated .MMPro.micromsg.BizAppMsgDetailInfo _DetailInfo = 2;
int BizAppMsgInfo::_detailinfo_size() const {
  return _detailinfo_.size();
}
void BizAppMsgInfo::clear__detailinfo() {
  _detailinfo_.Clear();
}
const ::MMPro::micromsg::BizAppMsgDetailInfo& BizAppMsgInfo::_detailinfo(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizAppMsgInfo._DetailInfo)
  return _detailinfo_.Get(index);
}
::MMPro::micromsg::BizAppMsgDetailInfo* BizAppMsgInfo::mutable__detailinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizAppMsgInfo._DetailInfo)
  return _detailinfo_.Mutable(index);
}
::MMPro::micromsg::BizAppMsgDetailInfo* BizAppMsgInfo::add__detailinfo() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizAppMsgInfo._DetailInfo)
  return _detailinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizAppMsgDetailInfo >*
BizAppMsgInfo::mutable__detailinfo() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizAppMsgInfo._DetailInfo)
  return &_detailinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizAppMsgDetailInfo >&
BizAppMsgInfo::_detailinfo() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizAppMsgInfo._DetailInfo)
  return _detailinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizMessage::kBaseInfoFieldNumber;
const int BizMessage::kTextFieldNumber;
const int BizMessage::kImageFieldNumber;
const int BizMessage::kVoiceFieldNumber;
const int BizMessage::kVideoFieldNumber;
const int BizMessage::kAppMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizMessage::BizMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizMessage)
}
BizMessage::BizMessage(const BizMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__baseinfo()) {
    _baseinfo_ = new ::MMPro::micromsg::CommMsgBaseInfo(*from._baseinfo_);
  } else {
    _baseinfo_ = NULL;
  }
  if (from.has__text()) {
    _text_ = new ::MMPro::micromsg::BizTextMsgInfo(*from._text_);
  } else {
    _text_ = NULL;
  }
  if (from.has__image()) {
    _image_ = new ::MMPro::micromsg::BizImageMsgInfo(*from._image_);
  } else {
    _image_ = NULL;
  }
  if (from.has__voice()) {
    _voice_ = new ::MMPro::micromsg::BizVoiceMsgInfo(*from._voice_);
  } else {
    _voice_ = NULL;
  }
  if (from.has__video()) {
    _video_ = new ::MMPro::micromsg::BizVideoMsgInfo(*from._video_);
  } else {
    _video_ = NULL;
  }
  if (from.has__appmsg()) {
    _appmsg_ = new ::MMPro::micromsg::BizAppMsgInfo(*from._appmsg_);
  } else {
    _appmsg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizMessage)
}

void BizMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_baseinfo_, 0, reinterpret_cast<char*>(&_appmsg_) -
    reinterpret_cast<char*>(&_baseinfo_) + sizeof(_appmsg_));
}

BizMessage::~BizMessage() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizMessage)
  SharedDtor();
}

void BizMessage::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _baseinfo_;
  }
  if (this != internal_default_instance()) {
    delete _text_;
  }
  if (this != internal_default_instance()) {
    delete _image_;
  }
  if (this != internal_default_instance()) {
    delete _voice_;
  }
  if (this != internal_default_instance()) {
    delete _video_;
  }
  if (this != internal_default_instance()) {
    delete _appmsg_;
  }
}

void BizMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizMessage::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizMessage& BizMessage::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizMessage* BizMessage::New(::google::protobuf::Arena* arena) const {
  BizMessage* n = new BizMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizMessage)
  if (_has_bits_[0 / 32] & 63u) {
    if (has__baseinfo()) {
      GOOGLE_DCHECK(_baseinfo_ != NULL);
      _baseinfo_->::MMPro::micromsg::CommMsgBaseInfo::Clear();
    }
    if (has__text()) {
      GOOGLE_DCHECK(_text_ != NULL);
      _text_->::MMPro::micromsg::BizTextMsgInfo::Clear();
    }
    if (has__image()) {
      GOOGLE_DCHECK(_image_ != NULL);
      _image_->::MMPro::micromsg::BizImageMsgInfo::Clear();
    }
    if (has__voice()) {
      GOOGLE_DCHECK(_voice_ != NULL);
      _voice_->::MMPro::micromsg::BizVoiceMsgInfo::Clear();
    }
    if (has__video()) {
      GOOGLE_DCHECK(_video_ != NULL);
      _video_->::MMPro::micromsg::BizVideoMsgInfo::Clear();
    }
    if (has__appmsg()) {
      GOOGLE_DCHECK(_appmsg_ != NULL);
      _appmsg_->::MMPro::micromsg::BizAppMsgInfo::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MMPro.micromsg.CommMsgBaseInfo _BaseInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizTextMsgInfo _Text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizImageMsgInfo _Image = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizVoiceMsgInfo _Voice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__voice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizVideoMsgInfo _Video = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__video()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizAppMsgInfo _AppMsg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__appmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizMessage)
  return false;
#undef DO_
}

void BizMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.CommMsgBaseInfo _BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseinfo_, output);
  }

  // optional .MMPro.micromsg.BizTextMsgInfo _Text = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_text_, output);
  }

  // optional .MMPro.micromsg.BizImageMsgInfo _Image = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->_image_, output);
  }

  // optional .MMPro.micromsg.BizVoiceMsgInfo _Voice = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_voice_, output);
  }

  // optional .MMPro.micromsg.BizVideoMsgInfo _Video = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->_video_, output);
  }

  // optional .MMPro.micromsg.BizAppMsgInfo _AppMsg = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->_appmsg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizMessage)
}

::google::protobuf::uint8* BizMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.CommMsgBaseInfo _BaseInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseinfo_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizTextMsgInfo _Text = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_text_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizImageMsgInfo _Image = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->_image_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizVoiceMsgInfo _Voice = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_voice_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizVideoMsgInfo _Video = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->_video_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizAppMsgInfo _AppMsg = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->_appmsg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizMessage)
  return target;
}

size_t BizMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional .MMPro.micromsg.CommMsgBaseInfo _BaseInfo = 1;
    if (has__baseinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_baseinfo_);
    }

    // optional .MMPro.micromsg.BizTextMsgInfo _Text = 2;
    if (has__text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_text_);
    }

    // optional .MMPro.micromsg.BizImageMsgInfo _Image = 3;
    if (has__image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_image_);
    }

    // optional .MMPro.micromsg.BizVoiceMsgInfo _Voice = 4;
    if (has__voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_voice_);
    }

    // optional .MMPro.micromsg.BizVideoMsgInfo _Video = 5;
    if (has__video()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_video_);
    }

    // optional .MMPro.micromsg.BizAppMsgInfo _AppMsg = 6;
    if (has__appmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_appmsg_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BizMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizMessage)
    MergeFrom(*source);
  }
}

void BizMessage::MergeFrom(const BizMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable__baseinfo()->::MMPro::micromsg::CommMsgBaseInfo::MergeFrom(from._baseinfo());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable__text()->::MMPro::micromsg::BizTextMsgInfo::MergeFrom(from._text());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable__image()->::MMPro::micromsg::BizImageMsgInfo::MergeFrom(from._image());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__voice()->::MMPro::micromsg::BizVoiceMsgInfo::MergeFrom(from._voice());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable__video()->::MMPro::micromsg::BizVideoMsgInfo::MergeFrom(from._video());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable__appmsg()->::MMPro::micromsg::BizAppMsgInfo::MergeFrom(from._appmsg());
    }
  }
}

void BizMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizMessage::CopyFrom(const BizMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizMessage::IsInitialized() const {
  return true;
}

void BizMessage::Swap(BizMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizMessage::InternalSwap(BizMessage* other) {
  std::swap(_baseinfo_, other->_baseinfo_);
  std::swap(_text_, other->_text_);
  std::swap(_image_, other->_image_);
  std::swap(_voice_, other->_voice_);
  std::swap(_video_, other->_video_);
  std::swap(_appmsg_, other->_appmsg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizMessage::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizMessage

// optional .MMPro.micromsg.CommMsgBaseInfo _BaseInfo = 1;
bool BizMessage::has__baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizMessage::set_has__baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void BizMessage::clear_has__baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizMessage::clear__baseinfo() {
  if (_baseinfo_ != NULL) _baseinfo_->::MMPro::micromsg::CommMsgBaseInfo::Clear();
  clear_has__baseinfo();
}
const ::MMPro::micromsg::CommMsgBaseInfo& BizMessage::_baseinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._BaseInfo)
  return _baseinfo_ != NULL ? *_baseinfo_
                         : *::MMPro::micromsg::CommMsgBaseInfo::internal_default_instance();
}
::MMPro::micromsg::CommMsgBaseInfo* BizMessage::mutable__baseinfo() {
  set_has__baseinfo();
  if (_baseinfo_ == NULL) {
    _baseinfo_ = new ::MMPro::micromsg::CommMsgBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._BaseInfo)
  return _baseinfo_;
}
::MMPro::micromsg::CommMsgBaseInfo* BizMessage::release__baseinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._BaseInfo)
  clear_has__baseinfo();
  ::MMPro::micromsg::CommMsgBaseInfo* temp = _baseinfo_;
  _baseinfo_ = NULL;
  return temp;
}
void BizMessage::set_allocated__baseinfo(::MMPro::micromsg::CommMsgBaseInfo* _baseinfo) {
  delete _baseinfo_;
  _baseinfo_ = _baseinfo;
  if (_baseinfo) {
    set_has__baseinfo();
  } else {
    clear_has__baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._BaseInfo)
}

// optional .MMPro.micromsg.BizTextMsgInfo _Text = 2;
bool BizMessage::has__text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizMessage::set_has__text() {
  _has_bits_[0] |= 0x00000002u;
}
void BizMessage::clear_has__text() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizMessage::clear__text() {
  if (_text_ != NULL) _text_->::MMPro::micromsg::BizTextMsgInfo::Clear();
  clear_has__text();
}
const ::MMPro::micromsg::BizTextMsgInfo& BizMessage::_text() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._Text)
  return _text_ != NULL ? *_text_
                         : *::MMPro::micromsg::BizTextMsgInfo::internal_default_instance();
}
::MMPro::micromsg::BizTextMsgInfo* BizMessage::mutable__text() {
  set_has__text();
  if (_text_ == NULL) {
    _text_ = new ::MMPro::micromsg::BizTextMsgInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._Text)
  return _text_;
}
::MMPro::micromsg::BizTextMsgInfo* BizMessage::release__text() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._Text)
  clear_has__text();
  ::MMPro::micromsg::BizTextMsgInfo* temp = _text_;
  _text_ = NULL;
  return temp;
}
void BizMessage::set_allocated__text(::MMPro::micromsg::BizTextMsgInfo* _text) {
  delete _text_;
  _text_ = _text;
  if (_text) {
    set_has__text();
  } else {
    clear_has__text();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._Text)
}

// optional .MMPro.micromsg.BizImageMsgInfo _Image = 3;
bool BizMessage::has__image() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizMessage::set_has__image() {
  _has_bits_[0] |= 0x00000004u;
}
void BizMessage::clear_has__image() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizMessage::clear__image() {
  if (_image_ != NULL) _image_->::MMPro::micromsg::BizImageMsgInfo::Clear();
  clear_has__image();
}
const ::MMPro::micromsg::BizImageMsgInfo& BizMessage::_image() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._Image)
  return _image_ != NULL ? *_image_
                         : *::MMPro::micromsg::BizImageMsgInfo::internal_default_instance();
}
::MMPro::micromsg::BizImageMsgInfo* BizMessage::mutable__image() {
  set_has__image();
  if (_image_ == NULL) {
    _image_ = new ::MMPro::micromsg::BizImageMsgInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._Image)
  return _image_;
}
::MMPro::micromsg::BizImageMsgInfo* BizMessage::release__image() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._Image)
  clear_has__image();
  ::MMPro::micromsg::BizImageMsgInfo* temp = _image_;
  _image_ = NULL;
  return temp;
}
void BizMessage::set_allocated__image(::MMPro::micromsg::BizImageMsgInfo* _image) {
  delete _image_;
  _image_ = _image;
  if (_image) {
    set_has__image();
  } else {
    clear_has__image();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._Image)
}

// optional .MMPro.micromsg.BizVoiceMsgInfo _Voice = 4;
bool BizMessage::has__voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizMessage::set_has__voice() {
  _has_bits_[0] |= 0x00000008u;
}
void BizMessage::clear_has__voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizMessage::clear__voice() {
  if (_voice_ != NULL) _voice_->::MMPro::micromsg::BizVoiceMsgInfo::Clear();
  clear_has__voice();
}
const ::MMPro::micromsg::BizVoiceMsgInfo& BizMessage::_voice() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._Voice)
  return _voice_ != NULL ? *_voice_
                         : *::MMPro::micromsg::BizVoiceMsgInfo::internal_default_instance();
}
::MMPro::micromsg::BizVoiceMsgInfo* BizMessage::mutable__voice() {
  set_has__voice();
  if (_voice_ == NULL) {
    _voice_ = new ::MMPro::micromsg::BizVoiceMsgInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._Voice)
  return _voice_;
}
::MMPro::micromsg::BizVoiceMsgInfo* BizMessage::release__voice() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._Voice)
  clear_has__voice();
  ::MMPro::micromsg::BizVoiceMsgInfo* temp = _voice_;
  _voice_ = NULL;
  return temp;
}
void BizMessage::set_allocated__voice(::MMPro::micromsg::BizVoiceMsgInfo* _voice) {
  delete _voice_;
  _voice_ = _voice;
  if (_voice) {
    set_has__voice();
  } else {
    clear_has__voice();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._Voice)
}

// optional .MMPro.micromsg.BizVideoMsgInfo _Video = 5;
bool BizMessage::has__video() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizMessage::set_has__video() {
  _has_bits_[0] |= 0x00000010u;
}
void BizMessage::clear_has__video() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizMessage::clear__video() {
  if (_video_ != NULL) _video_->::MMPro::micromsg::BizVideoMsgInfo::Clear();
  clear_has__video();
}
const ::MMPro::micromsg::BizVideoMsgInfo& BizMessage::_video() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._Video)
  return _video_ != NULL ? *_video_
                         : *::MMPro::micromsg::BizVideoMsgInfo::internal_default_instance();
}
::MMPro::micromsg::BizVideoMsgInfo* BizMessage::mutable__video() {
  set_has__video();
  if (_video_ == NULL) {
    _video_ = new ::MMPro::micromsg::BizVideoMsgInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._Video)
  return _video_;
}
::MMPro::micromsg::BizVideoMsgInfo* BizMessage::release__video() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._Video)
  clear_has__video();
  ::MMPro::micromsg::BizVideoMsgInfo* temp = _video_;
  _video_ = NULL;
  return temp;
}
void BizMessage::set_allocated__video(::MMPro::micromsg::BizVideoMsgInfo* _video) {
  delete _video_;
  _video_ = _video;
  if (_video) {
    set_has__video();
  } else {
    clear_has__video();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._Video)
}

// optional .MMPro.micromsg.BizAppMsgInfo _AppMsg = 6;
bool BizMessage::has__appmsg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizMessage::set_has__appmsg() {
  _has_bits_[0] |= 0x00000020u;
}
void BizMessage::clear_has__appmsg() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizMessage::clear__appmsg() {
  if (_appmsg_ != NULL) _appmsg_->::MMPro::micromsg::BizAppMsgInfo::Clear();
  clear_has__appmsg();
}
const ::MMPro::micromsg::BizAppMsgInfo& BizMessage::_appmsg() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessage._AppMsg)
  return _appmsg_ != NULL ? *_appmsg_
                         : *::MMPro::micromsg::BizAppMsgInfo::internal_default_instance();
}
::MMPro::micromsg::BizAppMsgInfo* BizMessage::mutable__appmsg() {
  set_has__appmsg();
  if (_appmsg_ == NULL) {
    _appmsg_ = new ::MMPro::micromsg::BizAppMsgInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessage._AppMsg)
  return _appmsg_;
}
::MMPro::micromsg::BizAppMsgInfo* BizMessage::release__appmsg() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessage._AppMsg)
  clear_has__appmsg();
  ::MMPro::micromsg::BizAppMsgInfo* temp = _appmsg_;
  _appmsg_ = NULL;
  return temp;
}
void BizMessage::set_allocated__appmsg(::MMPro::micromsg::BizAppMsgInfo* _appmsg) {
  delete _appmsg_;
  _appmsg_ = _appmsg;
  if (_appmsg) {
    set_has__appmsg();
  } else {
    clear_has__appmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessage._AppMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileV2PagingInfo::kOffsetFieldNumber;
const int BizProfileV2PagingInfo::kIsEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileV2PagingInfo::BizProfileV2PagingInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileV2PagingInfo)
}
BizProfileV2PagingInfo::BizProfileV2PagingInfo(const BizProfileV2PagingInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__offset()) {
    _offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._offset_);
  }
  _isend_ = from._isend_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileV2PagingInfo)
}

void BizProfileV2PagingInfo::SharedCtor() {
  _cached_size_ = 0;
  _offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _isend_ = 0u;
}

BizProfileV2PagingInfo::~BizProfileV2PagingInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileV2PagingInfo)
  SharedDtor();
}

void BizProfileV2PagingInfo::SharedDtor() {
  _offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizProfileV2PagingInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileV2PagingInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileV2PagingInfo& BizProfileV2PagingInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileV2PagingInfo* BizProfileV2PagingInfo::New(::google::protobuf::Arena* arena) const {
  BizProfileV2PagingInfo* n = new BizProfileV2PagingInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileV2PagingInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileV2PagingInfo)
  if (has__offset()) {
    GOOGLE_DCHECK(!_offset_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_offset_.UnsafeRawStringPointer())->clear();
  }
  _isend_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileV2PagingInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileV2PagingInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes _Offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable__offset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _IsEnd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__isend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_isend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileV2PagingInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileV2PagingInfo)
  return false;
#undef DO_
}

void BizProfileV2PagingInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileV2PagingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes _Offset = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->_offset(), output);
  }

  // optional uint32 _IsEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_isend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileV2PagingInfo)
}

::google::protobuf::uint8* BizProfileV2PagingInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileV2PagingInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes _Offset = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->_offset(), target);
  }

  // optional uint32 _IsEnd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_isend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileV2PagingInfo)
  return target;
}

size_t BizProfileV2PagingInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileV2PagingInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes _Offset = 1;
    if (has__offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->_offset());
    }

    // optional uint32 _IsEnd = 2;
    if (has__isend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_isend());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileV2PagingInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileV2PagingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileV2PagingInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileV2PagingInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileV2PagingInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileV2PagingInfo)
    MergeFrom(*source);
  }
}

void BizProfileV2PagingInfo::MergeFrom(const BizProfileV2PagingInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileV2PagingInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__offset();
      _offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._offset_);
    }
    if (cached_has_bits & 0x00000002u) {
      _isend_ = from._isend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileV2PagingInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileV2PagingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileV2PagingInfo::CopyFrom(const BizProfileV2PagingInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileV2PagingInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileV2PagingInfo::IsInitialized() const {
  return true;
}

void BizProfileV2PagingInfo::Swap(BizProfileV2PagingInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileV2PagingInfo::InternalSwap(BizProfileV2PagingInfo* other) {
  _offset_.Swap(&other->_offset_);
  std::swap(_isend_, other->_isend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileV2PagingInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileV2PagingInfo

// optional bytes _Offset = 1;
bool BizProfileV2PagingInfo::has__offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileV2PagingInfo::set_has__offset() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileV2PagingInfo::clear_has__offset() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileV2PagingInfo::clear__offset() {
  _offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__offset();
}
const ::std::string& BizProfileV2PagingInfo::_offset() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
  return _offset_.GetNoArena();
}
void BizProfileV2PagingInfo::set__offset(const ::std::string& value) {
  set_has__offset();
  _offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
}
#if LANG_CXX11
void BizProfileV2PagingInfo::set__offset(::std::string&& value) {
  set_has__offset();
  _offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
}
#endif
void BizProfileV2PagingInfo::set__offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__offset();
  _offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
}
void BizProfileV2PagingInfo::set__offset(const void* value, size_t size) {
  set_has__offset();
  _offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
}
::std::string* BizProfileV2PagingInfo::mutable__offset() {
  set_has__offset();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
  return _offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileV2PagingInfo::release__offset() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
  clear_has__offset();
  return _offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileV2PagingInfo::set_allocated__offset(::std::string* _offset) {
  if (_offset != NULL) {
    set_has__offset();
  } else {
    clear_has__offset();
  }
  _offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _offset);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2PagingInfo._Offset)
}

// optional uint32 _IsEnd = 2;
bool BizProfileV2PagingInfo::has__isend() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileV2PagingInfo::set_has__isend() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileV2PagingInfo::clear_has__isend() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileV2PagingInfo::clear__isend() {
  _isend_ = 0u;
  clear_has__isend();
}
::google::protobuf::uint32 BizProfileV2PagingInfo::_isend() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2PagingInfo._IsEnd)
  return _isend_;
}
void BizProfileV2PagingInfo::set__isend(::google::protobuf::uint32 value) {
  set_has__isend();
  _isend_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2PagingInfo._IsEnd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizMessageList::kMsgFieldNumber;
const int BizMessageList::kPagingInfoFieldNumber;
const int BizMessageList::kFeaturedListFieldNumber;
const int BizMessageList::kFeaturedUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizMessageList::BizMessageList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizMessageList)
}
BizMessageList::BizMessageList(const BizMessageList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _msg_(from._msg_),
      _featuredlist_(from._featuredlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__paginginfo()) {
    _paginginfo_ = new ::MMPro::micromsg::BizProfileV2PagingInfo(*from._paginginfo_);
  } else {
    _paginginfo_ = NULL;
  }
  _featuredupdatetime_ = from._featuredupdatetime_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizMessageList)
}

void BizMessageList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_paginginfo_, 0, reinterpret_cast<char*>(&_featuredupdatetime_) -
    reinterpret_cast<char*>(&_paginginfo_) + sizeof(_featuredupdatetime_));
}

BizMessageList::~BizMessageList() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizMessageList)
  SharedDtor();
}

void BizMessageList::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _paginginfo_;
  }
}

void BizMessageList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizMessageList::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizMessageList& BizMessageList::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizMessageList* BizMessageList::New(::google::protobuf::Arena* arena) const {
  BizMessageList* n = new BizMessageList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizMessageList::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizMessageList)
  _msg_.Clear();
  _featuredlist_.Clear();
  if (has__paginginfo()) {
    GOOGLE_DCHECK(_paginginfo_ != NULL);
    _paginginfo_->::MMPro::micromsg::BizProfileV2PagingInfo::Clear();
  }
  _featuredupdatetime_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizMessageList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizMessageList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MMPro.micromsg.BizMessage _Msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizProfileV2PagingInfo _PagingInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__paginginfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizMessage _FeaturedList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__featuredlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _FeaturedUpdateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__featuredupdatetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_featuredupdatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizMessageList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizMessageList)
  return false;
#undef DO_
}

void BizMessageList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizMessageList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizMessage _Msg = 1;
  for (unsigned int i = 0, n = this->_msg_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_msg(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizProfileV2PagingInfo _PagingInfo = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->_paginginfo_, output);
  }

  // repeated .MMPro.micromsg.BizMessage _FeaturedList = 6;
  for (unsigned int i = 0, n = this->_featuredlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_featuredlist(i), output);
  }

  // optional uint32 _FeaturedUpdateTime = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_featuredupdatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizMessageList)
}

::google::protobuf::uint8* BizMessageList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizMessageList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizMessage _Msg = 1;
  for (unsigned int i = 0, n = this->_msg_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->_msg(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizProfileV2PagingInfo _PagingInfo = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->_paginginfo_, deterministic, target);
  }

  // repeated .MMPro.micromsg.BizMessage _FeaturedList = 6;
  for (unsigned int i = 0, n = this->_featuredlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->_featuredlist(i), deterministic, target);
  }

  // optional uint32 _FeaturedUpdateTime = 7;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_featuredupdatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizMessageList)
  return target;
}

size_t BizMessageList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizMessageList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizMessage _Msg = 1;
  {
    unsigned int count = this->_msg_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_msg(i));
    }
  }

  // repeated .MMPro.micromsg.BizMessage _FeaturedList = 6;
  {
    unsigned int count = this->_featuredlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_featuredlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional .MMPro.micromsg.BizProfileV2PagingInfo _PagingInfo = 5;
    if (has__paginginfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_paginginfo_);
    }

    // optional uint32 _FeaturedUpdateTime = 7;
    if (has__featuredupdatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_featuredupdatetime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizMessageList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  const BizMessageList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizMessageList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizMessageList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizMessageList)
    MergeFrom(*source);
  }
}

void BizMessageList::MergeFrom(const BizMessageList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizMessageList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _msg_.MergeFrom(from._msg_);
  _featuredlist_.MergeFrom(from._featuredlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable__paginginfo()->::MMPro::micromsg::BizProfileV2PagingInfo::MergeFrom(from._paginginfo());
    }
    if (cached_has_bits & 0x00000002u) {
      _featuredupdatetime_ = from._featuredupdatetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizMessageList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizMessageList::CopyFrom(const BizMessageList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizMessageList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizMessageList::IsInitialized() const {
  return true;
}

void BizMessageList::Swap(BizMessageList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizMessageList::InternalSwap(BizMessageList* other) {
  _msg_.InternalSwap(&other->_msg_);
  _featuredlist_.InternalSwap(&other->_featuredlist_);
  std::swap(_paginginfo_, other->_paginginfo_);
  std::swap(_featuredupdatetime_, other->_featuredupdatetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizMessageList::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizMessageList

// repeated .MMPro.micromsg.BizMessage _Msg = 1;
int BizMessageList::_msg_size() const {
  return _msg_.size();
}
void BizMessageList::clear__msg() {
  _msg_.Clear();
}
const ::MMPro::micromsg::BizMessage& BizMessageList::_msg(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessageList._Msg)
  return _msg_.Get(index);
}
::MMPro::micromsg::BizMessage* BizMessageList::mutable__msg(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessageList._Msg)
  return _msg_.Mutable(index);
}
::MMPro::micromsg::BizMessage* BizMessageList::add__msg() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizMessageList._Msg)
  return _msg_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizMessage >*
BizMessageList::mutable__msg() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizMessageList._Msg)
  return &_msg_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizMessage >&
BizMessageList::_msg() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizMessageList._Msg)
  return _msg_;
}

// optional .MMPro.micromsg.BizProfileV2PagingInfo _PagingInfo = 5;
bool BizMessageList::has__paginginfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizMessageList::set_has__paginginfo() {
  _has_bits_[0] |= 0x00000001u;
}
void BizMessageList::clear_has__paginginfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizMessageList::clear__paginginfo() {
  if (_paginginfo_ != NULL) _paginginfo_->::MMPro::micromsg::BizProfileV2PagingInfo::Clear();
  clear_has__paginginfo();
}
const ::MMPro::micromsg::BizProfileV2PagingInfo& BizMessageList::_paginginfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessageList._PagingInfo)
  return _paginginfo_ != NULL ? *_paginginfo_
                         : *::MMPro::micromsg::BizProfileV2PagingInfo::internal_default_instance();
}
::MMPro::micromsg::BizProfileV2PagingInfo* BizMessageList::mutable__paginginfo() {
  set_has__paginginfo();
  if (_paginginfo_ == NULL) {
    _paginginfo_ = new ::MMPro::micromsg::BizProfileV2PagingInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessageList._PagingInfo)
  return _paginginfo_;
}
::MMPro::micromsg::BizProfileV2PagingInfo* BizMessageList::release__paginginfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizMessageList._PagingInfo)
  clear_has__paginginfo();
  ::MMPro::micromsg::BizProfileV2PagingInfo* temp = _paginginfo_;
  _paginginfo_ = NULL;
  return temp;
}
void BizMessageList::set_allocated__paginginfo(::MMPro::micromsg::BizProfileV2PagingInfo* _paginginfo) {
  delete _paginginfo_;
  _paginginfo_ = _paginginfo;
  if (_paginginfo) {
    set_has__paginginfo();
  } else {
    clear_has__paginginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizMessageList._PagingInfo)
}

// repeated .MMPro.micromsg.BizMessage _FeaturedList = 6;
int BizMessageList::_featuredlist_size() const {
  return _featuredlist_.size();
}
void BizMessageList::clear__featuredlist() {
  _featuredlist_.Clear();
}
const ::MMPro::micromsg::BizMessage& BizMessageList::_featuredlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessageList._FeaturedList)
  return _featuredlist_.Get(index);
}
::MMPro::micromsg::BizMessage* BizMessageList::mutable__featuredlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizMessageList._FeaturedList)
  return _featuredlist_.Mutable(index);
}
::MMPro::micromsg::BizMessage* BizMessageList::add__featuredlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizMessageList._FeaturedList)
  return _featuredlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizMessage >*
BizMessageList::mutable__featuredlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizMessageList._FeaturedList)
  return &_featuredlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizMessage >&
BizMessageList::_featuredlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizMessageList._FeaturedList)
  return _featuredlist_;
}

// optional uint32 _FeaturedUpdateTime = 7;
bool BizMessageList::has__featuredupdatetime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizMessageList::set_has__featuredupdatetime() {
  _has_bits_[0] |= 0x00000002u;
}
void BizMessageList::clear_has__featuredupdatetime() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizMessageList::clear__featuredupdatetime() {
  _featuredupdatetime_ = 0u;
  clear_has__featuredupdatetime();
}
::google::protobuf::uint32 BizMessageList::_featuredupdatetime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizMessageList._FeaturedUpdateTime)
  return _featuredupdatetime_;
}
void BizMessageList::set__featuredupdatetime(::google::protobuf::uint32 value) {
  set_has__featuredupdatetime();
  _featuredupdatetime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizMessageList._FeaturedUpdateTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizBrandItem::kTextFieldNumber;
const int BizBrandItem::kFontSizeFieldNumber;
const int BizBrandItem::kFontColorFieldNumber;
const int BizBrandItem::kLineHeightFieldNumber;
const int BizBrandItem::kFontStyleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizBrandItem::BizBrandItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizBrandItem)
}
BizBrandItem::BizBrandItem(const BizBrandItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__text()) {
    _text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._text_);
  }
  _fontcolor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__fontcolor()) {
    _fontcolor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._fontcolor_);
  }
  ::memcpy(&_fontsize_, &from._fontsize_,
    reinterpret_cast<char*>(&_fontstyle_) -
    reinterpret_cast<char*>(&_fontsize_) + sizeof(_fontstyle_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizBrandItem)
}

void BizBrandItem::SharedCtor() {
  _cached_size_ = 0;
  _text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _fontcolor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_fontsize_, 0, reinterpret_cast<char*>(&_fontstyle_) -
    reinterpret_cast<char*>(&_fontsize_) + sizeof(_fontstyle_));
}

BizBrandItem::~BizBrandItem() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizBrandItem)
  SharedDtor();
}

void BizBrandItem::SharedDtor() {
  _text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _fontcolor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizBrandItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizBrandItem::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizBrandItem& BizBrandItem::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizBrandItem* BizBrandItem::New(::google::protobuf::Arena* arena) const {
  BizBrandItem* n = new BizBrandItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizBrandItem::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizBrandItem)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__text()) {
      GOOGLE_DCHECK(!_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_text_.UnsafeRawStringPointer())->clear();
    }
    if (has__fontcolor()) {
      GOOGLE_DCHECK(!_fontcolor_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_fontcolor_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&_fontsize_, 0, reinterpret_cast<char*>(&_fontstyle_) -
      reinterpret_cast<char*>(&_fontsize_) + sizeof(_fontstyle_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizBrandItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizBrandItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_text().data(), this->_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBrandItem._Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _FontSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__fontsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_fontsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FontColor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__fontcolor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_fontcolor().data(), this->_fontcolor().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBrandItem._FontColor");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _LineHeight = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__lineheight();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_lineheight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _FontStyle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__fontstyle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_fontstyle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizBrandItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizBrandItem)
  return false;
#undef DO_
}

void BizBrandItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizBrandItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_text().data(), this->_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandItem._Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_text(), output);
  }

  // optional uint32 _FontSize = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_fontsize(), output);
  }

  // optional string _FontColor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_fontcolor().data(), this->_fontcolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandItem._FontColor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_fontcolor(), output);
  }

  // optional uint32 _LineHeight = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_lineheight(), output);
  }

  // optional uint32 _FontStyle = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_fontstyle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizBrandItem)
}

::google::protobuf::uint8* BizBrandItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizBrandItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_text().data(), this->_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandItem._Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_text(), target);
  }

  // optional uint32 _FontSize = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_fontsize(), target);
  }

  // optional string _FontColor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_fontcolor().data(), this->_fontcolor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandItem._FontColor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_fontcolor(), target);
  }

  // optional uint32 _LineHeight = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_lineheight(), target);
  }

  // optional uint32 _FontStyle = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_fontstyle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizBrandItem)
  return target;
}

size_t BizBrandItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizBrandItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string _Text = 1;
    if (has__text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_text());
    }

    // optional string _FontColor = 3;
    if (has__fontcolor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_fontcolor());
    }

    // optional uint32 _FontSize = 2;
    if (has__fontsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_fontsize());
    }

    // optional uint32 _LineHeight = 4;
    if (has__lineheight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_lineheight());
    }

    // optional uint32 _FontStyle = 5;
    if (has__fontstyle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_fontstyle());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizBrandItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizBrandItem)
  GOOGLE_DCHECK_NE(&from, this);
  const BizBrandItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizBrandItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizBrandItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizBrandItem)
    MergeFrom(*source);
  }
}

void BizBrandItem::MergeFrom(const BizBrandItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizBrandItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__text();
      _text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._text_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__fontcolor();
      _fontcolor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._fontcolor_);
    }
    if (cached_has_bits & 0x00000004u) {
      _fontsize_ = from._fontsize_;
    }
    if (cached_has_bits & 0x00000008u) {
      _lineheight_ = from._lineheight_;
    }
    if (cached_has_bits & 0x00000010u) {
      _fontstyle_ = from._fontstyle_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizBrandItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizBrandItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizBrandItem::CopyFrom(const BizBrandItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizBrandItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizBrandItem::IsInitialized() const {
  return true;
}

void BizBrandItem::Swap(BizBrandItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizBrandItem::InternalSwap(BizBrandItem* other) {
  _text_.Swap(&other->_text_);
  _fontcolor_.Swap(&other->_fontcolor_);
  std::swap(_fontsize_, other->_fontsize_);
  std::swap(_lineheight_, other->_lineheight_);
  std::swap(_fontstyle_, other->_fontstyle_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizBrandItem::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizBrandItem

// optional string _Text = 1;
bool BizBrandItem::has__text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizBrandItem::set_has__text() {
  _has_bits_[0] |= 0x00000001u;
}
void BizBrandItem::clear_has__text() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizBrandItem::clear__text() {
  _text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__text();
}
const ::std::string& BizBrandItem::_text() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandItem._Text)
  return _text_.GetNoArena();
}
void BizBrandItem::set__text(const ::std::string& value) {
  set_has__text();
  _text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandItem._Text)
}
#if LANG_CXX11
void BizBrandItem::set__text(::std::string&& value) {
  set_has__text();
  _text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBrandItem._Text)
}
#endif
void BizBrandItem::set__text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__text();
  _text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBrandItem._Text)
}
void BizBrandItem::set__text(const char* value, size_t size) {
  set_has__text();
  _text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBrandItem._Text)
}
::std::string* BizBrandItem::mutable__text() {
  set_has__text();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBrandItem._Text)
  return _text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBrandItem::release__text() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBrandItem._Text)
  clear_has__text();
  return _text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBrandItem::set_allocated__text(::std::string* _text) {
  if (_text != NULL) {
    set_has__text();
  } else {
    clear_has__text();
  }
  _text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _text);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBrandItem._Text)
}

// optional uint32 _FontSize = 2;
bool BizBrandItem::has__fontsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizBrandItem::set_has__fontsize() {
  _has_bits_[0] |= 0x00000004u;
}
void BizBrandItem::clear_has__fontsize() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizBrandItem::clear__fontsize() {
  _fontsize_ = 0u;
  clear_has__fontsize();
}
::google::protobuf::uint32 BizBrandItem::_fontsize() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandItem._FontSize)
  return _fontsize_;
}
void BizBrandItem::set__fontsize(::google::protobuf::uint32 value) {
  set_has__fontsize();
  _fontsize_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandItem._FontSize)
}

// optional string _FontColor = 3;
bool BizBrandItem::has__fontcolor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizBrandItem::set_has__fontcolor() {
  _has_bits_[0] |= 0x00000002u;
}
void BizBrandItem::clear_has__fontcolor() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizBrandItem::clear__fontcolor() {
  _fontcolor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__fontcolor();
}
const ::std::string& BizBrandItem::_fontcolor() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandItem._FontColor)
  return _fontcolor_.GetNoArena();
}
void BizBrandItem::set__fontcolor(const ::std::string& value) {
  set_has__fontcolor();
  _fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandItem._FontColor)
}
#if LANG_CXX11
void BizBrandItem::set__fontcolor(::std::string&& value) {
  set_has__fontcolor();
  _fontcolor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBrandItem._FontColor)
}
#endif
void BizBrandItem::set__fontcolor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__fontcolor();
  _fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBrandItem._FontColor)
}
void BizBrandItem::set__fontcolor(const char* value, size_t size) {
  set_has__fontcolor();
  _fontcolor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBrandItem._FontColor)
}
::std::string* BizBrandItem::mutable__fontcolor() {
  set_has__fontcolor();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBrandItem._FontColor)
  return _fontcolor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBrandItem::release__fontcolor() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBrandItem._FontColor)
  clear_has__fontcolor();
  return _fontcolor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBrandItem::set_allocated__fontcolor(::std::string* _fontcolor) {
  if (_fontcolor != NULL) {
    set_has__fontcolor();
  } else {
    clear_has__fontcolor();
  }
  _fontcolor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _fontcolor);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBrandItem._FontColor)
}

// optional uint32 _LineHeight = 4;
bool BizBrandItem::has__lineheight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizBrandItem::set_has__lineheight() {
  _has_bits_[0] |= 0x00000008u;
}
void BizBrandItem::clear_has__lineheight() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizBrandItem::clear__lineheight() {
  _lineheight_ = 0u;
  clear_has__lineheight();
}
::google::protobuf::uint32 BizBrandItem::_lineheight() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandItem._LineHeight)
  return _lineheight_;
}
void BizBrandItem::set__lineheight(::google::protobuf::uint32 value) {
  set_has__lineheight();
  _lineheight_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandItem._LineHeight)
}

// optional uint32 _FontStyle = 5;
bool BizBrandItem::has__fontstyle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizBrandItem::set_has__fontstyle() {
  _has_bits_[0] |= 0x00000010u;
}
void BizBrandItem::clear_has__fontstyle() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizBrandItem::clear__fontstyle() {
  _fontstyle_ = 0u;
  clear_has__fontstyle();
}
::google::protobuf::uint32 BizBrandItem::_fontstyle() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandItem._FontStyle)
  return _fontstyle_;
}
void BizBrandItem::set__fontstyle(::google::protobuf::uint32 value) {
  set_has__fontstyle();
  _fontstyle_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandItem._FontStyle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizBrandBlock::kTitleFieldNumber;
const int BizBrandBlock::kItemsFieldNumber;
const int BizBrandBlock::kUseSeparatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizBrandBlock::BizBrandBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizBrandBlock)
}
BizBrandBlock::BizBrandBlock(const BizBrandBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _items_(from._items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__title()) {
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
  _useseparator_ = from._useseparator_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizBrandBlock)
}

void BizBrandBlock::SharedCtor() {
  _cached_size_ = 0;
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _useseparator_ = false;
}

BizBrandBlock::~BizBrandBlock() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizBrandBlock)
  SharedDtor();
}

void BizBrandBlock::SharedDtor() {
  _title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizBrandBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizBrandBlock::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizBrandBlock& BizBrandBlock::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizBrandBlock* BizBrandBlock::New(::google::protobuf::Arena* arena) const {
  BizBrandBlock* n = new BizBrandBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizBrandBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizBrandBlock)
  _items_.Clear();
  if (has__title()) {
    GOOGLE_DCHECK(!_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_title_.UnsafeRawStringPointer())->clear();
  }
  _useseparator_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizBrandBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizBrandBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_title().data(), this->_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizBrandBlock._Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizBrandItem _Items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool _UseSeparator = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__useseparator();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_useseparator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizBrandBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizBrandBlock)
  return false;
#undef DO_
}

void BizBrandBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizBrandBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandBlock._Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_title(), output);
  }

  // repeated .MMPro.micromsg.BizBrandItem _Items = 2;
  for (unsigned int i = 0, n = this->_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_items(i), output);
  }

  // optional bool _UseSeparator = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->_useseparator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizBrandBlock)
}

::google::protobuf::uint8* BizBrandBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizBrandBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizBrandBlock._Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_title(), target);
  }

  // repeated .MMPro.micromsg.BizBrandItem _Items = 2;
  for (unsigned int i = 0, n = this->_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->_items(i), deterministic, target);
  }

  // optional bool _UseSeparator = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->_useseparator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizBrandBlock)
  return target;
}

size_t BizBrandBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizBrandBlock)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizBrandItem _Items = 2;
  {
    unsigned int count = this->_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_items(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string _Title = 1;
    if (has__title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_title());
    }

    // optional bool _UseSeparator = 3;
    if (has__useseparator()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizBrandBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizBrandBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const BizBrandBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizBrandBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizBrandBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizBrandBlock)
    MergeFrom(*source);
  }
}

void BizBrandBlock::MergeFrom(const BizBrandBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizBrandBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _items_.MergeFrom(from._items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__title();
      _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
    }
    if (cached_has_bits & 0x00000002u) {
      _useseparator_ = from._useseparator_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizBrandBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizBrandBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizBrandBlock::CopyFrom(const BizBrandBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizBrandBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizBrandBlock::IsInitialized() const {
  return true;
}

void BizBrandBlock::Swap(BizBrandBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizBrandBlock::InternalSwap(BizBrandBlock* other) {
  _items_.InternalSwap(&other->_items_);
  _title_.Swap(&other->_title_);
  std::swap(_useseparator_, other->_useseparator_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizBrandBlock::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizBrandBlock

// optional string _Title = 1;
bool BizBrandBlock::has__title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizBrandBlock::set_has__title() {
  _has_bits_[0] |= 0x00000001u;
}
void BizBrandBlock::clear_has__title() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizBrandBlock::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
const ::std::string& BizBrandBlock::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandBlock._Title)
  return _title_.GetNoArena();
}
void BizBrandBlock::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandBlock._Title)
}
#if LANG_CXX11
void BizBrandBlock::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizBrandBlock._Title)
}
#endif
void BizBrandBlock::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizBrandBlock._Title)
}
void BizBrandBlock::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizBrandBlock._Title)
}
::std::string* BizBrandBlock::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBrandBlock._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizBrandBlock::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizBrandBlock._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizBrandBlock::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizBrandBlock._Title)
}

// repeated .MMPro.micromsg.BizBrandItem _Items = 2;
int BizBrandBlock::_items_size() const {
  return _items_.size();
}
void BizBrandBlock::clear__items() {
  _items_.Clear();
}
const ::MMPro::micromsg::BizBrandItem& BizBrandBlock::_items(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandBlock._Items)
  return _items_.Get(index);
}
::MMPro::micromsg::BizBrandItem* BizBrandBlock::mutable__items(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBrandBlock._Items)
  return _items_.Mutable(index);
}
::MMPro::micromsg::BizBrandItem* BizBrandBlock::add__items() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizBrandBlock._Items)
  return _items_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizBrandItem >*
BizBrandBlock::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizBrandBlock._Items)
  return &_items_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizBrandItem >&
BizBrandBlock::_items() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizBrandBlock._Items)
  return _items_;
}

// optional bool _UseSeparator = 3;
bool BizBrandBlock::has__useseparator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizBrandBlock::set_has__useseparator() {
  _has_bits_[0] |= 0x00000002u;
}
void BizBrandBlock::clear_has__useseparator() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizBrandBlock::clear__useseparator() {
  _useseparator_ = false;
  clear_has__useseparator();
}
bool BizBrandBlock::_useseparator() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandBlock._UseSeparator)
  return _useseparator_;
}
void BizBrandBlock::set__useseparator(bool value) {
  set_has__useseparator();
  _useseparator_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizBrandBlock._UseSeparator)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizBrandInfo::kBrandBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizBrandInfo::BizBrandInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizBrandInfo)
}
BizBrandInfo::BizBrandInfo(const BizBrandInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _brandblock_(from._brandblock_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizBrandInfo)
}

void BizBrandInfo::SharedCtor() {
  _cached_size_ = 0;
}

BizBrandInfo::~BizBrandInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizBrandInfo)
  SharedDtor();
}

void BizBrandInfo::SharedDtor() {
}

void BizBrandInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizBrandInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizBrandInfo& BizBrandInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizBrandInfo* BizBrandInfo::New(::google::protobuf::Arena* arena) const {
  BizBrandInfo* n = new BizBrandInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizBrandInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizBrandInfo)
  _brandblock_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizBrandInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizBrandInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MMPro.micromsg.BizBrandBlock _BrandBlock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__brandblock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizBrandInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizBrandInfo)
  return false;
#undef DO_
}

void BizBrandInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizBrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizBrandBlock _BrandBlock = 1;
  for (unsigned int i = 0, n = this->_brandblock_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_brandblock(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizBrandInfo)
}

::google::protobuf::uint8* BizBrandInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizBrandInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MMPro.micromsg.BizBrandBlock _BrandBlock = 1;
  for (unsigned int i = 0, n = this->_brandblock_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->_brandblock(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizBrandInfo)
  return target;
}

size_t BizBrandInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizBrandInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizBrandBlock _BrandBlock = 1;
  {
    unsigned int count = this->_brandblock_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_brandblock(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizBrandInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizBrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizBrandInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizBrandInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizBrandInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizBrandInfo)
    MergeFrom(*source);
  }
}

void BizBrandInfo::MergeFrom(const BizBrandInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizBrandInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _brandblock_.MergeFrom(from._brandblock_);
}

void BizBrandInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizBrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizBrandInfo::CopyFrom(const BizBrandInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizBrandInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizBrandInfo::IsInitialized() const {
  return true;
}

void BizBrandInfo::Swap(BizBrandInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizBrandInfo::InternalSwap(BizBrandInfo* other) {
  _brandblock_.InternalSwap(&other->_brandblock_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizBrandInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizBrandInfo

// repeated .MMPro.micromsg.BizBrandBlock _BrandBlock = 1;
int BizBrandInfo::_brandblock_size() const {
  return _brandblock_.size();
}
void BizBrandInfo::clear__brandblock() {
  _brandblock_.Clear();
}
const ::MMPro::micromsg::BizBrandBlock& BizBrandInfo::_brandblock(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizBrandInfo._BrandBlock)
  return _brandblock_.Get(index);
}
::MMPro::micromsg::BizBrandBlock* BizBrandInfo::mutable__brandblock(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizBrandInfo._BrandBlock)
  return _brandblock_.Mutable(index);
}
::MMPro::micromsg::BizBrandBlock* BizBrandInfo::add__brandblock() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizBrandInfo._BrandBlock)
  return _brandblock_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizBrandBlock >*
BizBrandInfo::mutable__brandblock() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizBrandInfo._BrandBlock)
  return &_brandblock_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizBrandBlock >&
BizBrandInfo::_brandblock() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizBrandInfo._BrandBlock)
  return _brandblock_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizServiceMenuButton::kIdFieldNumber;
const int BizServiceMenuButton::kTypeFieldNumber;
const int BizServiceMenuButton::kNameFieldNumber;
const int BizServiceMenuButton::kKeyFieldNumber;
const int BizServiceMenuButton::kValueFieldNumber;
const int BizServiceMenuButton::kSubButtonListFieldNumber;
const int BizServiceMenuButton::kActTypeFieldNumber;
const int BizServiceMenuButton::kNativeUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizServiceMenuButton::BizServiceMenuButton()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizServiceMenuButton)
}
BizServiceMenuButton::BizServiceMenuButton(const BizServiceMenuButton& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _subbuttonlist_(from._subbuttonlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__name()) {
    _name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._name_);
  }
  _key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__key()) {
    _key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._key_);
  }
  _value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__value()) {
    _value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._value_);
  }
  _nativeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__nativeurl()) {
    _nativeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nativeurl_);
  }
  ::memcpy(&_id_, &from._id_,
    reinterpret_cast<char*>(&_acttype_) -
    reinterpret_cast<char*>(&_id_) + sizeof(_acttype_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizServiceMenuButton)
}

void BizServiceMenuButton::SharedCtor() {
  _cached_size_ = 0;
  _name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nativeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_id_, 0, reinterpret_cast<char*>(&_acttype_) -
    reinterpret_cast<char*>(&_id_) + sizeof(_acttype_));
}

BizServiceMenuButton::~BizServiceMenuButton() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizServiceMenuButton)
  SharedDtor();
}

void BizServiceMenuButton::SharedDtor() {
  _name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nativeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizServiceMenuButton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizServiceMenuButton::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizServiceMenuButton& BizServiceMenuButton::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizServiceMenuButton* BizServiceMenuButton::New(::google::protobuf::Arena* arena) const {
  BizServiceMenuButton* n = new BizServiceMenuButton;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizServiceMenuButton::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizServiceMenuButton)
  _subbuttonlist_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has__name()) {
      GOOGLE_DCHECK(!_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_name_.UnsafeRawStringPointer())->clear();
    }
    if (has__key()) {
      GOOGLE_DCHECK(!_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_key_.UnsafeRawStringPointer())->clear();
    }
    if (has__value()) {
      GOOGLE_DCHECK(!_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_value_.UnsafeRawStringPointer())->clear();
    }
    if (has__nativeurl()) {
      GOOGLE_DCHECK(!_nativeurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_nativeurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&_id_, 0, reinterpret_cast<char*>(&_acttype_) -
      reinterpret_cast<char*>(&_id_) + sizeof(_acttype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizServiceMenuButton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizServiceMenuButton)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_name().data(), this->_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizServiceMenuButton._Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_key().data(), this->_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizServiceMenuButton._Key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_value().data(), this->_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizServiceMenuButton._Value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizServiceMenuButton _SubButtonList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__subbuttonlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ActType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__acttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_acttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _NativeUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nativeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nativeurl().data(), this->_nativeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizServiceMenuButton._NativeUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizServiceMenuButton)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizServiceMenuButton)
  return false;
#undef DO_
}

void BizServiceMenuButton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizServiceMenuButton)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _Id = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_id(), output);
  }

  // optional uint32 _Type = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_type(), output);
  }

  // optional string _Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_name().data(), this->_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_name(), output);
  }

  // optional string _Key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_key().data(), this->_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_key(), output);
  }

  // optional string _Value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_value().data(), this->_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_value(), output);
  }

  // repeated .MMPro.micromsg.BizServiceMenuButton _SubButtonList = 6;
  for (unsigned int i = 0, n = this->_subbuttonlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_subbuttonlist(i), output);
  }

  // optional uint32 _ActType = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_acttype(), output);
  }

  // optional string _NativeUrl = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nativeurl().data(), this->_nativeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._NativeUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_nativeurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizServiceMenuButton)
}

::google::protobuf::uint8* BizServiceMenuButton::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizServiceMenuButton)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _Id = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_id(), target);
  }

  // optional uint32 _Type = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_type(), target);
  }

  // optional string _Name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_name().data(), this->_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_name(), target);
  }

  // optional string _Key = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_key().data(), this->_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_key(), target);
  }

  // optional string _Value = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_value().data(), this->_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_value(), target);
  }

  // repeated .MMPro.micromsg.BizServiceMenuButton _SubButtonList = 6;
  for (unsigned int i = 0, n = this->_subbuttonlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->_subbuttonlist(i), deterministic, target);
  }

  // optional uint32 _ActType = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_acttype(), target);
  }

  // optional string _NativeUrl = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nativeurl().data(), this->_nativeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizServiceMenuButton._NativeUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->_nativeurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizServiceMenuButton)
  return target;
}

size_t BizServiceMenuButton::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizServiceMenuButton)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizServiceMenuButton _SubButtonList = 6;
  {
    unsigned int count = this->_subbuttonlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_subbuttonlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string _Name = 3;
    if (has__name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_name());
    }

    // optional string _Key = 4;
    if (has__key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_key());
    }

    // optional string _Value = 5;
    if (has__value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_value());
    }

    // optional string _NativeUrl = 8;
    if (has__nativeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nativeurl());
    }

    // optional uint32 _Id = 1;
    if (has__id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_id());
    }

    // optional uint32 _Type = 2;
    if (has__type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_type());
    }

    // optional uint32 _ActType = 7;
    if (has__acttype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_acttype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizServiceMenuButton::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizServiceMenuButton)
  GOOGLE_DCHECK_NE(&from, this);
  const BizServiceMenuButton* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizServiceMenuButton>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizServiceMenuButton)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizServiceMenuButton)
    MergeFrom(*source);
  }
}

void BizServiceMenuButton::MergeFrom(const BizServiceMenuButton& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizServiceMenuButton)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _subbuttonlist_.MergeFrom(from._subbuttonlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__name();
      _name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__key();
      _key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__value();
      _value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._value_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__nativeurl();
      _nativeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nativeurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      _id_ = from._id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _type_ = from._type_;
    }
    if (cached_has_bits & 0x00000040u) {
      _acttype_ = from._acttype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizServiceMenuButton::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizServiceMenuButton)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizServiceMenuButton::CopyFrom(const BizServiceMenuButton& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizServiceMenuButton)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizServiceMenuButton::IsInitialized() const {
  return true;
}

void BizServiceMenuButton::Swap(BizServiceMenuButton* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizServiceMenuButton::InternalSwap(BizServiceMenuButton* other) {
  _subbuttonlist_.InternalSwap(&other->_subbuttonlist_);
  _name_.Swap(&other->_name_);
  _key_.Swap(&other->_key_);
  _value_.Swap(&other->_value_);
  _nativeurl_.Swap(&other->_nativeurl_);
  std::swap(_id_, other->_id_);
  std::swap(_type_, other->_type_);
  std::swap(_acttype_, other->_acttype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizServiceMenuButton::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizServiceMenuButton

// optional uint32 _Id = 1;
bool BizServiceMenuButton::has__id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizServiceMenuButton::set_has__id() {
  _has_bits_[0] |= 0x00000010u;
}
void BizServiceMenuButton::clear_has__id() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizServiceMenuButton::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
::google::protobuf::uint32 BizServiceMenuButton::_id() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._Id)
  return _id_;
}
void BizServiceMenuButton::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._Id)
}

// optional uint32 _Type = 2;
bool BizServiceMenuButton::has__type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizServiceMenuButton::set_has__type() {
  _has_bits_[0] |= 0x00000020u;
}
void BizServiceMenuButton::clear_has__type() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizServiceMenuButton::clear__type() {
  _type_ = 0u;
  clear_has__type();
}
::google::protobuf::uint32 BizServiceMenuButton::_type() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._Type)
  return _type_;
}
void BizServiceMenuButton::set__type(::google::protobuf::uint32 value) {
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._Type)
}

// optional string _Name = 3;
bool BizServiceMenuButton::has__name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizServiceMenuButton::set_has__name() {
  _has_bits_[0] |= 0x00000001u;
}
void BizServiceMenuButton::clear_has__name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizServiceMenuButton::clear__name() {
  _name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__name();
}
const ::std::string& BizServiceMenuButton::_name() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._Name)
  return _name_.GetNoArena();
}
void BizServiceMenuButton::set__name(const ::std::string& value) {
  set_has__name();
  _name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._Name)
}
#if LANG_CXX11
void BizServiceMenuButton::set__name(::std::string&& value) {
  set_has__name();
  _name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizServiceMenuButton._Name)
}
#endif
void BizServiceMenuButton::set__name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__name();
  _name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizServiceMenuButton._Name)
}
void BizServiceMenuButton::set__name(const char* value, size_t size) {
  set_has__name();
  _name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizServiceMenuButton._Name)
}
::std::string* BizServiceMenuButton::mutable__name() {
  set_has__name();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenuButton._Name)
  return _name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizServiceMenuButton::release__name() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizServiceMenuButton._Name)
  clear_has__name();
  return _name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizServiceMenuButton::set_allocated__name(::std::string* _name) {
  if (_name != NULL) {
    set_has__name();
  } else {
    clear_has__name();
  }
  _name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _name);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizServiceMenuButton._Name)
}

// optional string _Key = 4;
bool BizServiceMenuButton::has__key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizServiceMenuButton::set_has__key() {
  _has_bits_[0] |= 0x00000002u;
}
void BizServiceMenuButton::clear_has__key() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizServiceMenuButton::clear__key() {
  _key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__key();
}
const ::std::string& BizServiceMenuButton::_key() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._Key)
  return _key_.GetNoArena();
}
void BizServiceMenuButton::set__key(const ::std::string& value) {
  set_has__key();
  _key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._Key)
}
#if LANG_CXX11
void BizServiceMenuButton::set__key(::std::string&& value) {
  set_has__key();
  _key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizServiceMenuButton._Key)
}
#endif
void BizServiceMenuButton::set__key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__key();
  _key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizServiceMenuButton._Key)
}
void BizServiceMenuButton::set__key(const char* value, size_t size) {
  set_has__key();
  _key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizServiceMenuButton._Key)
}
::std::string* BizServiceMenuButton::mutable__key() {
  set_has__key();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenuButton._Key)
  return _key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizServiceMenuButton::release__key() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizServiceMenuButton._Key)
  clear_has__key();
  return _key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizServiceMenuButton::set_allocated__key(::std::string* _key) {
  if (_key != NULL) {
    set_has__key();
  } else {
    clear_has__key();
  }
  _key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _key);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizServiceMenuButton._Key)
}

// optional string _Value = 5;
bool BizServiceMenuButton::has__value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizServiceMenuButton::set_has__value() {
  _has_bits_[0] |= 0x00000004u;
}
void BizServiceMenuButton::clear_has__value() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizServiceMenuButton::clear__value() {
  _value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__value();
}
const ::std::string& BizServiceMenuButton::_value() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._Value)
  return _value_.GetNoArena();
}
void BizServiceMenuButton::set__value(const ::std::string& value) {
  set_has__value();
  _value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._Value)
}
#if LANG_CXX11
void BizServiceMenuButton::set__value(::std::string&& value) {
  set_has__value();
  _value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizServiceMenuButton._Value)
}
#endif
void BizServiceMenuButton::set__value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__value();
  _value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizServiceMenuButton._Value)
}
void BizServiceMenuButton::set__value(const char* value, size_t size) {
  set_has__value();
  _value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizServiceMenuButton._Value)
}
::std::string* BizServiceMenuButton::mutable__value() {
  set_has__value();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenuButton._Value)
  return _value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizServiceMenuButton::release__value() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizServiceMenuButton._Value)
  clear_has__value();
  return _value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizServiceMenuButton::set_allocated__value(::std::string* _value) {
  if (_value != NULL) {
    set_has__value();
  } else {
    clear_has__value();
  }
  _value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _value);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizServiceMenuButton._Value)
}

// repeated .MMPro.micromsg.BizServiceMenuButton _SubButtonList = 6;
int BizServiceMenuButton::_subbuttonlist_size() const {
  return _subbuttonlist_.size();
}
void BizServiceMenuButton::clear__subbuttonlist() {
  _subbuttonlist_.Clear();
}
const ::MMPro::micromsg::BizServiceMenuButton& BizServiceMenuButton::_subbuttonlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._SubButtonList)
  return _subbuttonlist_.Get(index);
}
::MMPro::micromsg::BizServiceMenuButton* BizServiceMenuButton::mutable__subbuttonlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenuButton._SubButtonList)
  return _subbuttonlist_.Mutable(index);
}
::MMPro::micromsg::BizServiceMenuButton* BizServiceMenuButton::add__subbuttonlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizServiceMenuButton._SubButtonList)
  return _subbuttonlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizServiceMenuButton >*
BizServiceMenuButton::mutable__subbuttonlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizServiceMenuButton._SubButtonList)
  return &_subbuttonlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizServiceMenuButton >&
BizServiceMenuButton::_subbuttonlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizServiceMenuButton._SubButtonList)
  return _subbuttonlist_;
}

// optional uint32 _ActType = 7;
bool BizServiceMenuButton::has__acttype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BizServiceMenuButton::set_has__acttype() {
  _has_bits_[0] |= 0x00000040u;
}
void BizServiceMenuButton::clear_has__acttype() {
  _has_bits_[0] &= ~0x00000040u;
}
void BizServiceMenuButton::clear__acttype() {
  _acttype_ = 0u;
  clear_has__acttype();
}
::google::protobuf::uint32 BizServiceMenuButton::_acttype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._ActType)
  return _acttype_;
}
void BizServiceMenuButton::set__acttype(::google::protobuf::uint32 value) {
  set_has__acttype();
  _acttype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._ActType)
}

// optional string _NativeUrl = 8;
bool BizServiceMenuButton::has__nativeurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizServiceMenuButton::set_has__nativeurl() {
  _has_bits_[0] |= 0x00000008u;
}
void BizServiceMenuButton::clear_has__nativeurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizServiceMenuButton::clear__nativeurl() {
  _nativeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nativeurl();
}
const ::std::string& BizServiceMenuButton::_nativeurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
  return _nativeurl_.GetNoArena();
}
void BizServiceMenuButton::set__nativeurl(const ::std::string& value) {
  set_has__nativeurl();
  _nativeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
}
#if LANG_CXX11
void BizServiceMenuButton::set__nativeurl(::std::string&& value) {
  set_has__nativeurl();
  _nativeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
}
#endif
void BizServiceMenuButton::set__nativeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nativeurl();
  _nativeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
}
void BizServiceMenuButton::set__nativeurl(const char* value, size_t size) {
  set_has__nativeurl();
  _nativeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
}
::std::string* BizServiceMenuButton::mutable__nativeurl() {
  set_has__nativeurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
  return _nativeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizServiceMenuButton::release__nativeurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
  clear_has__nativeurl();
  return _nativeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizServiceMenuButton::set_allocated__nativeurl(::std::string* _nativeurl) {
  if (_nativeurl != NULL) {
    set_has__nativeurl();
  } else {
    clear_has__nativeurl();
  }
  _nativeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nativeurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizServiceMenuButton._NativeUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizServiceMenu::kUinFieldNumber;
const int BizServiceMenu::kInteractiveModeFieldNumber;
const int BizServiceMenu::kUpdateTimeFieldNumber;
const int BizServiceMenu::kButtonListFieldNumber;
const int BizServiceMenu::kVersionFieldNumber;
const int BizServiceMenu::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizServiceMenu::BizServiceMenu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizServiceMenu)
}
BizServiceMenu::BizServiceMenu(const BizServiceMenu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _buttonlist_(from._buttonlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_uin_, &from._uin_,
    reinterpret_cast<char*>(&_type_) -
    reinterpret_cast<char*>(&_uin_) + sizeof(_type_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizServiceMenu)
}

void BizServiceMenu::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_uin_, 0, reinterpret_cast<char*>(&_type_) -
    reinterpret_cast<char*>(&_uin_) + sizeof(_type_));
}

BizServiceMenu::~BizServiceMenu() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizServiceMenu)
  SharedDtor();
}

void BizServiceMenu::SharedDtor() {
}

void BizServiceMenu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizServiceMenu::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizServiceMenu& BizServiceMenu::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizServiceMenu* BizServiceMenu::New(::google::protobuf::Arena* arena) const {
  BizServiceMenu* n = new BizServiceMenu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizServiceMenu::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizServiceMenu)
  _buttonlist_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&_uin_, 0, reinterpret_cast<char*>(&_type_) -
      reinterpret_cast<char*>(&_uin_) + sizeof(_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizServiceMenu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizServiceMenu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _Uin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__uin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_uin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _InteractiveMode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__interactivemode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_interactivemode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _UpdateTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__updatetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizServiceMenuButton _ButtonList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__buttonlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _Type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has__type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizServiceMenu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizServiceMenu)
  return false;
#undef DO_
}

void BizServiceMenu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizServiceMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _Uin = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_uin(), output);
  }

  // optional uint32 _InteractiveMode = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_interactivemode(), output);
  }

  // optional uint32 _UpdateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_updatetime(), output);
  }

  // repeated .MMPro.micromsg.BizServiceMenuButton _ButtonList = 4;
  for (unsigned int i = 0, n = this->_buttonlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_buttonlist(i), output);
  }

  // optional uint32 _Version = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_version(), output);
  }

  // optional uint32 _Type = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizServiceMenu)
}

::google::protobuf::uint8* BizServiceMenu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizServiceMenu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _Uin = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_uin(), target);
  }

  // optional uint32 _InteractiveMode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_interactivemode(), target);
  }

  // optional uint32 _UpdateTime = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_updatetime(), target);
  }

  // repeated .MMPro.micromsg.BizServiceMenuButton _ButtonList = 4;
  for (unsigned int i = 0, n = this->_buttonlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->_buttonlist(i), deterministic, target);
  }

  // optional uint32 _Version = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_version(), target);
  }

  // optional uint32 _Type = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizServiceMenu)
  return target;
}

size_t BizServiceMenu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizServiceMenu)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizServiceMenuButton _ButtonList = 4;
  {
    unsigned int count = this->_buttonlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_buttonlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 _Uin = 1;
    if (has__uin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_uin());
    }

    // optional uint32 _InteractiveMode = 2;
    if (has__interactivemode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_interactivemode());
    }

    // optional uint32 _UpdateTime = 3;
    if (has__updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_updatetime());
    }

    // optional uint32 _Version = 5;
    if (has__version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_version());
    }

    // optional uint32 _Type = 6;
    if (has__type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizServiceMenu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizServiceMenu)
  GOOGLE_DCHECK_NE(&from, this);
  const BizServiceMenu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizServiceMenu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizServiceMenu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizServiceMenu)
    MergeFrom(*source);
  }
}

void BizServiceMenu::MergeFrom(const BizServiceMenu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizServiceMenu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _buttonlist_.MergeFrom(from._buttonlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      _uin_ = from._uin_;
    }
    if (cached_has_bits & 0x00000002u) {
      _interactivemode_ = from._interactivemode_;
    }
    if (cached_has_bits & 0x00000004u) {
      _updatetime_ = from._updatetime_;
    }
    if (cached_has_bits & 0x00000008u) {
      _version_ = from._version_;
    }
    if (cached_has_bits & 0x00000010u) {
      _type_ = from._type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizServiceMenu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizServiceMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizServiceMenu::CopyFrom(const BizServiceMenu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizServiceMenu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizServiceMenu::IsInitialized() const {
  return true;
}

void BizServiceMenu::Swap(BizServiceMenu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizServiceMenu::InternalSwap(BizServiceMenu* other) {
  _buttonlist_.InternalSwap(&other->_buttonlist_);
  std::swap(_uin_, other->_uin_);
  std::swap(_interactivemode_, other->_interactivemode_);
  std::swap(_updatetime_, other->_updatetime_);
  std::swap(_version_, other->_version_);
  std::swap(_type_, other->_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizServiceMenu::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizServiceMenu

// optional uint32 _Uin = 1;
bool BizServiceMenu::has__uin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizServiceMenu::set_has__uin() {
  _has_bits_[0] |= 0x00000001u;
}
void BizServiceMenu::clear_has__uin() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizServiceMenu::clear__uin() {
  _uin_ = 0u;
  clear_has__uin();
}
::google::protobuf::uint32 BizServiceMenu::_uin() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._Uin)
  return _uin_;
}
void BizServiceMenu::set__uin(::google::protobuf::uint32 value) {
  set_has__uin();
  _uin_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenu._Uin)
}

// optional uint32 _InteractiveMode = 2;
bool BizServiceMenu::has__interactivemode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizServiceMenu::set_has__interactivemode() {
  _has_bits_[0] |= 0x00000002u;
}
void BizServiceMenu::clear_has__interactivemode() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizServiceMenu::clear__interactivemode() {
  _interactivemode_ = 0u;
  clear_has__interactivemode();
}
::google::protobuf::uint32 BizServiceMenu::_interactivemode() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._InteractiveMode)
  return _interactivemode_;
}
void BizServiceMenu::set__interactivemode(::google::protobuf::uint32 value) {
  set_has__interactivemode();
  _interactivemode_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenu._InteractiveMode)
}

// optional uint32 _UpdateTime = 3;
bool BizServiceMenu::has__updatetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizServiceMenu::set_has__updatetime() {
  _has_bits_[0] |= 0x00000004u;
}
void BizServiceMenu::clear_has__updatetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizServiceMenu::clear__updatetime() {
  _updatetime_ = 0u;
  clear_has__updatetime();
}
::google::protobuf::uint32 BizServiceMenu::_updatetime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._UpdateTime)
  return _updatetime_;
}
void BizServiceMenu::set__updatetime(::google::protobuf::uint32 value) {
  set_has__updatetime();
  _updatetime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenu._UpdateTime)
}

// repeated .MMPro.micromsg.BizServiceMenuButton _ButtonList = 4;
int BizServiceMenu::_buttonlist_size() const {
  return _buttonlist_.size();
}
void BizServiceMenu::clear__buttonlist() {
  _buttonlist_.Clear();
}
const ::MMPro::micromsg::BizServiceMenuButton& BizServiceMenu::_buttonlist(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._ButtonList)
  return _buttonlist_.Get(index);
}
::MMPro::micromsg::BizServiceMenuButton* BizServiceMenu::mutable__buttonlist(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceMenu._ButtonList)
  return _buttonlist_.Mutable(index);
}
::MMPro::micromsg::BizServiceMenuButton* BizServiceMenu::add__buttonlist() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizServiceMenu._ButtonList)
  return _buttonlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizServiceMenuButton >*
BizServiceMenu::mutable__buttonlist() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizServiceMenu._ButtonList)
  return &_buttonlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizServiceMenuButton >&
BizServiceMenu::_buttonlist() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizServiceMenu._ButtonList)
  return _buttonlist_;
}

// optional uint32 _Version = 5;
bool BizServiceMenu::has__version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizServiceMenu::set_has__version() {
  _has_bits_[0] |= 0x00000008u;
}
void BizServiceMenu::clear_has__version() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizServiceMenu::clear__version() {
  _version_ = 0u;
  clear_has__version();
}
::google::protobuf::uint32 BizServiceMenu::_version() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._Version)
  return _version_;
}
void BizServiceMenu::set__version(::google::protobuf::uint32 value) {
  set_has__version();
  _version_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenu._Version)
}

// optional uint32 _Type = 6;
bool BizServiceMenu::has__type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizServiceMenu::set_has__type() {
  _has_bits_[0] |= 0x00000010u;
}
void BizServiceMenu::clear_has__type() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizServiceMenu::clear__type() {
  _type_ = 0u;
  clear_has__type();
}
::google::protobuf::uint32 BizServiceMenu::_type() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceMenu._Type)
  return _type_;
}
void BizServiceMenu::set__type(::google::protobuf::uint32 value) {
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizServiceMenu._Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizServiceInfo::kMenuInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizServiceInfo::BizServiceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizServiceInfo)
}
BizServiceInfo::BizServiceInfo(const BizServiceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has__menuinfo()) {
    _menuinfo_ = new ::MMPro::micromsg::BizServiceMenu(*from._menuinfo_);
  } else {
    _menuinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizServiceInfo)
}

void BizServiceInfo::SharedCtor() {
  _cached_size_ = 0;
  _menuinfo_ = NULL;
}

BizServiceInfo::~BizServiceInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizServiceInfo)
  SharedDtor();
}

void BizServiceInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete _menuinfo_;
  }
}

void BizServiceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizServiceInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizServiceInfo& BizServiceInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizServiceInfo* BizServiceInfo::New(::google::protobuf::Arena* arena) const {
  BizServiceInfo* n = new BizServiceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizServiceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizServiceInfo)
  if (has__menuinfo()) {
    GOOGLE_DCHECK(_menuinfo_ != NULL);
    _menuinfo_->::MMPro::micromsg::BizServiceMenu::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizServiceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizServiceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MMPro.micromsg.BizServiceMenu _MenuInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__menuinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizServiceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizServiceInfo)
  return false;
#undef DO_
}

void BizServiceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizServiceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizServiceMenu _MenuInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_menuinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizServiceInfo)
}

::google::protobuf::uint8* BizServiceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizServiceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .MMPro.micromsg.BizServiceMenu _MenuInfo = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_menuinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizServiceInfo)
  return target;
}

size_t BizServiceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizServiceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .MMPro.micromsg.BizServiceMenu _MenuInfo = 1;
  if (has__menuinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_menuinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizServiceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizServiceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizServiceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizServiceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizServiceInfo)
    MergeFrom(*source);
  }
}

void BizServiceInfo::MergeFrom(const BizServiceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizServiceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__menuinfo()) {
    mutable__menuinfo()->::MMPro::micromsg::BizServiceMenu::MergeFrom(from._menuinfo());
  }
}

void BizServiceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizServiceInfo::CopyFrom(const BizServiceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizServiceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizServiceInfo::IsInitialized() const {
  return true;
}

void BizServiceInfo::Swap(BizServiceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizServiceInfo::InternalSwap(BizServiceInfo* other) {
  std::swap(_menuinfo_, other->_menuinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizServiceInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizServiceInfo

// optional .MMPro.micromsg.BizServiceMenu _MenuInfo = 1;
bool BizServiceInfo::has__menuinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizServiceInfo::set_has__menuinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void BizServiceInfo::clear_has__menuinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizServiceInfo::clear__menuinfo() {
  if (_menuinfo_ != NULL) _menuinfo_->::MMPro::micromsg::BizServiceMenu::Clear();
  clear_has__menuinfo();
}
const ::MMPro::micromsg::BizServiceMenu& BizServiceInfo::_menuinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizServiceInfo._MenuInfo)
  return _menuinfo_ != NULL ? *_menuinfo_
                         : *::MMPro::micromsg::BizServiceMenu::internal_default_instance();
}
::MMPro::micromsg::BizServiceMenu* BizServiceInfo::mutable__menuinfo() {
  set_has__menuinfo();
  if (_menuinfo_ == NULL) {
    _menuinfo_ = new ::MMPro::micromsg::BizServiceMenu;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizServiceInfo._MenuInfo)
  return _menuinfo_;
}
::MMPro::micromsg::BizServiceMenu* BizServiceInfo::release__menuinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizServiceInfo._MenuInfo)
  clear_has__menuinfo();
  ::MMPro::micromsg::BizServiceMenu* temp = _menuinfo_;
  _menuinfo_ = NULL;
  return temp;
}
void BizServiceInfo::set_allocated__menuinfo(::MMPro::micromsg::BizServiceMenu* _menuinfo) {
  delete _menuinfo_;
  _menuinfo_ = _menuinfo;
  if (_menuinfo) {
    set_has__menuinfo();
  } else {
    clear_has__menuinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizServiceInfo._MenuInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizTopic::kTopicNameFieldNumber;
const int BizTopic::kTopicDescFieldNumber;
const int BizTopic::kTopicUrlFieldNumber;
const int BizTopic::kTopicIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizTopic::BizTopic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizTopic)
}
BizTopic::BizTopic(const BizTopic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _topicname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__topicname()) {
    _topicname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicname_);
  }
  _topicdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__topicdesc()) {
    _topicdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicdesc_);
  }
  _topicurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__topicurl()) {
    _topicurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicurl_);
  }
  _topicid_ = from._topicid_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizTopic)
}

void BizTopic::SharedCtor() {
  _cached_size_ = 0;
  _topicname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _topicdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _topicurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _topicid_ = GOOGLE_ULONGLONG(0);
}

BizTopic::~BizTopic() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizTopic)
  SharedDtor();
}

void BizTopic::SharedDtor() {
  _topicname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _topicdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _topicurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizTopic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizTopic::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizTopic& BizTopic::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizTopic* BizTopic::New(::google::protobuf::Arena* arena) const {
  BizTopic* n = new BizTopic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizTopic)
  if (_has_bits_[0 / 32] & 7u) {
    if (has__topicname()) {
      GOOGLE_DCHECK(!_topicname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_topicname_.UnsafeRawStringPointer())->clear();
    }
    if (has__topicdesc()) {
      GOOGLE_DCHECK(!_topicdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_topicdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__topicurl()) {
      GOOGLE_DCHECK(!_topicurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_topicurl_.UnsafeRawStringPointer())->clear();
    }
  }
  _topicid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizTopic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizTopic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _TopicName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__topicname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_topicname().data(), this->_topicname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizTopic._TopicName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _TopicDesc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__topicdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_topicdesc().data(), this->_topicdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizTopic._TopicDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _TopicUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__topicurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_topicurl().data(), this->_topicurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizTopic._TopicUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 _TopicID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has__topicid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_topicid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizTopic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizTopic)
  return false;
#undef DO_
}

void BizTopic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _TopicName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicname().data(), this->_topicname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_topicname(), output);
  }

  // optional string _TopicDesc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicdesc().data(), this->_topicdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_topicdesc(), output);
  }

  // optional string _TopicUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicurl().data(), this->_topicurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_topicurl(), output);
  }

  // optional uint64 _TopicID = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->_topicid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizTopic)
}

::google::protobuf::uint8* BizTopic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _TopicName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicname().data(), this->_topicname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_topicname(), target);
  }

  // optional string _TopicDesc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicdesc().data(), this->_topicdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_topicdesc(), target);
  }

  // optional string _TopicUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_topicurl().data(), this->_topicurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopic._TopicUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_topicurl(), target);
  }

  // optional uint64 _TopicID = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->_topicid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizTopic)
  return target;
}

size_t BizTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizTopic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string _TopicName = 1;
    if (has__topicname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_topicname());
    }

    // optional string _TopicDesc = 2;
    if (has__topicdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_topicdesc());
    }

    // optional string _TopicUrl = 3;
    if (has__topicurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_topicurl());
    }

    // optional uint64 _TopicID = 4;
    if (has__topicid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->_topicid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizTopic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizTopic)
  GOOGLE_DCHECK_NE(&from, this);
  const BizTopic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizTopic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizTopic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizTopic)
    MergeFrom(*source);
  }
}

void BizTopic::MergeFrom(const BizTopic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizTopic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__topicname();
      _topicname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__topicdesc();
      _topicdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicdesc_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__topicurl();
      _topicurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._topicurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      _topicid_ = from._topicid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizTopic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizTopic::CopyFrom(const BizTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizTopic::IsInitialized() const {
  return true;
}

void BizTopic::Swap(BizTopic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizTopic::InternalSwap(BizTopic* other) {
  _topicname_.Swap(&other->_topicname_);
  _topicdesc_.Swap(&other->_topicdesc_);
  _topicurl_.Swap(&other->_topicurl_);
  std::swap(_topicid_, other->_topicid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizTopic::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizTopic

// optional string _TopicName = 1;
bool BizTopic::has__topicname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizTopic::set_has__topicname() {
  _has_bits_[0] |= 0x00000001u;
}
void BizTopic::clear_has__topicname() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizTopic::clear__topicname() {
  _topicname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__topicname();
}
const ::std::string& BizTopic::_topicname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopic._TopicName)
  return _topicname_.GetNoArena();
}
void BizTopic::set__topicname(const ::std::string& value) {
  set_has__topicname();
  _topicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTopic._TopicName)
}
#if LANG_CXX11
void BizTopic::set__topicname(::std::string&& value) {
  set_has__topicname();
  _topicname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizTopic._TopicName)
}
#endif
void BizTopic::set__topicname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__topicname();
  _topicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizTopic._TopicName)
}
void BizTopic::set__topicname(const char* value, size_t size) {
  set_has__topicname();
  _topicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizTopic._TopicName)
}
::std::string* BizTopic::mutable__topicname() {
  set_has__topicname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTopic._TopicName)
  return _topicname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizTopic::release__topicname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizTopic._TopicName)
  clear_has__topicname();
  return _topicname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizTopic::set_allocated__topicname(::std::string* _topicname) {
  if (_topicname != NULL) {
    set_has__topicname();
  } else {
    clear_has__topicname();
  }
  _topicname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _topicname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizTopic._TopicName)
}

// optional string _TopicDesc = 2;
bool BizTopic::has__topicdesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizTopic::set_has__topicdesc() {
  _has_bits_[0] |= 0x00000002u;
}
void BizTopic::clear_has__topicdesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizTopic::clear__topicdesc() {
  _topicdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__topicdesc();
}
const ::std::string& BizTopic::_topicdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopic._TopicDesc)
  return _topicdesc_.GetNoArena();
}
void BizTopic::set__topicdesc(const ::std::string& value) {
  set_has__topicdesc();
  _topicdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTopic._TopicDesc)
}
#if LANG_CXX11
void BizTopic::set__topicdesc(::std::string&& value) {
  set_has__topicdesc();
  _topicdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizTopic._TopicDesc)
}
#endif
void BizTopic::set__topicdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__topicdesc();
  _topicdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizTopic._TopicDesc)
}
void BizTopic::set__topicdesc(const char* value, size_t size) {
  set_has__topicdesc();
  _topicdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizTopic._TopicDesc)
}
::std::string* BizTopic::mutable__topicdesc() {
  set_has__topicdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTopic._TopicDesc)
  return _topicdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizTopic::release__topicdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizTopic._TopicDesc)
  clear_has__topicdesc();
  return _topicdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizTopic::set_allocated__topicdesc(::std::string* _topicdesc) {
  if (_topicdesc != NULL) {
    set_has__topicdesc();
  } else {
    clear_has__topicdesc();
  }
  _topicdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _topicdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizTopic._TopicDesc)
}

// optional string _TopicUrl = 3;
bool BizTopic::has__topicurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizTopic::set_has__topicurl() {
  _has_bits_[0] |= 0x00000004u;
}
void BizTopic::clear_has__topicurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizTopic::clear__topicurl() {
  _topicurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__topicurl();
}
const ::std::string& BizTopic::_topicurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopic._TopicUrl)
  return _topicurl_.GetNoArena();
}
void BizTopic::set__topicurl(const ::std::string& value) {
  set_has__topicurl();
  _topicurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTopic._TopicUrl)
}
#if LANG_CXX11
void BizTopic::set__topicurl(::std::string&& value) {
  set_has__topicurl();
  _topicurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizTopic._TopicUrl)
}
#endif
void BizTopic::set__topicurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__topicurl();
  _topicurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizTopic._TopicUrl)
}
void BizTopic::set__topicurl(const char* value, size_t size) {
  set_has__topicurl();
  _topicurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizTopic._TopicUrl)
}
::std::string* BizTopic::mutable__topicurl() {
  set_has__topicurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTopic._TopicUrl)
  return _topicurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizTopic::release__topicurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizTopic._TopicUrl)
  clear_has__topicurl();
  return _topicurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizTopic::set_allocated__topicurl(::std::string* _topicurl) {
  if (_topicurl != NULL) {
    set_has__topicurl();
  } else {
    clear_has__topicurl();
  }
  _topicurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _topicurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizTopic._TopicUrl)
}

// optional uint64 _TopicID = 4;
bool BizTopic::has__topicid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizTopic::set_has__topicid() {
  _has_bits_[0] |= 0x00000008u;
}
void BizTopic::clear_has__topicid() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizTopic::clear__topicid() {
  _topicid_ = GOOGLE_ULONGLONG(0);
  clear_has__topicid();
}
::google::protobuf::uint64 BizTopic::_topicid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopic._TopicID)
  return _topicid_;
}
void BizTopic::set__topicid(::google::protobuf::uint64 value) {
  set_has__topicid();
  _topicid_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTopic._TopicID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizTopicList::kTitleFieldNumber;
const int BizTopicList::kTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizTopicList::BizTopicList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizTopicList)
}
BizTopicList::BizTopicList(const BizTopicList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _topic_(from._topic_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__title()) {
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizTopicList)
}

void BizTopicList::SharedCtor() {
  _cached_size_ = 0;
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BizTopicList::~BizTopicList() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizTopicList)
  SharedDtor();
}

void BizTopicList::SharedDtor() {
  _title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizTopicList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizTopicList::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizTopicList& BizTopicList::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizTopicList* BizTopicList::New(::google::protobuf::Arena* arena) const {
  BizTopicList* n = new BizTopicList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizTopicList::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizTopicList)
  _topic_.Clear();
  if (has__title()) {
    GOOGLE_DCHECK(!_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_title_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizTopicList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizTopicList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_title().data(), this->_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizTopicList._Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizTopic _Topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__topic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizTopicList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizTopicList)
  return false;
#undef DO_
}

void BizTopicList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizTopicList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopicList._Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_title(), output);
  }

  // repeated .MMPro.micromsg.BizTopic _Topic = 2;
  for (unsigned int i = 0, n = this->_topic_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_topic(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizTopicList)
}

::google::protobuf::uint8* BizTopicList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizTopicList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizTopicList._Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_title(), target);
  }

  // repeated .MMPro.micromsg.BizTopic _Topic = 2;
  for (unsigned int i = 0, n = this->_topic_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->_topic(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizTopicList)
  return target;
}

size_t BizTopicList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizTopicList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.BizTopic _Topic = 2;
  {
    unsigned int count = this->_topic_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_topic(i));
    }
  }

  // optional string _Title = 1;
  if (has__title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizTopicList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizTopicList)
  GOOGLE_DCHECK_NE(&from, this);
  const BizTopicList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizTopicList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizTopicList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizTopicList)
    MergeFrom(*source);
  }
}

void BizTopicList::MergeFrom(const BizTopicList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizTopicList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _topic_.MergeFrom(from._topic_);
  if (from.has__title()) {
    set_has__title();
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
}

void BizTopicList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizTopicList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizTopicList::CopyFrom(const BizTopicList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizTopicList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizTopicList::IsInitialized() const {
  return true;
}

void BizTopicList::Swap(BizTopicList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizTopicList::InternalSwap(BizTopicList* other) {
  _topic_.InternalSwap(&other->_topic_);
  _title_.Swap(&other->_title_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizTopicList::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizTopicList

// optional string _Title = 1;
bool BizTopicList::has__title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizTopicList::set_has__title() {
  _has_bits_[0] |= 0x00000001u;
}
void BizTopicList::clear_has__title() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizTopicList::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
const ::std::string& BizTopicList::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopicList._Title)
  return _title_.GetNoArena();
}
void BizTopicList::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizTopicList._Title)
}
#if LANG_CXX11
void BizTopicList::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizTopicList._Title)
}
#endif
void BizTopicList::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizTopicList._Title)
}
void BizTopicList::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizTopicList._Title)
}
::std::string* BizTopicList::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTopicList._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizTopicList::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizTopicList._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizTopicList::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizTopicList._Title)
}

// repeated .MMPro.micromsg.BizTopic _Topic = 2;
int BizTopicList::_topic_size() const {
  return _topic_.size();
}
void BizTopicList::clear__topic() {
  _topic_.Clear();
}
const ::MMPro::micromsg::BizTopic& BizTopicList::_topic(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizTopicList._Topic)
  return _topic_.Get(index);
}
::MMPro::micromsg::BizTopic* BizTopicList::mutable__topic(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizTopicList._Topic)
  return _topic_.Mutable(index);
}
::MMPro::micromsg::BizTopic* BizTopicList::add__topic() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizTopicList._Topic)
  return _topic_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizTopic >*
BizTopicList::mutable__topic() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizTopicList._Topic)
  return &_topic_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizTopic >&
BizTopicList::_topic() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizTopicList._Topic)
  return _topic_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizVideoFinderInfo::kUserNameFieldNumber;
const int BizVideoFinderInfo::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizVideoFinderInfo::BizVideoFinderInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizVideoFinderInfo)
}
BizVideoFinderInfo::BizVideoFinderInfo(const BizVideoFinderInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__username()) {
    _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
  }
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__nickname()) {
    _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizVideoFinderInfo)
}

void BizVideoFinderInfo::SharedCtor() {
  _cached_size_ = 0;
  _username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BizVideoFinderInfo::~BizVideoFinderInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizVideoFinderInfo)
  SharedDtor();
}

void BizVideoFinderInfo::SharedDtor() {
  _username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizVideoFinderInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizVideoFinderInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizVideoFinderInfo& BizVideoFinderInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizVideoFinderInfo* BizVideoFinderInfo::New(::google::protobuf::Arena* arena) const {
  BizVideoFinderInfo* n = new BizVideoFinderInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizVideoFinderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizVideoFinderInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__username()) {
      GOOGLE_DCHECK(!_username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_username_.UnsafeRawStringPointer())->clear();
    }
    if (has__nickname()) {
      GOOGLE_DCHECK(!_nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_nickname_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizVideoFinderInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizVideoFinderInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizVideoFinderInfo._UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_nickname().data(), this->_nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizVideoFinderInfo._NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizVideoFinderInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizVideoFinderInfo)
  return false;
#undef DO_
}

void BizVideoFinderInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizVideoFinderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVideoFinderInfo._UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_username(), output);
  }

  // optional string _NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVideoFinderInfo._NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizVideoFinderInfo)
}

::google::protobuf::uint8* BizVideoFinderInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizVideoFinderInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVideoFinderInfo._UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_username(), target);
  }

  // optional string _NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_nickname().data(), this->_nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizVideoFinderInfo._NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizVideoFinderInfo)
  return target;
}

size_t BizVideoFinderInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizVideoFinderInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string _UserName = 1;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional string _NickName = 2;
    if (has__nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_nickname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizVideoFinderInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizVideoFinderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizVideoFinderInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizVideoFinderInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizVideoFinderInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizVideoFinderInfo)
    MergeFrom(*source);
  }
}

void BizVideoFinderInfo::MergeFrom(const BizVideoFinderInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizVideoFinderInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__username();
      _username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__nickname();
      _nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._nickname_);
    }
  }
}

void BizVideoFinderInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizVideoFinderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizVideoFinderInfo::CopyFrom(const BizVideoFinderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizVideoFinderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizVideoFinderInfo::IsInitialized() const {
  return true;
}

void BizVideoFinderInfo::Swap(BizVideoFinderInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizVideoFinderInfo::InternalSwap(BizVideoFinderInfo* other) {
  _username_.Swap(&other->_username_);
  _nickname_.Swap(&other->_nickname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizVideoFinderInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizVideoFinderInfo

// optional string _UserName = 1;
bool BizVideoFinderInfo::has__username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizVideoFinderInfo::set_has__username() {
  _has_bits_[0] |= 0x00000001u;
}
void BizVideoFinderInfo::clear_has__username() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizVideoFinderInfo::clear__username() {
  _username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__username();
}
const ::std::string& BizVideoFinderInfo::_username() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVideoFinderInfo._UserName)
  return _username_.GetNoArena();
}
void BizVideoFinderInfo::set__username(const ::std::string& value) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVideoFinderInfo._UserName)
}
#if LANG_CXX11
void BizVideoFinderInfo::set__username(::std::string&& value) {
  set_has__username();
  _username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizVideoFinderInfo._UserName)
}
#endif
void BizVideoFinderInfo::set__username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizVideoFinderInfo._UserName)
}
void BizVideoFinderInfo::set__username(const char* value, size_t size) {
  set_has__username();
  _username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizVideoFinderInfo._UserName)
}
::std::string* BizVideoFinderInfo::mutable__username() {
  set_has__username();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizVideoFinderInfo._UserName)
  return _username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizVideoFinderInfo::release__username() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizVideoFinderInfo._UserName)
  clear_has__username();
  return _username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizVideoFinderInfo::set_allocated__username(::std::string* _username) {
  if (_username != NULL) {
    set_has__username();
  } else {
    clear_has__username();
  }
  _username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _username);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizVideoFinderInfo._UserName)
}

// optional string _NickName = 2;
bool BizVideoFinderInfo::has__nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizVideoFinderInfo::set_has__nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void BizVideoFinderInfo::clear_has__nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizVideoFinderInfo::clear__nickname() {
  _nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__nickname();
}
const ::std::string& BizVideoFinderInfo::_nickname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizVideoFinderInfo._NickName)
  return _nickname_.GetNoArena();
}
void BizVideoFinderInfo::set__nickname(const ::std::string& value) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizVideoFinderInfo._NickName)
}
#if LANG_CXX11
void BizVideoFinderInfo::set__nickname(::std::string&& value) {
  set_has__nickname();
  _nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizVideoFinderInfo._NickName)
}
#endif
void BizVideoFinderInfo::set__nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizVideoFinderInfo._NickName)
}
void BizVideoFinderInfo::set__nickname(const char* value, size_t size) {
  set_has__nickname();
  _nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizVideoFinderInfo._NickName)
}
::std::string* BizVideoFinderInfo::mutable__nickname() {
  set_has__nickname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizVideoFinderInfo._NickName)
  return _nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizVideoFinderInfo::release__nickname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizVideoFinderInfo._NickName)
  clear_has__nickname();
  return _nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizVideoFinderInfo::set_allocated__nickname(::std::string* _nickname) {
  if (_nickname != NULL) {
    set_has__nickname();
  } else {
    clear_has__nickname();
  }
  _nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _nickname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizVideoFinderInfo._NickName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FinderLiveNoticeInfo::kStartTimeFieldNumber;
const int FinderLiveNoticeInfo::kReserveStatusFieldNumber;
const int FinderLiveNoticeInfo::kIntroductionFieldNumber;
const int FinderLiveNoticeInfo::kNoticeIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FinderLiveNoticeInfo::FinderLiveNoticeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.FinderLiveNoticeInfo)
}
FinderLiveNoticeInfo::FinderLiveNoticeInfo(const FinderLiveNoticeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__introduction()) {
    _introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._introduction_);
  }
  _noticeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__noticeid()) {
    _noticeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._noticeid_);
  }
  ::memcpy(&_starttime_, &from._starttime_,
    reinterpret_cast<char*>(&_reservestatus_) -
    reinterpret_cast<char*>(&_starttime_) + sizeof(_reservestatus_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.FinderLiveNoticeInfo)
}

void FinderLiveNoticeInfo::SharedCtor() {
  _cached_size_ = 0;
  _introduction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _noticeid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_starttime_, 0, reinterpret_cast<char*>(&_reservestatus_) -
    reinterpret_cast<char*>(&_starttime_) + sizeof(_reservestatus_));
}

FinderLiveNoticeInfo::~FinderLiveNoticeInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.FinderLiveNoticeInfo)
  SharedDtor();
}

void FinderLiveNoticeInfo::SharedDtor() {
  _introduction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _noticeid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FinderLiveNoticeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FinderLiveNoticeInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FinderLiveNoticeInfo& FinderLiveNoticeInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

FinderLiveNoticeInfo* FinderLiveNoticeInfo::New(::google::protobuf::Arena* arena) const {
  FinderLiveNoticeInfo* n = new FinderLiveNoticeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FinderLiveNoticeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.FinderLiveNoticeInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__introduction()) {
      GOOGLE_DCHECK(!_introduction_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_introduction_.UnsafeRawStringPointer())->clear();
    }
    if (has__noticeid()) {
      GOOGLE_DCHECK(!_noticeid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_noticeid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&_starttime_, 0, reinterpret_cast<char*>(&_reservestatus_) -
      reinterpret_cast<char*>(&_starttime_) + sizeof(_reservestatus_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FinderLiveNoticeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.FinderLiveNoticeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _StartTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__starttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_starttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ReserveStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__reservestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_reservestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Introduction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__introduction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_introduction().data(), this->_introduction().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.FinderLiveNoticeInfo._Introduction");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _NoticeID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__noticeid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_noticeid().data(), this->_noticeid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.FinderLiveNoticeInfo._NoticeID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.FinderLiveNoticeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.FinderLiveNoticeInfo)
  return false;
#undef DO_
}

void FinderLiveNoticeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.FinderLiveNoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _StartTime = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_starttime(), output);
  }

  // optional uint32 _ReserveStatus = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_reservestatus(), output);
  }

  // optional string _Introduction = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_introduction().data(), this->_introduction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.FinderLiveNoticeInfo._Introduction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_introduction(), output);
  }

  // optional string _NoticeID = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_noticeid().data(), this->_noticeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.FinderLiveNoticeInfo._NoticeID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_noticeid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.FinderLiveNoticeInfo)
}

::google::protobuf::uint8* FinderLiveNoticeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.FinderLiveNoticeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _StartTime = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_starttime(), target);
  }

  // optional uint32 _ReserveStatus = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_reservestatus(), target);
  }

  // optional string _Introduction = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_introduction().data(), this->_introduction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.FinderLiveNoticeInfo._Introduction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_introduction(), target);
  }

  // optional string _NoticeID = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_noticeid().data(), this->_noticeid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.FinderLiveNoticeInfo._NoticeID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_noticeid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.FinderLiveNoticeInfo)
  return target;
}

size_t FinderLiveNoticeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.FinderLiveNoticeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string _Introduction = 3;
    if (has__introduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_introduction());
    }

    // optional string _NoticeID = 4;
    if (has__noticeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_noticeid());
    }

    // optional uint32 _StartTime = 1;
    if (has__starttime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_starttime());
    }

    // optional uint32 _ReserveStatus = 2;
    if (has__reservestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_reservestatus());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FinderLiveNoticeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.FinderLiveNoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FinderLiveNoticeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FinderLiveNoticeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.FinderLiveNoticeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.FinderLiveNoticeInfo)
    MergeFrom(*source);
  }
}

void FinderLiveNoticeInfo::MergeFrom(const FinderLiveNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.FinderLiveNoticeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__introduction();
      _introduction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._introduction_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__noticeid();
      _noticeid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._noticeid_);
    }
    if (cached_has_bits & 0x00000004u) {
      _starttime_ = from._starttime_;
    }
    if (cached_has_bits & 0x00000008u) {
      _reservestatus_ = from._reservestatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FinderLiveNoticeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.FinderLiveNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FinderLiveNoticeInfo::CopyFrom(const FinderLiveNoticeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.FinderLiveNoticeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FinderLiveNoticeInfo::IsInitialized() const {
  return true;
}

void FinderLiveNoticeInfo::Swap(FinderLiveNoticeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FinderLiveNoticeInfo::InternalSwap(FinderLiveNoticeInfo* other) {
  _introduction_.Swap(&other->_introduction_);
  _noticeid_.Swap(&other->_noticeid_);
  std::swap(_starttime_, other->_starttime_);
  std::swap(_reservestatus_, other->_reservestatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FinderLiveNoticeInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FinderLiveNoticeInfo

// optional uint32 _StartTime = 1;
bool FinderLiveNoticeInfo::has__starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FinderLiveNoticeInfo::set_has__starttime() {
  _has_bits_[0] |= 0x00000004u;
}
void FinderLiveNoticeInfo::clear_has__starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
void FinderLiveNoticeInfo::clear__starttime() {
  _starttime_ = 0u;
  clear_has__starttime();
}
::google::protobuf::uint32 FinderLiveNoticeInfo::_starttime() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.FinderLiveNoticeInfo._StartTime)
  return _starttime_;
}
void FinderLiveNoticeInfo::set__starttime(::google::protobuf::uint32 value) {
  set_has__starttime();
  _starttime_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.FinderLiveNoticeInfo._StartTime)
}

// optional uint32 _ReserveStatus = 2;
bool FinderLiveNoticeInfo::has__reservestatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FinderLiveNoticeInfo::set_has__reservestatus() {
  _has_bits_[0] |= 0x00000008u;
}
void FinderLiveNoticeInfo::clear_has__reservestatus() {
  _has_bits_[0] &= ~0x00000008u;
}
void FinderLiveNoticeInfo::clear__reservestatus() {
  _reservestatus_ = 0u;
  clear_has__reservestatus();
}
::google::protobuf::uint32 FinderLiveNoticeInfo::_reservestatus() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.FinderLiveNoticeInfo._ReserveStatus)
  return _reservestatus_;
}
void FinderLiveNoticeInfo::set__reservestatus(::google::protobuf::uint32 value) {
  set_has__reservestatus();
  _reservestatus_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.FinderLiveNoticeInfo._ReserveStatus)
}

// optional string _Introduction = 3;
bool FinderLiveNoticeInfo::has__introduction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FinderLiveNoticeInfo::set_has__introduction() {
  _has_bits_[0] |= 0x00000001u;
}
void FinderLiveNoticeInfo::clear_has__introduction() {
  _has_bits_[0] &= ~0x00000001u;
}
void FinderLiveNoticeInfo::clear__introduction() {
  _introduction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__introduction();
}
const ::std::string& FinderLiveNoticeInfo::_introduction() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
  return _introduction_.GetNoArena();
}
void FinderLiveNoticeInfo::set__introduction(const ::std::string& value) {
  set_has__introduction();
  _introduction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
}
#if LANG_CXX11
void FinderLiveNoticeInfo::set__introduction(::std::string&& value) {
  set_has__introduction();
  _introduction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
}
#endif
void FinderLiveNoticeInfo::set__introduction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__introduction();
  _introduction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
}
void FinderLiveNoticeInfo::set__introduction(const char* value, size_t size) {
  set_has__introduction();
  _introduction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
}
::std::string* FinderLiveNoticeInfo::mutable__introduction() {
  set_has__introduction();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
  return _introduction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FinderLiveNoticeInfo::release__introduction() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
  clear_has__introduction();
  return _introduction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FinderLiveNoticeInfo::set_allocated__introduction(::std::string* _introduction) {
  if (_introduction != NULL) {
    set_has__introduction();
  } else {
    clear_has__introduction();
  }
  _introduction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _introduction);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.FinderLiveNoticeInfo._Introduction)
}

// optional string _NoticeID = 4;
bool FinderLiveNoticeInfo::has__noticeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FinderLiveNoticeInfo::set_has__noticeid() {
  _has_bits_[0] |= 0x00000002u;
}
void FinderLiveNoticeInfo::clear_has__noticeid() {
  _has_bits_[0] &= ~0x00000002u;
}
void FinderLiveNoticeInfo::clear__noticeid() {
  _noticeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__noticeid();
}
const ::std::string& FinderLiveNoticeInfo::_noticeid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
  return _noticeid_.GetNoArena();
}
void FinderLiveNoticeInfo::set__noticeid(const ::std::string& value) {
  set_has__noticeid();
  _noticeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
}
#if LANG_CXX11
void FinderLiveNoticeInfo::set__noticeid(::std::string&& value) {
  set_has__noticeid();
  _noticeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
}
#endif
void FinderLiveNoticeInfo::set__noticeid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__noticeid();
  _noticeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
}
void FinderLiveNoticeInfo::set__noticeid(const char* value, size_t size) {
  set_has__noticeid();
  _noticeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
}
::std::string* FinderLiveNoticeInfo::mutable__noticeid() {
  set_has__noticeid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
  return _noticeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FinderLiveNoticeInfo::release__noticeid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
  clear_has__noticeid();
  return _noticeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FinderLiveNoticeInfo::set_allocated__noticeid(::std::string* _noticeid) {
  if (_noticeid != NULL) {
    set_has__noticeid();
  } else {
    clear_has__noticeid();
  }
  _noticeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _noticeid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.FinderLiveNoticeInfo._NoticeID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileSetting_SettingDesc::kFuncFlagFieldNumber;
const int ProfileSetting_SettingDesc::kWordingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileSetting_SettingDesc::ProfileSetting_SettingDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.ProfileSetting.SettingDesc)
}
ProfileSetting_SettingDesc::ProfileSetting_SettingDesc(const ProfileSetting_SettingDesc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__wording()) {
    _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
  }
  _funcflag_ = from._funcflag_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.ProfileSetting.SettingDesc)
}

void ProfileSetting_SettingDesc::SharedCtor() {
  _cached_size_ = 0;
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _funcflag_ = 0u;
}

ProfileSetting_SettingDesc::~ProfileSetting_SettingDesc() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.ProfileSetting.SettingDesc)
  SharedDtor();
}

void ProfileSetting_SettingDesc::SharedDtor() {
  _wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProfileSetting_SettingDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfileSetting_SettingDesc::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileSetting_SettingDesc& ProfileSetting_SettingDesc::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfileSetting_SettingDesc* ProfileSetting_SettingDesc::New(::google::protobuf::Arena* arena) const {
  ProfileSetting_SettingDesc* n = new ProfileSetting_SettingDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfileSetting_SettingDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  if (has__wording()) {
    GOOGLE_DCHECK(!_wording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*_wording_.UnsafeRawStringPointer())->clear();
  }
  _funcflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfileSetting_SettingDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _FuncFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__funcflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_funcflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Wording = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__wording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_wording().data(), this->_wording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ProfileSetting.SettingDesc._Wording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.ProfileSetting.SettingDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.ProfileSetting.SettingDesc)
  return false;
#undef DO_
}

void ProfileSetting_SettingDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FuncFlag = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_funcflag(), output);
  }

  // optional string _Wording = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ProfileSetting.SettingDesc._Wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_wording(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.ProfileSetting.SettingDesc)
}

::google::protobuf::uint8* ProfileSetting_SettingDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FuncFlag = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_funcflag(), target);
  }

  // optional string _Wording = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ProfileSetting.SettingDesc._Wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_wording(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.ProfileSetting.SettingDesc)
  return target;
}

size_t ProfileSetting_SettingDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string _Wording = 2;
    if (has__wording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_wording());
    }

    // optional uint32 _FuncFlag = 1;
    if (has__funcflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_funcflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfileSetting_SettingDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileSetting_SettingDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileSetting_SettingDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.ProfileSetting.SettingDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.ProfileSetting.SettingDesc)
    MergeFrom(*source);
  }
}

void ProfileSetting_SettingDesc::MergeFrom(const ProfileSetting_SettingDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__wording();
      _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
    }
    if (cached_has_bits & 0x00000002u) {
      _funcflag_ = from._funcflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProfileSetting_SettingDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileSetting_SettingDesc::CopyFrom(const ProfileSetting_SettingDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.ProfileSetting.SettingDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileSetting_SettingDesc::IsInitialized() const {
  return true;
}

void ProfileSetting_SettingDesc::Swap(ProfileSetting_SettingDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileSetting_SettingDesc::InternalSwap(ProfileSetting_SettingDesc* other) {
  _wording_.Swap(&other->_wording_);
  std::swap(_funcflag_, other->_funcflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfileSetting_SettingDesc::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfileSetting_SettingDesc

// optional uint32 _FuncFlag = 1;
bool ProfileSetting_SettingDesc::has__funcflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ProfileSetting_SettingDesc::set_has__funcflag() {
  _has_bits_[0] |= 0x00000002u;
}
void ProfileSetting_SettingDesc::clear_has__funcflag() {
  _has_bits_[0] &= ~0x00000002u;
}
void ProfileSetting_SettingDesc::clear__funcflag() {
  _funcflag_ = 0u;
  clear_has__funcflag();
}
::google::protobuf::uint32 ProfileSetting_SettingDesc::_funcflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ProfileSetting.SettingDesc._FuncFlag)
  return _funcflag_;
}
void ProfileSetting_SettingDesc::set__funcflag(::google::protobuf::uint32 value) {
  set_has__funcflag();
  _funcflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ProfileSetting.SettingDesc._FuncFlag)
}

// optional string _Wording = 2;
bool ProfileSetting_SettingDesc::has__wording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProfileSetting_SettingDesc::set_has__wording() {
  _has_bits_[0] |= 0x00000001u;
}
void ProfileSetting_SettingDesc::clear_has__wording() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProfileSetting_SettingDesc::clear__wording() {
  _wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__wording();
}
const ::std::string& ProfileSetting_SettingDesc::_wording() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
  return _wording_.GetNoArena();
}
void ProfileSetting_SettingDesc::set__wording(const ::std::string& value) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
}
#if LANG_CXX11
void ProfileSetting_SettingDesc::set__wording(::std::string&& value) {
  set_has__wording();
  _wording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
}
#endif
void ProfileSetting_SettingDesc::set__wording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
}
void ProfileSetting_SettingDesc::set__wording(const char* value, size_t size) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
}
::std::string* ProfileSetting_SettingDesc::mutable__wording() {
  set_has__wording();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
  return _wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProfileSetting_SettingDesc::release__wording() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
  clear_has__wording();
  return _wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProfileSetting_SettingDesc::set_allocated__wording(::std::string* _wording) {
  if (_wording != NULL) {
    set_has__wording();
  } else {
    clear_has__wording();
  }
  _wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _wording);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ProfileSetting.SettingDesc._Wording)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProfileSetting::kBlockFinderFieldNumber;
const int ProfileSetting::kSettingWordingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProfileSetting::ProfileSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.ProfileSetting)
}
ProfileSetting::ProfileSetting(const ProfileSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _settingwording_(from._settingwording_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _blockfinder_ = from._blockfinder_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.ProfileSetting)
}

void ProfileSetting::SharedCtor() {
  _cached_size_ = 0;
  _blockfinder_ = 0u;
}

ProfileSetting::~ProfileSetting() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.ProfileSetting)
  SharedDtor();
}

void ProfileSetting::SharedDtor() {
}

void ProfileSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProfileSetting::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProfileSetting& ProfileSetting::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

ProfileSetting* ProfileSetting::New(::google::protobuf::Arena* arena) const {
  ProfileSetting* n = new ProfileSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProfileSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.ProfileSetting)
  _settingwording_.Clear();
  _blockfinder_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProfileSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.ProfileSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _BlockFinder = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__blockfinder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_blockfinder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.ProfileSetting.SettingDesc _SettingWording = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__settingwording()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.ProfileSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.ProfileSetting)
  return false;
#undef DO_
}

void ProfileSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.ProfileSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _BlockFinder = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_blockfinder(), output);
  }

  // repeated .MMPro.micromsg.ProfileSetting.SettingDesc _SettingWording = 2;
  for (unsigned int i = 0, n = this->_settingwording_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_settingwording(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.ProfileSetting)
}

::google::protobuf::uint8* ProfileSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.ProfileSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _BlockFinder = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_blockfinder(), target);
  }

  // repeated .MMPro.micromsg.ProfileSetting.SettingDesc _SettingWording = 2;
  for (unsigned int i = 0, n = this->_settingwording_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->_settingwording(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.ProfileSetting)
  return target;
}

size_t ProfileSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.ProfileSetting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MMPro.micromsg.ProfileSetting.SettingDesc _SettingWording = 2;
  {
    unsigned int count = this->_settingwording_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_settingwording(i));
    }
  }

  // optional uint32 _BlockFinder = 1;
  if (has__blockfinder()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_blockfinder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProfileSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.ProfileSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const ProfileSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProfileSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.ProfileSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.ProfileSetting)
    MergeFrom(*source);
  }
}

void ProfileSetting::MergeFrom(const ProfileSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.ProfileSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _settingwording_.MergeFrom(from._settingwording_);
  if (from.has__blockfinder()) {
    set__blockfinder(from._blockfinder());
  }
}

void ProfileSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.ProfileSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProfileSetting::CopyFrom(const ProfileSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.ProfileSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProfileSetting::IsInitialized() const {
  return true;
}

void ProfileSetting::Swap(ProfileSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProfileSetting::InternalSwap(ProfileSetting* other) {
  _settingwording_.InternalSwap(&other->_settingwording_);
  std::swap(_blockfinder_, other->_blockfinder_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProfileSetting::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProfileSetting

// optional uint32 _BlockFinder = 1;
bool ProfileSetting::has__blockfinder() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ProfileSetting::set_has__blockfinder() {
  _has_bits_[0] |= 0x00000001u;
}
void ProfileSetting::clear_has__blockfinder() {
  _has_bits_[0] &= ~0x00000001u;
}
void ProfileSetting::clear__blockfinder() {
  _blockfinder_ = 0u;
  clear_has__blockfinder();
}
::google::protobuf::uint32 ProfileSetting::_blockfinder() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ProfileSetting._BlockFinder)
  return _blockfinder_;
}
void ProfileSetting::set__blockfinder(::google::protobuf::uint32 value) {
  set_has__blockfinder();
  _blockfinder_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ProfileSetting._BlockFinder)
}

// repeated .MMPro.micromsg.ProfileSetting.SettingDesc _SettingWording = 2;
int ProfileSetting::_settingwording_size() const {
  return _settingwording_.size();
}
void ProfileSetting::clear__settingwording() {
  _settingwording_.Clear();
}
const ::MMPro::micromsg::ProfileSetting_SettingDesc& ProfileSetting::_settingwording(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ProfileSetting._SettingWording)
  return _settingwording_.Get(index);
}
::MMPro::micromsg::ProfileSetting_SettingDesc* ProfileSetting::mutable__settingwording(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ProfileSetting._SettingWording)
  return _settingwording_.Mutable(index);
}
::MMPro::micromsg::ProfileSetting_SettingDesc* ProfileSetting::add__settingwording() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.ProfileSetting._SettingWording)
  return _settingwording_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::ProfileSetting_SettingDesc >*
ProfileSetting::mutable__settingwording() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.ProfileSetting._SettingWording)
  return &_settingwording_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::ProfileSetting_SettingDesc >&
ProfileSetting::_settingwording() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.ProfileSetting._SettingWording)
  return _settingwording_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizNameCard::kBufferFieldNumber;
const int BizNameCard::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizNameCard::BizNameCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizNameCard)
}
BizNameCard::BizNameCard(const BizNameCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__buffer()) {
    _buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._buffer_);
  }
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__signature()) {
    _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizNameCard)
}

void BizNameCard::SharedCtor() {
  _cached_size_ = 0;
  _buffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BizNameCard::~BizNameCard() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizNameCard)
  SharedDtor();
}

void BizNameCard::SharedDtor() {
  _buffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizNameCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizNameCard::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizNameCard& BizNameCard::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizNameCard* BizNameCard::New(::google::protobuf::Arena* arena) const {
  BizNameCard* n = new BizNameCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizNameCard::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizNameCard)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__buffer()) {
      GOOGLE_DCHECK(!_buffer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_buffer_.UnsafeRawStringPointer())->clear();
    }
    if (has__signature()) {
      GOOGLE_DCHECK(!_signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_signature_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizNameCard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizNameCard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Buffer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__buffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_buffer().data(), this->_buffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizNameCard._Buffer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_signature().data(), this->_signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizNameCard._Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizNameCard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizNameCard)
  return false;
#undef DO_
}

void BizNameCard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizNameCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Buffer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_buffer().data(), this->_buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizNameCard._Buffer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_buffer(), output);
  }

  // optional string _Signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizNameCard._Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizNameCard)
}

::google::protobuf::uint8* BizNameCard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizNameCard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Buffer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_buffer().data(), this->_buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizNameCard._Buffer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_buffer(), target);
  }

  // optional string _Signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_signature().data(), this->_signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizNameCard._Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizNameCard)
  return target;
}

size_t BizNameCard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizNameCard)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string _Buffer = 1;
    if (has__buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_buffer());
    }

    // optional string _Signature = 2;
    if (has__signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_signature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizNameCard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizNameCard)
  GOOGLE_DCHECK_NE(&from, this);
  const BizNameCard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizNameCard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizNameCard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizNameCard)
    MergeFrom(*source);
  }
}

void BizNameCard::MergeFrom(const BizNameCard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizNameCard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__buffer();
      _buffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._buffer_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__signature();
      _signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._signature_);
    }
  }
}

void BizNameCard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizNameCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizNameCard::CopyFrom(const BizNameCard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizNameCard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizNameCard::IsInitialized() const {
  return true;
}

void BizNameCard::Swap(BizNameCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizNameCard::InternalSwap(BizNameCard* other) {
  _buffer_.Swap(&other->_buffer_);
  _signature_.Swap(&other->_signature_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizNameCard::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizNameCard

// optional string _Buffer = 1;
bool BizNameCard::has__buffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizNameCard::set_has__buffer() {
  _has_bits_[0] |= 0x00000001u;
}
void BizNameCard::clear_has__buffer() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizNameCard::clear__buffer() {
  _buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__buffer();
}
const ::std::string& BizNameCard::_buffer() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizNameCard._Buffer)
  return _buffer_.GetNoArena();
}
void BizNameCard::set__buffer(const ::std::string& value) {
  set_has__buffer();
  _buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizNameCard._Buffer)
}
#if LANG_CXX11
void BizNameCard::set__buffer(::std::string&& value) {
  set_has__buffer();
  _buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizNameCard._Buffer)
}
#endif
void BizNameCard::set__buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__buffer();
  _buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizNameCard._Buffer)
}
void BizNameCard::set__buffer(const char* value, size_t size) {
  set_has__buffer();
  _buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizNameCard._Buffer)
}
::std::string* BizNameCard::mutable__buffer() {
  set_has__buffer();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizNameCard._Buffer)
  return _buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizNameCard::release__buffer() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizNameCard._Buffer)
  clear_has__buffer();
  return _buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizNameCard::set_allocated__buffer(::std::string* _buffer) {
  if (_buffer != NULL) {
    set_has__buffer();
  } else {
    clear_has__buffer();
  }
  _buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _buffer);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizNameCard._Buffer)
}

// optional string _Signature = 2;
bool BizNameCard::has__signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizNameCard::set_has__signature() {
  _has_bits_[0] |= 0x00000002u;
}
void BizNameCard::clear_has__signature() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizNameCard::clear__signature() {
  _signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__signature();
}
const ::std::string& BizNameCard::_signature() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizNameCard._Signature)
  return _signature_.GetNoArena();
}
void BizNameCard::set__signature(const ::std::string& value) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizNameCard._Signature)
}
#if LANG_CXX11
void BizNameCard::set__signature(::std::string&& value) {
  set_has__signature();
  _signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizNameCard._Signature)
}
#endif
void BizNameCard::set__signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizNameCard._Signature)
}
void BizNameCard::set__signature(const char* value, size_t size) {
  set_has__signature();
  _signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizNameCard._Signature)
}
::std::string* BizNameCard::mutable__signature() {
  set_has__signature();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizNameCard._Signature)
  return _signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizNameCard::release__signature() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizNameCard._Signature)
  clear_has__signature();
  return _signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizNameCard::set_allocated__signature(::std::string* _signature) {
  if (_signature != NULL) {
    set_has__signature();
  } else {
    clear_has__signature();
  }
  _signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _signature);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizNameCard._Signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::kAppIDFieldNumber;
const int WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::kPathFieldNumber;
const int WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
}
WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo(const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__appid()) {
    _appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appid_);
  }
  _path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__path()) {
    _path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._path_);
  }
  _query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__query()) {
    _query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._query_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::SharedCtor() {
  _cached_size_ = 0;
  _appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::~WxaEcEntranceInfo_WxaEcLiteAppJumpInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  SharedDtor();
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::SharedDtor() {
  _appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo& WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::New(::google::protobuf::Arena* arena) const {
  WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* n = new WxaEcEntranceInfo_WxaEcLiteAppJumpInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has__appid()) {
      GOOGLE_DCHECK(!_appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_appid_.UnsafeRawStringPointer())->clear();
    }
    if (has__path()) {
      GOOGLE_DCHECK(!_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_path_.UnsafeRawStringPointer())->clear();
    }
    if (has__query()) {
      GOOGLE_DCHECK(!_query_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_query_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_appid().data(), this->_appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_path().data(), this->_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Query = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__query()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_query().data(), this->_query().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  return false;
#undef DO_
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appid().data(), this->_appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_appid(), output);
  }

  // optional string _Path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_path().data(), this->_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_path(), output);
  }

  // optional string _Query = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_query().data(), this->_query().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_query(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
}

::google::protobuf::uint8* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appid().data(), this->_appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_appid(), target);
  }

  // optional string _Path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_path().data(), this->_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_path(), target);
  }

  // optional string _Query = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_query().data(), this->_query().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_query(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  return target;
}

size_t WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string _AppID = 1;
    if (has__appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_appid());
    }

    // optional string _Path = 2;
    if (has__path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_path());
    }

    // optional string _Query = 3;
    if (has__query()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_query());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
    MergeFrom(*source);
  }
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::MergeFrom(const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__appid();
      _appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__path();
      _path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__query();
      _query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._query_);
    }
  }
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::CopyFrom(const WxaEcEntranceInfo_WxaEcLiteAppJumpInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::IsInitialized() const {
  return true;
}

void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::Swap(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::InternalSwap(WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* other) {
  _appid_.Swap(&other->_appid_);
  _path_.Swap(&other->_path_);
  _query_.Swap(&other->_query_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WxaEcEntranceInfo_WxaEcLiteAppJumpInfo

// optional string _AppID = 1;
bool WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::has__appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_has__appid() {
  _has_bits_[0] |= 0x00000001u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear_has__appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear__appid() {
  _appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appid();
}
const ::std::string& WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::_appid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
  return _appid_.GetNoArena();
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__appid(const ::std::string& value) {
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
}
#if LANG_CXX11
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__appid(::std::string&& value) {
  set_has__appid();
  _appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
}
#endif
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__appid(const char* value, size_t size) {
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::mutable__appid() {
  set_has__appid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
  return _appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::release__appid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
  clear_has__appid();
  return _appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_allocated__appid(::std::string* _appid) {
  if (_appid != NULL) {
    set_has__appid();
  } else {
    clear_has__appid();
  }
  _appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._AppID)
}

// optional string _Path = 2;
bool WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::has__path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_has__path() {
  _has_bits_[0] |= 0x00000002u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear_has__path() {
  _has_bits_[0] &= ~0x00000002u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear__path() {
  _path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__path();
}
const ::std::string& WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::_path() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
  return _path_.GetNoArena();
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__path(const ::std::string& value) {
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
}
#if LANG_CXX11
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__path(::std::string&& value) {
  set_has__path();
  _path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
}
#endif
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__path(const char* value, size_t size) {
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::mutable__path() {
  set_has__path();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
  return _path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::release__path() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
  clear_has__path();
  return _path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_allocated__path(::std::string* _path) {
  if (_path != NULL) {
    set_has__path();
  } else {
    clear_has__path();
  }
  _path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _path);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Path)
}

// optional string _Query = 3;
bool WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::has__query() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_has__query() {
  _has_bits_[0] |= 0x00000004u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear_has__query() {
  _has_bits_[0] &= ~0x00000004u;
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::clear__query() {
  _query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__query();
}
const ::std::string& WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::_query() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
  return _query_.GetNoArena();
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__query(const ::std::string& value) {
  set_has__query();
  _query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
}
#if LANG_CXX11
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__query(::std::string&& value) {
  set_has__query();
  _query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
}
#endif
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__query();
  _query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set__query(const char* value, size_t size) {
  set_has__query();
  _query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::mutable__query() {
  set_has__query();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
  return _query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::release__query() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
  clear_has__query();
  return _query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::set_allocated__query(::std::string* _query) {
  if (_query != NULL) {
    set_has__query();
  } else {
    clear_has__query();
  }
  _query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _query);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo._Query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WxaEcEntranceInfo_MiniAppConfig::kAppIDFieldNumber;
const int WxaEcEntranceInfo_MiniAppConfig::kPathFieldNumber;
const int WxaEcEntranceInfo_MiniAppConfig::kFetchInfoIdFieldNumber;
const int WxaEcEntranceInfo_MiniAppConfig::kAppUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WxaEcEntranceInfo_MiniAppConfig::WxaEcEntranceInfo_MiniAppConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
}
WxaEcEntranceInfo_MiniAppConfig::WxaEcEntranceInfo_MiniAppConfig(const WxaEcEntranceInfo_MiniAppConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__appid()) {
    _appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appid_);
  }
  _path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__path()) {
    _path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._path_);
  }
  _fetchinfoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__fetchinfoid()) {
    _fetchinfoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._fetchinfoid_);
  }
  _appusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__appusername()) {
    _appusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appusername_);
  }
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
}

void WxaEcEntranceInfo_MiniAppConfig::SharedCtor() {
  _cached_size_ = 0;
  _appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _fetchinfoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WxaEcEntranceInfo_MiniAppConfig::~WxaEcEntranceInfo_MiniAppConfig() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  SharedDtor();
}

void WxaEcEntranceInfo_MiniAppConfig::SharedDtor() {
  _appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _fetchinfoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _appusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WxaEcEntranceInfo_MiniAppConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WxaEcEntranceInfo_MiniAppConfig::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WxaEcEntranceInfo_MiniAppConfig& WxaEcEntranceInfo_MiniAppConfig::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

WxaEcEntranceInfo_MiniAppConfig* WxaEcEntranceInfo_MiniAppConfig::New(::google::protobuf::Arena* arena) const {
  WxaEcEntranceInfo_MiniAppConfig* n = new WxaEcEntranceInfo_MiniAppConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WxaEcEntranceInfo_MiniAppConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  if (_has_bits_[0 / 32] & 15u) {
    if (has__appid()) {
      GOOGLE_DCHECK(!_appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_appid_.UnsafeRawStringPointer())->clear();
    }
    if (has__path()) {
      GOOGLE_DCHECK(!_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_path_.UnsafeRawStringPointer())->clear();
    }
    if (has__fetchinfoid()) {
      GOOGLE_DCHECK(!_fetchinfoid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_fetchinfoid_.UnsafeRawStringPointer())->clear();
    }
    if (has__appusername()) {
      GOOGLE_DCHECK(!_appusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_appusername_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WxaEcEntranceInfo_MiniAppConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_appid().data(), this->_appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_path().data(), this->_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _FetchInfoId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__fetchinfoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_fetchinfoid().data(), this->_fetchinfoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AppUsername = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__appusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_appusername().data(), this->_appusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  return false;
#undef DO_
}

void WxaEcEntranceInfo_MiniAppConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appid().data(), this->_appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_appid(), output);
  }

  // optional string _Path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_path().data(), this->_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_path(), output);
  }

  // optional string _FetchInfoId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_fetchinfoid().data(), this->_fetchinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_fetchinfoid(), output);
  }

  // optional string _AppUsername = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appusername().data(), this->_appusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_appusername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
}

::google::protobuf::uint8* WxaEcEntranceInfo_MiniAppConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appid().data(), this->_appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_appid(), target);
  }

  // optional string _Path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_path().data(), this->_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_path(), target);
  }

  // optional string _FetchInfoId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_fetchinfoid().data(), this->_fetchinfoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_fetchinfoid(), target);
  }

  // optional string _AppUsername = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_appusername().data(), this->_appusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_appusername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  return target;
}

size_t WxaEcEntranceInfo_MiniAppConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string _AppID = 1;
    if (has__appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_appid());
    }

    // optional string _Path = 2;
    if (has__path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_path());
    }

    // optional string _FetchInfoId = 3;
    if (has__fetchinfoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_fetchinfoid());
    }

    // optional string _AppUsername = 4;
    if (has__appusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_appusername());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WxaEcEntranceInfo_MiniAppConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const WxaEcEntranceInfo_MiniAppConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WxaEcEntranceInfo_MiniAppConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
    MergeFrom(*source);
  }
}

void WxaEcEntranceInfo_MiniAppConfig::MergeFrom(const WxaEcEntranceInfo_MiniAppConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__appid();
      _appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__path();
      _path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__fetchinfoid();
      _fetchinfoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._fetchinfoid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__appusername();
      _appusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._appusername_);
    }
  }
}

void WxaEcEntranceInfo_MiniAppConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WxaEcEntranceInfo_MiniAppConfig::CopyFrom(const WxaEcEntranceInfo_MiniAppConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WxaEcEntranceInfo_MiniAppConfig::IsInitialized() const {
  return true;
}

void WxaEcEntranceInfo_MiniAppConfig::Swap(WxaEcEntranceInfo_MiniAppConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WxaEcEntranceInfo_MiniAppConfig::InternalSwap(WxaEcEntranceInfo_MiniAppConfig* other) {
  _appid_.Swap(&other->_appid_);
  _path_.Swap(&other->_path_);
  _fetchinfoid_.Swap(&other->_fetchinfoid_);
  _appusername_.Swap(&other->_appusername_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WxaEcEntranceInfo_MiniAppConfig::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WxaEcEntranceInfo_MiniAppConfig

// optional string _AppID = 1;
bool WxaEcEntranceInfo_MiniAppConfig::has__appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WxaEcEntranceInfo_MiniAppConfig::set_has__appid() {
  _has_bits_[0] |= 0x00000001u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear_has__appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear__appid() {
  _appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appid();
}
const ::std::string& WxaEcEntranceInfo_MiniAppConfig::_appid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
  return _appid_.GetNoArena();
}
void WxaEcEntranceInfo_MiniAppConfig::set__appid(const ::std::string& value) {
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
}
#if LANG_CXX11
void WxaEcEntranceInfo_MiniAppConfig::set__appid(::std::string&& value) {
  set_has__appid();
  _appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
}
#endif
void WxaEcEntranceInfo_MiniAppConfig::set__appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
}
void WxaEcEntranceInfo_MiniAppConfig::set__appid(const char* value, size_t size) {
  set_has__appid();
  _appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::mutable__appid() {
  set_has__appid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
  return _appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::release__appid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
  clear_has__appid();
  return _appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_MiniAppConfig::set_allocated__appid(::std::string* _appid) {
  if (_appid != NULL) {
    set_has__appid();
  } else {
    clear_has__appid();
  }
  _appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppID)
}

// optional string _Path = 2;
bool WxaEcEntranceInfo_MiniAppConfig::has__path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WxaEcEntranceInfo_MiniAppConfig::set_has__path() {
  _has_bits_[0] |= 0x00000002u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear_has__path() {
  _has_bits_[0] &= ~0x00000002u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear__path() {
  _path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__path();
}
const ::std::string& WxaEcEntranceInfo_MiniAppConfig::_path() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
  return _path_.GetNoArena();
}
void WxaEcEntranceInfo_MiniAppConfig::set__path(const ::std::string& value) {
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
}
#if LANG_CXX11
void WxaEcEntranceInfo_MiniAppConfig::set__path(::std::string&& value) {
  set_has__path();
  _path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
}
#endif
void WxaEcEntranceInfo_MiniAppConfig::set__path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
}
void WxaEcEntranceInfo_MiniAppConfig::set__path(const char* value, size_t size) {
  set_has__path();
  _path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::mutable__path() {
  set_has__path();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
  return _path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::release__path() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
  clear_has__path();
  return _path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_MiniAppConfig::set_allocated__path(::std::string* _path) {
  if (_path != NULL) {
    set_has__path();
  } else {
    clear_has__path();
  }
  _path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _path);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._Path)
}

// optional string _FetchInfoId = 3;
bool WxaEcEntranceInfo_MiniAppConfig::has__fetchinfoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WxaEcEntranceInfo_MiniAppConfig::set_has__fetchinfoid() {
  _has_bits_[0] |= 0x00000004u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear_has__fetchinfoid() {
  _has_bits_[0] &= ~0x00000004u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear__fetchinfoid() {
  _fetchinfoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__fetchinfoid();
}
const ::std::string& WxaEcEntranceInfo_MiniAppConfig::_fetchinfoid() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
  return _fetchinfoid_.GetNoArena();
}
void WxaEcEntranceInfo_MiniAppConfig::set__fetchinfoid(const ::std::string& value) {
  set_has__fetchinfoid();
  _fetchinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
}
#if LANG_CXX11
void WxaEcEntranceInfo_MiniAppConfig::set__fetchinfoid(::std::string&& value) {
  set_has__fetchinfoid();
  _fetchinfoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
}
#endif
void WxaEcEntranceInfo_MiniAppConfig::set__fetchinfoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__fetchinfoid();
  _fetchinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
}
void WxaEcEntranceInfo_MiniAppConfig::set__fetchinfoid(const char* value, size_t size) {
  set_has__fetchinfoid();
  _fetchinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::mutable__fetchinfoid() {
  set_has__fetchinfoid();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
  return _fetchinfoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::release__fetchinfoid() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
  clear_has__fetchinfoid();
  return _fetchinfoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_MiniAppConfig::set_allocated__fetchinfoid(::std::string* _fetchinfoid) {
  if (_fetchinfoid != NULL) {
    set_has__fetchinfoid();
  } else {
    clear_has__fetchinfoid();
  }
  _fetchinfoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _fetchinfoid);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._FetchInfoId)
}

// optional string _AppUsername = 4;
bool WxaEcEntranceInfo_MiniAppConfig::has__appusername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WxaEcEntranceInfo_MiniAppConfig::set_has__appusername() {
  _has_bits_[0] |= 0x00000008u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear_has__appusername() {
  _has_bits_[0] &= ~0x00000008u;
}
void WxaEcEntranceInfo_MiniAppConfig::clear__appusername() {
  _appusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appusername();
}
const ::std::string& WxaEcEntranceInfo_MiniAppConfig::_appusername() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
  return _appusername_.GetNoArena();
}
void WxaEcEntranceInfo_MiniAppConfig::set__appusername(const ::std::string& value) {
  set_has__appusername();
  _appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
}
#if LANG_CXX11
void WxaEcEntranceInfo_MiniAppConfig::set__appusername(::std::string&& value) {
  set_has__appusername();
  _appusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
}
#endif
void WxaEcEntranceInfo_MiniAppConfig::set__appusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appusername();
  _appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
}
void WxaEcEntranceInfo_MiniAppConfig::set__appusername(const char* value, size_t size) {
  set_has__appusername();
  _appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::mutable__appusername() {
  set_has__appusername();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
  return _appusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo_MiniAppConfig::release__appusername() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
  clear_has__appusername();
  return _appusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo_MiniAppConfig::set_allocated__appusername(::std::string* _appusername) {
  if (_appusername != NULL) {
    set_has__appusername();
  } else {
    clear_has__appusername();
  }
  _appusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appusername);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig._AppUsername)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WxaEcEntranceInfo::kIsShowFieldNumber;
const int WxaEcEntranceInfo::kTailIconFieldNumber;
const int WxaEcEntranceInfo::kWordingFieldNumber;
const int WxaEcEntranceInfo::kJumpInfoFieldNumber;
const int WxaEcEntranceInfo::kIsShopTagFieldNumber;
const int WxaEcEntranceInfo::kIsOwnShopFieldNumber;
const int WxaEcEntranceInfo::kJumpTypeFieldNumber;
const int WxaEcEntranceInfo::kMiniappInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WxaEcEntranceInfo::WxaEcEntranceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.WxaEcEntranceInfo)
}
WxaEcEntranceInfo::WxaEcEntranceInfo(const WxaEcEntranceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _tailicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__tailicon()) {
    _tailicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tailicon_);
  }
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__wording()) {
    _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
  }
  if (from.has__jumpinfo()) {
    _jumpinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo(*from._jumpinfo_);
  } else {
    _jumpinfo_ = NULL;
  }
  if (from.has__miniappinfo()) {
    _miniappinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig(*from._miniappinfo_);
  } else {
    _miniappinfo_ = NULL;
  }
  ::memcpy(&_isshow_, &from._isshow_,
    reinterpret_cast<char*>(&_jumptype_) -
    reinterpret_cast<char*>(&_isshow_) + sizeof(_jumptype_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.WxaEcEntranceInfo)
}

void WxaEcEntranceInfo::SharedCtor() {
  _cached_size_ = 0;
  _tailicon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_jumpinfo_, 0, reinterpret_cast<char*>(&_jumptype_) -
    reinterpret_cast<char*>(&_jumpinfo_) + sizeof(_jumptype_));
}

WxaEcEntranceInfo::~WxaEcEntranceInfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.WxaEcEntranceInfo)
  SharedDtor();
}

void WxaEcEntranceInfo::SharedDtor() {
  _tailicon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _jumpinfo_;
  }
  if (this != internal_default_instance()) {
    delete _miniappinfo_;
  }
}

void WxaEcEntranceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WxaEcEntranceInfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WxaEcEntranceInfo& WxaEcEntranceInfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

WxaEcEntranceInfo* WxaEcEntranceInfo::New(::google::protobuf::Arena* arena) const {
  WxaEcEntranceInfo* n = new WxaEcEntranceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WxaEcEntranceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.WxaEcEntranceInfo)
  if (_has_bits_[0 / 32] & 15u) {
    if (has__tailicon()) {
      GOOGLE_DCHECK(!_tailicon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_tailicon_.UnsafeRawStringPointer())->clear();
    }
    if (has__wording()) {
      GOOGLE_DCHECK(!_wording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_wording_.UnsafeRawStringPointer())->clear();
    }
    if (has__jumpinfo()) {
      GOOGLE_DCHECK(_jumpinfo_ != NULL);
      _jumpinfo_->::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::Clear();
    }
    if (has__miniappinfo()) {
      GOOGLE_DCHECK(_miniappinfo_ != NULL);
      _miniappinfo_->::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&_isshow_, 0, reinterpret_cast<char*>(&_jumptype_) -
      reinterpret_cast<char*>(&_isshow_) + sizeof(_jumptype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WxaEcEntranceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.WxaEcEntranceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _IsShow = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__isshow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_isshow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _TailIcon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__tailicon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_tailicon().data(), this->_tailicon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo._TailIcon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Wording = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__wording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_wording().data(), this->_wording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.WxaEcEntranceInfo._Wording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo _JumpInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__jumpinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _IsShopTag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has__isshoptag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_isshoptag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _IsOwnShop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has__isownshop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_isownshop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _JumpType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has__jumptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_jumptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig _MiniappInfo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__miniappinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.WxaEcEntranceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.WxaEcEntranceInfo)
  return false;
#undef DO_
}

void WxaEcEntranceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.WxaEcEntranceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _IsShow = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_isshow(), output);
  }

  // optional string _TailIcon = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_tailicon().data(), this->_tailicon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo._TailIcon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_tailicon(), output);
  }

  // optional string _Wording = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo._Wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_wording(), output);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo _JumpInfo = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_jumpinfo_, output);
  }

  // optional uint32 _IsShopTag = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_isshoptag(), output);
  }

  // optional uint32 _IsOwnShop = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_isownshop(), output);
  }

  // optional uint32 _JumpType = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->_jumptype(), output);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig _MiniappInfo = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->_miniappinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.WxaEcEntranceInfo)
}

::google::protobuf::uint8* WxaEcEntranceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.WxaEcEntranceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _IsShow = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_isshow(), target);
  }

  // optional string _TailIcon = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_tailicon().data(), this->_tailicon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo._TailIcon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_tailicon(), target);
  }

  // optional string _Wording = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.WxaEcEntranceInfo._Wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_wording(), target);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo _JumpInfo = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_jumpinfo_, deterministic, target);
  }

  // optional uint32 _IsShopTag = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_isshoptag(), target);
  }

  // optional uint32 _IsOwnShop = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_isownshop(), target);
  }

  // optional uint32 _JumpType = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->_jumptype(), target);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig _MiniappInfo = 8;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->_miniappinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.WxaEcEntranceInfo)
  return target;
}

size_t WxaEcEntranceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.WxaEcEntranceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string _TailIcon = 2;
    if (has__tailicon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_tailicon());
    }

    // optional string _Wording = 3;
    if (has__wording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_wording());
    }

    // optional .MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo _JumpInfo = 4;
    if (has__jumpinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_jumpinfo_);
    }

    // optional .MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig _MiniappInfo = 8;
    if (has__miniappinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_miniappinfo_);
    }

    // optional uint32 _IsShow = 1;
    if (has__isshow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_isshow());
    }

    // optional uint32 _IsShopTag = 5;
    if (has__isshoptag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_isshoptag());
    }

    // optional uint32 _IsOwnShop = 6;
    if (has__isownshop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_isownshop());
    }

    // optional uint32 _JumpType = 7;
    if (has__jumptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_jumptype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WxaEcEntranceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WxaEcEntranceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WxaEcEntranceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.WxaEcEntranceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.WxaEcEntranceInfo)
    MergeFrom(*source);
  }
}

void WxaEcEntranceInfo::MergeFrom(const WxaEcEntranceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.WxaEcEntranceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__tailicon();
      _tailicon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tailicon_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__wording();
      _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable__jumpinfo()->::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::MergeFrom(from._jumpinfo());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__miniappinfo()->::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig::MergeFrom(from._miniappinfo());
    }
    if (cached_has_bits & 0x00000010u) {
      _isshow_ = from._isshow_;
    }
    if (cached_has_bits & 0x00000020u) {
      _isshoptag_ = from._isshoptag_;
    }
    if (cached_has_bits & 0x00000040u) {
      _isownshop_ = from._isownshop_;
    }
    if (cached_has_bits & 0x00000080u) {
      _jumptype_ = from._jumptype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WxaEcEntranceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WxaEcEntranceInfo::CopyFrom(const WxaEcEntranceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.WxaEcEntranceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WxaEcEntranceInfo::IsInitialized() const {
  return true;
}

void WxaEcEntranceInfo::Swap(WxaEcEntranceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WxaEcEntranceInfo::InternalSwap(WxaEcEntranceInfo* other) {
  _tailicon_.Swap(&other->_tailicon_);
  _wording_.Swap(&other->_wording_);
  std::swap(_jumpinfo_, other->_jumpinfo_);
  std::swap(_miniappinfo_, other->_miniappinfo_);
  std::swap(_isshow_, other->_isshow_);
  std::swap(_isshoptag_, other->_isshoptag_);
  std::swap(_isownshop_, other->_isownshop_);
  std::swap(_jumptype_, other->_jumptype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WxaEcEntranceInfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WxaEcEntranceInfo

// optional uint32 _IsShow = 1;
bool WxaEcEntranceInfo::has__isshow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void WxaEcEntranceInfo::set_has__isshow() {
  _has_bits_[0] |= 0x00000010u;
}
void WxaEcEntranceInfo::clear_has__isshow() {
  _has_bits_[0] &= ~0x00000010u;
}
void WxaEcEntranceInfo::clear__isshow() {
  _isshow_ = 0u;
  clear_has__isshow();
}
::google::protobuf::uint32 WxaEcEntranceInfo::_isshow() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._IsShow)
  return _isshow_;
}
void WxaEcEntranceInfo::set__isshow(::google::protobuf::uint32 value) {
  set_has__isshow();
  _isshow_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._IsShow)
}

// optional string _TailIcon = 2;
bool WxaEcEntranceInfo::has__tailicon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WxaEcEntranceInfo::set_has__tailicon() {
  _has_bits_[0] |= 0x00000001u;
}
void WxaEcEntranceInfo::clear_has__tailicon() {
  _has_bits_[0] &= ~0x00000001u;
}
void WxaEcEntranceInfo::clear__tailicon() {
  _tailicon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__tailicon();
}
const ::std::string& WxaEcEntranceInfo::_tailicon() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
  return _tailicon_.GetNoArena();
}
void WxaEcEntranceInfo::set__tailicon(const ::std::string& value) {
  set_has__tailicon();
  _tailicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
}
#if LANG_CXX11
void WxaEcEntranceInfo::set__tailicon(::std::string&& value) {
  set_has__tailicon();
  _tailicon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
}
#endif
void WxaEcEntranceInfo::set__tailicon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__tailicon();
  _tailicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
}
void WxaEcEntranceInfo::set__tailicon(const char* value, size_t size) {
  set_has__tailicon();
  _tailicon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
}
::std::string* WxaEcEntranceInfo::mutable__tailicon() {
  set_has__tailicon();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
  return _tailicon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo::release__tailicon() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
  clear_has__tailicon();
  return _tailicon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo::set_allocated__tailicon(::std::string* _tailicon) {
  if (_tailicon != NULL) {
    set_has__tailicon();
  } else {
    clear_has__tailicon();
  }
  _tailicon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _tailicon);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo._TailIcon)
}

// optional string _Wording = 3;
bool WxaEcEntranceInfo::has__wording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WxaEcEntranceInfo::set_has__wording() {
  _has_bits_[0] |= 0x00000002u;
}
void WxaEcEntranceInfo::clear_has__wording() {
  _has_bits_[0] &= ~0x00000002u;
}
void WxaEcEntranceInfo::clear__wording() {
  _wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__wording();
}
const ::std::string& WxaEcEntranceInfo::_wording() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._Wording)
  return _wording_.GetNoArena();
}
void WxaEcEntranceInfo::set__wording(const ::std::string& value) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._Wording)
}
#if LANG_CXX11
void WxaEcEntranceInfo::set__wording(::std::string&& value) {
  set_has__wording();
  _wording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.WxaEcEntranceInfo._Wording)
}
#endif
void WxaEcEntranceInfo::set__wording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.WxaEcEntranceInfo._Wording)
}
void WxaEcEntranceInfo::set__wording(const char* value, size_t size) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.WxaEcEntranceInfo._Wording)
}
::std::string* WxaEcEntranceInfo::mutable__wording() {
  set_has__wording();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo._Wording)
  return _wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WxaEcEntranceInfo::release__wording() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo._Wording)
  clear_has__wording();
  return _wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WxaEcEntranceInfo::set_allocated__wording(::std::string* _wording) {
  if (_wording != NULL) {
    set_has__wording();
  } else {
    clear_has__wording();
  }
  _wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _wording);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo._Wording)
}

// optional .MMPro.micromsg.WxaEcEntranceInfo.WxaEcLiteAppJumpInfo _JumpInfo = 4;
bool WxaEcEntranceInfo::has__jumpinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void WxaEcEntranceInfo::set_has__jumpinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void WxaEcEntranceInfo::clear_has__jumpinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void WxaEcEntranceInfo::clear__jumpinfo() {
  if (_jumpinfo_ != NULL) _jumpinfo_->::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::Clear();
  clear_has__jumpinfo();
}
const ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo& WxaEcEntranceInfo::_jumpinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._JumpInfo)
  return _jumpinfo_ != NULL ? *_jumpinfo_
                         : *::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo::internal_default_instance();
}
::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* WxaEcEntranceInfo::mutable__jumpinfo() {
  set_has__jumpinfo();
  if (_jumpinfo_ == NULL) {
    _jumpinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo._JumpInfo)
  return _jumpinfo_;
}
::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* WxaEcEntranceInfo::release__jumpinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo._JumpInfo)
  clear_has__jumpinfo();
  ::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* temp = _jumpinfo_;
  _jumpinfo_ = NULL;
  return temp;
}
void WxaEcEntranceInfo::set_allocated__jumpinfo(::MMPro::micromsg::WxaEcEntranceInfo_WxaEcLiteAppJumpInfo* _jumpinfo) {
  delete _jumpinfo_;
  _jumpinfo_ = _jumpinfo;
  if (_jumpinfo) {
    set_has__jumpinfo();
  } else {
    clear_has__jumpinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo._JumpInfo)
}

// optional uint32 _IsShopTag = 5;
bool WxaEcEntranceInfo::has__isshoptag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void WxaEcEntranceInfo::set_has__isshoptag() {
  _has_bits_[0] |= 0x00000020u;
}
void WxaEcEntranceInfo::clear_has__isshoptag() {
  _has_bits_[0] &= ~0x00000020u;
}
void WxaEcEntranceInfo::clear__isshoptag() {
  _isshoptag_ = 0u;
  clear_has__isshoptag();
}
::google::protobuf::uint32 WxaEcEntranceInfo::_isshoptag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._IsShopTag)
  return _isshoptag_;
}
void WxaEcEntranceInfo::set__isshoptag(::google::protobuf::uint32 value) {
  set_has__isshoptag();
  _isshoptag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._IsShopTag)
}

// optional uint32 _IsOwnShop = 6;
bool WxaEcEntranceInfo::has__isownshop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void WxaEcEntranceInfo::set_has__isownshop() {
  _has_bits_[0] |= 0x00000040u;
}
void WxaEcEntranceInfo::clear_has__isownshop() {
  _has_bits_[0] &= ~0x00000040u;
}
void WxaEcEntranceInfo::clear__isownshop() {
  _isownshop_ = 0u;
  clear_has__isownshop();
}
::google::protobuf::uint32 WxaEcEntranceInfo::_isownshop() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._IsOwnShop)
  return _isownshop_;
}
void WxaEcEntranceInfo::set__isownshop(::google::protobuf::uint32 value) {
  set_has__isownshop();
  _isownshop_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._IsOwnShop)
}

// optional uint32 _JumpType = 7;
bool WxaEcEntranceInfo::has__jumptype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void WxaEcEntranceInfo::set_has__jumptype() {
  _has_bits_[0] |= 0x00000080u;
}
void WxaEcEntranceInfo::clear_has__jumptype() {
  _has_bits_[0] &= ~0x00000080u;
}
void WxaEcEntranceInfo::clear__jumptype() {
  _jumptype_ = 0u;
  clear_has__jumptype();
}
::google::protobuf::uint32 WxaEcEntranceInfo::_jumptype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._JumpType)
  return _jumptype_;
}
void WxaEcEntranceInfo::set__jumptype(::google::protobuf::uint32 value) {
  set_has__jumptype();
  _jumptype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.WxaEcEntranceInfo._JumpType)
}

// optional .MMPro.micromsg.WxaEcEntranceInfo.MiniAppConfig _MiniappInfo = 8;
bool WxaEcEntranceInfo::has__miniappinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void WxaEcEntranceInfo::set_has__miniappinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void WxaEcEntranceInfo::clear_has__miniappinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void WxaEcEntranceInfo::clear__miniappinfo() {
  if (_miniappinfo_ != NULL) _miniappinfo_->::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig::Clear();
  clear_has__miniappinfo();
}
const ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig& WxaEcEntranceInfo::_miniappinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.WxaEcEntranceInfo._MiniappInfo)
  return _miniappinfo_ != NULL ? *_miniappinfo_
                         : *::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig::internal_default_instance();
}
::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig* WxaEcEntranceInfo::mutable__miniappinfo() {
  set_has__miniappinfo();
  if (_miniappinfo_ == NULL) {
    _miniappinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.WxaEcEntranceInfo._MiniappInfo)
  return _miniappinfo_;
}
::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig* WxaEcEntranceInfo::release__miniappinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.WxaEcEntranceInfo._MiniappInfo)
  clear_has__miniappinfo();
  ::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig* temp = _miniappinfo_;
  _miniappinfo_ = NULL;
  return temp;
}
void WxaEcEntranceInfo::set_allocated__miniappinfo(::MMPro::micromsg::WxaEcEntranceInfo_MiniAppConfig* _miniappinfo) {
  delete _miniappinfo_;
  _miniappinfo_ = _miniappinfo;
  if (_miniappinfo) {
    set_has__miniappinfo();
  } else {
    clear_has__miniappinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.WxaEcEntranceInfo._MiniappInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileV2Resp_FuncFlagDesc::kFuncFlagFieldNumber;
const int BizProfileV2Resp_FuncFlagDesc::kWordingFieldNumber;
const int BizProfileV2Resp_FuncFlagDesc::kJumpUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileV2Resp_FuncFlagDesc::BizProfileV2Resp_FuncFlagDesc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
}
BizProfileV2Resp_FuncFlagDesc::BizProfileV2Resp_FuncFlagDesc(const BizProfileV2Resp_FuncFlagDesc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__wording()) {
    _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
  }
  _jumpurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__jumpurl()) {
    _jumpurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._jumpurl_);
  }
  _funcflag_ = from._funcflag_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
}

void BizProfileV2Resp_FuncFlagDesc::SharedCtor() {
  _cached_size_ = 0;
  _wording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _jumpurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _funcflag_ = 0u;
}

BizProfileV2Resp_FuncFlagDesc::~BizProfileV2Resp_FuncFlagDesc() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  SharedDtor();
}

void BizProfileV2Resp_FuncFlagDesc::SharedDtor() {
  _wording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _jumpurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizProfileV2Resp_FuncFlagDesc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileV2Resp_FuncFlagDesc::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileV2Resp_FuncFlagDesc& BizProfileV2Resp_FuncFlagDesc::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileV2Resp_FuncFlagDesc* BizProfileV2Resp_FuncFlagDesc::New(::google::protobuf::Arena* arena) const {
  BizProfileV2Resp_FuncFlagDesc* n = new BizProfileV2Resp_FuncFlagDesc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileV2Resp_FuncFlagDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  if (_has_bits_[0 / 32] & 3u) {
    if (has__wording()) {
      GOOGLE_DCHECK(!_wording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_wording_.UnsafeRawStringPointer())->clear();
    }
    if (has__jumpurl()) {
      GOOGLE_DCHECK(!_jumpurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_jumpurl_.UnsafeRawStringPointer())->clear();
    }
  }
  _funcflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileV2Resp_FuncFlagDesc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 _FuncFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__funcflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_funcflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Wording = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__wording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_wording().data(), this->_wording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _JumpUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__jumpurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_jumpurl().data(), this->_jumpurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  return false;
#undef DO_
}

void BizProfileV2Resp_FuncFlagDesc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FuncFlag = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_funcflag(), output);
  }

  // optional string _Wording = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_wording(), output);
  }

  // optional string _JumpUrl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_jumpurl().data(), this->_jumpurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->_jumpurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
}

::google::protobuf::uint8* BizProfileV2Resp_FuncFlagDesc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 _FuncFlag = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_funcflag(), target);
  }

  // optional string _Wording = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_wording().data(), this->_wording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_wording(), target);
  }

  // optional string _JumpUrl = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_jumpurl().data(), this->_jumpurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_jumpurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  return target;
}

size_t BizProfileV2Resp_FuncFlagDesc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string _Wording = 2;
    if (has__wording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_wording());
    }

    // optional string _JumpUrl = 3;
    if (has__jumpurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_jumpurl());
    }

    // optional uint32 _FuncFlag = 1;
    if (has__funcflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_funcflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileV2Resp_FuncFlagDesc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileV2Resp_FuncFlagDesc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileV2Resp_FuncFlagDesc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
    MergeFrom(*source);
  }
}

void BizProfileV2Resp_FuncFlagDesc::MergeFrom(const BizProfileV2Resp_FuncFlagDesc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__wording();
      _wording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._wording_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__jumpurl();
      _jumpurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._jumpurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      _funcflag_ = from._funcflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileV2Resp_FuncFlagDesc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileV2Resp_FuncFlagDesc::CopyFrom(const BizProfileV2Resp_FuncFlagDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileV2Resp_FuncFlagDesc::IsInitialized() const {
  return true;
}

void BizProfileV2Resp_FuncFlagDesc::Swap(BizProfileV2Resp_FuncFlagDesc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileV2Resp_FuncFlagDesc::InternalSwap(BizProfileV2Resp_FuncFlagDesc* other) {
  _wording_.Swap(&other->_wording_);
  _jumpurl_.Swap(&other->_jumpurl_);
  std::swap(_funcflag_, other->_funcflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileV2Resp_FuncFlagDesc::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileV2Resp_FuncFlagDesc

// optional uint32 _FuncFlag = 1;
bool BizProfileV2Resp_FuncFlagDesc::has__funcflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizProfileV2Resp_FuncFlagDesc::set_has__funcflag() {
  _has_bits_[0] |= 0x00000004u;
}
void BizProfileV2Resp_FuncFlagDesc::clear_has__funcflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizProfileV2Resp_FuncFlagDesc::clear__funcflag() {
  _funcflag_ = 0u;
  clear_has__funcflag();
}
::google::protobuf::uint32 BizProfileV2Resp_FuncFlagDesc::_funcflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._FuncFlag)
  return _funcflag_;
}
void BizProfileV2Resp_FuncFlagDesc::set__funcflag(::google::protobuf::uint32 value) {
  set_has__funcflag();
  _funcflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._FuncFlag)
}

// optional string _Wording = 2;
bool BizProfileV2Resp_FuncFlagDesc::has__wording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileV2Resp_FuncFlagDesc::set_has__wording() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileV2Resp_FuncFlagDesc::clear_has__wording() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileV2Resp_FuncFlagDesc::clear__wording() {
  _wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__wording();
}
const ::std::string& BizProfileV2Resp_FuncFlagDesc::_wording() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
  return _wording_.GetNoArena();
}
void BizProfileV2Resp_FuncFlagDesc::set__wording(const ::std::string& value) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
}
#if LANG_CXX11
void BizProfileV2Resp_FuncFlagDesc::set__wording(::std::string&& value) {
  set_has__wording();
  _wording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
}
#endif
void BizProfileV2Resp_FuncFlagDesc::set__wording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
}
void BizProfileV2Resp_FuncFlagDesc::set__wording(const char* value, size_t size) {
  set_has__wording();
  _wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
}
::std::string* BizProfileV2Resp_FuncFlagDesc::mutable__wording() {
  set_has__wording();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
  return _wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileV2Resp_FuncFlagDesc::release__wording() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
  clear_has__wording();
  return _wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileV2Resp_FuncFlagDesc::set_allocated__wording(::std::string* _wording) {
  if (_wording != NULL) {
    set_has__wording();
  } else {
    clear_has__wording();
  }
  _wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _wording);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._Wording)
}

// optional string _JumpUrl = 3;
bool BizProfileV2Resp_FuncFlagDesc::has__jumpurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileV2Resp_FuncFlagDesc::set_has__jumpurl() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileV2Resp_FuncFlagDesc::clear_has__jumpurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileV2Resp_FuncFlagDesc::clear__jumpurl() {
  _jumpurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__jumpurl();
}
const ::std::string& BizProfileV2Resp_FuncFlagDesc::_jumpurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
  return _jumpurl_.GetNoArena();
}
void BizProfileV2Resp_FuncFlagDesc::set__jumpurl(const ::std::string& value) {
  set_has__jumpurl();
  _jumpurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
}
#if LANG_CXX11
void BizProfileV2Resp_FuncFlagDesc::set__jumpurl(::std::string&& value) {
  set_has__jumpurl();
  _jumpurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
}
#endif
void BizProfileV2Resp_FuncFlagDesc::set__jumpurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__jumpurl();
  _jumpurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
}
void BizProfileV2Resp_FuncFlagDesc::set__jumpurl(const char* value, size_t size) {
  set_has__jumpurl();
  _jumpurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
}
::std::string* BizProfileV2Resp_FuncFlagDesc::mutable__jumpurl() {
  set_has__jumpurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
  return _jumpurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileV2Resp_FuncFlagDesc::release__jumpurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
  clear_has__jumpurl();
  return _jumpurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileV2Resp_FuncFlagDesc::set_allocated__jumpurl(::std::string* _jumpurl) {
  if (_jumpurl != NULL) {
    set_has__jumpurl();
  } else {
    clear_has__jumpurl();
  }
  _jumpurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _jumpurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc._JumpUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileV2Resp_FinderLiveNoticeExtinfo::kTotalNoticeCntFieldNumber;
const int BizProfileV2Resp_FinderLiveNoticeExtinfo::kTotalReservedCntFieldNumber;
const int BizProfileV2Resp_FinderLiveNoticeExtinfo::kContinueFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileV2Resp_FinderLiveNoticeExtinfo::BizProfileV2Resp_FinderLiveNoticeExtinfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
}
BizProfileV2Resp_FinderLiveNoticeExtinfo::BizProfileV2Resp_FinderLiveNoticeExtinfo(const BizProfileV2Resp_FinderLiveNoticeExtinfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&_totalnoticecnt_, &from._totalnoticecnt_,
    reinterpret_cast<char*>(&_continueflag_) -
    reinterpret_cast<char*>(&_totalnoticecnt_) + sizeof(_continueflag_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&_totalnoticecnt_, 0, reinterpret_cast<char*>(&_continueflag_) -
    reinterpret_cast<char*>(&_totalnoticecnt_) + sizeof(_continueflag_));
}

BizProfileV2Resp_FinderLiveNoticeExtinfo::~BizProfileV2Resp_FinderLiveNoticeExtinfo() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  SharedDtor();
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::SharedDtor() {
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileV2Resp_FinderLiveNoticeExtinfo::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileV2Resp_FinderLiveNoticeExtinfo& BizProfileV2Resp_FinderLiveNoticeExtinfo::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileV2Resp_FinderLiveNoticeExtinfo* BizProfileV2Resp_FinderLiveNoticeExtinfo::New(::google::protobuf::Arena* arena) const {
  BizProfileV2Resp_FinderLiveNoticeExtinfo* n = new BizProfileV2Resp_FinderLiveNoticeExtinfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&_totalnoticecnt_, 0, reinterpret_cast<char*>(&_continueflag_) -
      reinterpret_cast<char*>(&_totalnoticecnt_) + sizeof(_continueflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileV2Resp_FinderLiveNoticeExtinfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 _TotalNoticeCnt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has__totalnoticecnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_totalnoticecnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _TotalReservedCnt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has__totalreservedcnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_totalreservedcnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ContinueFlag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__continueflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_continueflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  return false;
#undef DO_
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _TotalNoticeCnt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->_totalnoticecnt(), output);
  }

  // optional uint32 _TotalReservedCnt = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_totalreservedcnt(), output);
  }

  // optional uint32 _ContinueFlag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_continueflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
}

::google::protobuf::uint8* BizProfileV2Resp_FinderLiveNoticeExtinfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 _TotalNoticeCnt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->_totalnoticecnt(), target);
  }

  // optional uint32 _TotalReservedCnt = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_totalreservedcnt(), target);
  }

  // optional uint32 _ContinueFlag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_continueflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  return target;
}

size_t BizProfileV2Resp_FinderLiveNoticeExtinfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 _TotalNoticeCnt = 1;
    if (has__totalnoticecnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_totalnoticecnt());
    }

    // optional uint32 _TotalReservedCnt = 2;
    if (has__totalreservedcnt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_totalreservedcnt());
    }

    // optional uint32 _ContinueFlag = 3;
    if (has__continueflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_continueflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileV2Resp_FinderLiveNoticeExtinfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileV2Resp_FinderLiveNoticeExtinfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
    MergeFrom(*source);
  }
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::MergeFrom(const BizProfileV2Resp_FinderLiveNoticeExtinfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      _totalnoticecnt_ = from._totalnoticecnt_;
    }
    if (cached_has_bits & 0x00000002u) {
      _totalreservedcnt_ = from._totalreservedcnt_;
    }
    if (cached_has_bits & 0x00000004u) {
      _continueflag_ = from._continueflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::CopyFrom(const BizProfileV2Resp_FinderLiveNoticeExtinfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileV2Resp_FinderLiveNoticeExtinfo::IsInitialized() const {
  return true;
}

void BizProfileV2Resp_FinderLiveNoticeExtinfo::Swap(BizProfileV2Resp_FinderLiveNoticeExtinfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::InternalSwap(BizProfileV2Resp_FinderLiveNoticeExtinfo* other) {
  std::swap(_totalnoticecnt_, other->_totalnoticecnt_);
  std::swap(_totalreservedcnt_, other->_totalreservedcnt_);
  std::swap(_continueflag_, other->_continueflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileV2Resp_FinderLiveNoticeExtinfo::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileV2Resp_FinderLiveNoticeExtinfo

// optional int32 _TotalNoticeCnt = 1;
bool BizProfileV2Resp_FinderLiveNoticeExtinfo::has__totalnoticecnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set_has__totalnoticecnt() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear_has__totalnoticecnt() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear__totalnoticecnt() {
  _totalnoticecnt_ = 0;
  clear_has__totalnoticecnt();
}
::google::protobuf::int32 BizProfileV2Resp_FinderLiveNoticeExtinfo::_totalnoticecnt() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._TotalNoticeCnt)
  return _totalnoticecnt_;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set__totalnoticecnt(::google::protobuf::int32 value) {
  set_has__totalnoticecnt();
  _totalnoticecnt_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._TotalNoticeCnt)
}

// optional uint32 _TotalReservedCnt = 2;
bool BizProfileV2Resp_FinderLiveNoticeExtinfo::has__totalreservedcnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set_has__totalreservedcnt() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear_has__totalreservedcnt() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear__totalreservedcnt() {
  _totalreservedcnt_ = 0u;
  clear_has__totalreservedcnt();
}
::google::protobuf::uint32 BizProfileV2Resp_FinderLiveNoticeExtinfo::_totalreservedcnt() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._TotalReservedCnt)
  return _totalreservedcnt_;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set__totalreservedcnt(::google::protobuf::uint32 value) {
  set_has__totalreservedcnt();
  _totalreservedcnt_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._TotalReservedCnt)
}

// optional uint32 _ContinueFlag = 3;
bool BizProfileV2Resp_FinderLiveNoticeExtinfo::has__continueflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set_has__continueflag() {
  _has_bits_[0] |= 0x00000004u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear_has__continueflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::clear__continueflag() {
  _continueflag_ = 0u;
  clear_has__continueflag();
}
::google::protobuf::uint32 BizProfileV2Resp_FinderLiveNoticeExtinfo::_continueflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._ContinueFlag)
  return _continueflag_;
}
void BizProfileV2Resp_FinderLiveNoticeExtinfo::set__continueflag(::google::protobuf::uint32 value) {
  set_has__continueflag();
  _continueflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo._ContinueFlag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizProfileV2Resp::kBaseResponseFieldNumber;
const int BizProfileV2Resp::kAccountInfoFieldNumber;
const int BizProfileV2Resp::kBizBaseInfoFieldNumber;
const int BizProfileV2Resp::kMsgListFieldNumber;
const int BizProfileV2Resp::kBrandInfoFieldNumber;
const int BizProfileV2Resp::kVideoListFieldNumber;
const int BizProfileV2Resp::kServiceInfoFieldNumber;
const int BizProfileV2Resp::kFuncFlagFieldNumber;
const int BizProfileV2Resp::kFuncFlagWordingFieldNumber;
const int BizProfileV2Resp::kPreLoadFieldNumber;
const int BizProfileV2Resp::kSearchGuideInfoFieldNumber;
const int BizProfileV2Resp::kBizTopicListFieldNumber;
const int BizProfileV2Resp::kBizVideoFinderInfoFieldNumber;
const int BizProfileV2Resp::kShortMsgListFieldNumber;
const int BizProfileV2Resp::kVideoTabTypeFieldNumber;
const int BizProfileV2Resp::kShortMsgTabTypeFieldNumber;
const int BizProfileV2Resp::kLiveInfoFieldNumber;
const int BizProfileV2Resp::kFinderVideoIsBizModeFieldNumber;
const int BizProfileV2Resp::kSettingFieldNumber;
const int BizProfileV2Resp::kNameCardFieldNumber;
const int BizProfileV2Resp::kLiveExtInfoFieldNumber;
const int BizProfileV2Resp::kIpWordingFieldNumber;
const int BizProfileV2Resp::kWxaEcEntranceInfoFieldNumber;
const int BizProfileV2Resp::kShowSubBizRecFieldNumber;
const int BizProfileV2Resp::kAudioTabTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizProfileV2Resp::BizProfileV2Resp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.BizProfileV2Resp)
}
BizProfileV2Resp::BizProfileV2Resp(const BizProfileV2Resp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      _funcflagwording_(from._funcflagwording_),
      _liveinfo_(from._liveinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _searchguideinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__searchguideinfo()) {
    _searchguideinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._searchguideinfo_);
  }
  _ipwording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__ipwording()) {
    _ipwording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._ipwording_);
  }
  if (from.has__baseresponse()) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse(*from._baseresponse_);
  } else {
    _baseresponse_ = NULL;
  }
  if (from.has__accountinfo()) {
    _accountinfo_ = new ::MMPro::micromsg::BizAccountInfo(*from._accountinfo_);
  } else {
    _accountinfo_ = NULL;
  }
  if (from.has__bizbaseinfo()) {
    _bizbaseinfo_ = new ::MMPro::micromsg::BizBaseInfo(*from._bizbaseinfo_);
  } else {
    _bizbaseinfo_ = NULL;
  }
  if (from.has__msglist()) {
    _msglist_ = new ::MMPro::micromsg::BizMessageList(*from._msglist_);
  } else {
    _msglist_ = NULL;
  }
  if (from.has__brandinfo()) {
    _brandinfo_ = new ::MMPro::micromsg::BizBrandInfo(*from._brandinfo_);
  } else {
    _brandinfo_ = NULL;
  }
  if (from.has__videolist()) {
    _videolist_ = new ::MMPro::micromsg::BizMessageList(*from._videolist_);
  } else {
    _videolist_ = NULL;
  }
  if (from.has__serviceinfo()) {
    _serviceinfo_ = new ::MMPro::micromsg::BizServiceInfo(*from._serviceinfo_);
  } else {
    _serviceinfo_ = NULL;
  }
  if (from.has__biztopiclist()) {
    _biztopiclist_ = new ::MMPro::micromsg::BizTopicList(*from._biztopiclist_);
  } else {
    _biztopiclist_ = NULL;
  }
  if (from.has__bizvideofinderinfo()) {
    _bizvideofinderinfo_ = new ::MMPro::micromsg::BizVideoFinderInfo(*from._bizvideofinderinfo_);
  } else {
    _bizvideofinderinfo_ = NULL;
  }
  if (from.has__shortmsglist()) {
    _shortmsglist_ = new ::MMPro::micromsg::BizMessageList(*from._shortmsglist_);
  } else {
    _shortmsglist_ = NULL;
  }
  if (from.has__setting()) {
    _setting_ = new ::MMPro::micromsg::ProfileSetting(*from._setting_);
  } else {
    _setting_ = NULL;
  }
  if (from.has__namecard()) {
    _namecard_ = new ::MMPro::micromsg::BizNameCard(*from._namecard_);
  } else {
    _namecard_ = NULL;
  }
  if (from.has__liveextinfo()) {
    _liveextinfo_ = new ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo(*from._liveextinfo_);
  } else {
    _liveextinfo_ = NULL;
  }
  if (from.has__wxaecentranceinfo()) {
    _wxaecentranceinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo(*from._wxaecentranceinfo_);
  } else {
    _wxaecentranceinfo_ = NULL;
  }
  ::memcpy(&_funcflag_, &from._funcflag_,
    reinterpret_cast<char*>(&_audiotabtype_) -
    reinterpret_cast<char*>(&_funcflag_) + sizeof(_audiotabtype_));
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.BizProfileV2Resp)
}

void BizProfileV2Resp::SharedCtor() {
  _cached_size_ = 0;
  _searchguideinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ipwording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_baseresponse_, 0, reinterpret_cast<char*>(&_audiotabtype_) -
    reinterpret_cast<char*>(&_baseresponse_) + sizeof(_audiotabtype_));
}

BizProfileV2Resp::~BizProfileV2Resp() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.BizProfileV2Resp)
  SharedDtor();
}

void BizProfileV2Resp::SharedDtor() {
  _searchguideinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ipwording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete _baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete _accountinfo_;
  }
  if (this != internal_default_instance()) {
    delete _bizbaseinfo_;
  }
  if (this != internal_default_instance()) {
    delete _msglist_;
  }
  if (this != internal_default_instance()) {
    delete _brandinfo_;
  }
  if (this != internal_default_instance()) {
    delete _videolist_;
  }
  if (this != internal_default_instance()) {
    delete _serviceinfo_;
  }
  if (this != internal_default_instance()) {
    delete _biztopiclist_;
  }
  if (this != internal_default_instance()) {
    delete _bizvideofinderinfo_;
  }
  if (this != internal_default_instance()) {
    delete _shortmsglist_;
  }
  if (this != internal_default_instance()) {
    delete _setting_;
  }
  if (this != internal_default_instance()) {
    delete _namecard_;
  }
  if (this != internal_default_instance()) {
    delete _liveextinfo_;
  }
  if (this != internal_default_instance()) {
    delete _wxaecentranceinfo_;
  }
}

void BizProfileV2Resp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizProfileV2Resp::descriptor() {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizProfileV2Resp& BizProfileV2Resp::default_instance() {
  protobuf_BizProfileV2Resp_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizProfileV2Resp* BizProfileV2Resp::New(::google::protobuf::Arena* arena) const {
  BizProfileV2Resp* n = new BizProfileV2Resp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizProfileV2Resp::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.BizProfileV2Resp)
  _funcflagwording_.Clear();
  _liveinfo_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has__searchguideinfo()) {
      GOOGLE_DCHECK(!_searchguideinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_searchguideinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has__ipwording()) {
      GOOGLE_DCHECK(!_ipwording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_ipwording_.UnsafeRawStringPointer())->clear();
    }
    if (has__baseresponse()) {
      GOOGLE_DCHECK(_baseresponse_ != NULL);
      _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
    }
    if (has__accountinfo()) {
      GOOGLE_DCHECK(_accountinfo_ != NULL);
      _accountinfo_->::MMPro::micromsg::BizAccountInfo::Clear();
    }
    if (has__bizbaseinfo()) {
      GOOGLE_DCHECK(_bizbaseinfo_ != NULL);
      _bizbaseinfo_->::MMPro::micromsg::BizBaseInfo::Clear();
    }
    if (has__msglist()) {
      GOOGLE_DCHECK(_msglist_ != NULL);
      _msglist_->::MMPro::micromsg::BizMessageList::Clear();
    }
    if (has__brandinfo()) {
      GOOGLE_DCHECK(_brandinfo_ != NULL);
      _brandinfo_->::MMPro::micromsg::BizBrandInfo::Clear();
    }
    if (has__videolist()) {
      GOOGLE_DCHECK(_videolist_ != NULL);
      _videolist_->::MMPro::micromsg::BizMessageList::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has__serviceinfo()) {
      GOOGLE_DCHECK(_serviceinfo_ != NULL);
      _serviceinfo_->::MMPro::micromsg::BizServiceInfo::Clear();
    }
    if (has__biztopiclist()) {
      GOOGLE_DCHECK(_biztopiclist_ != NULL);
      _biztopiclist_->::MMPro::micromsg::BizTopicList::Clear();
    }
    if (has__bizvideofinderinfo()) {
      GOOGLE_DCHECK(_bizvideofinderinfo_ != NULL);
      _bizvideofinderinfo_->::MMPro::micromsg::BizVideoFinderInfo::Clear();
    }
    if (has__shortmsglist()) {
      GOOGLE_DCHECK(_shortmsglist_ != NULL);
      _shortmsglist_->::MMPro::micromsg::BizMessageList::Clear();
    }
    if (has__setting()) {
      GOOGLE_DCHECK(_setting_ != NULL);
      _setting_->::MMPro::micromsg::ProfileSetting::Clear();
    }
    if (has__namecard()) {
      GOOGLE_DCHECK(_namecard_ != NULL);
      _namecard_->::MMPro::micromsg::BizNameCard::Clear();
    }
    if (has__liveextinfo()) {
      GOOGLE_DCHECK(_liveextinfo_ != NULL);
      _liveextinfo_->::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo::Clear();
    }
    if (has__wxaecentranceinfo()) {
      GOOGLE_DCHECK(_wxaecentranceinfo_ != NULL);
      _wxaecentranceinfo_->::MMPro::micromsg::WxaEcEntranceInfo::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 8323072u) {
    ::memset(&_funcflag_, 0, reinterpret_cast<char*>(&_audiotabtype_) -
      reinterpret_cast<char*>(&_funcflag_) + sizeof(_audiotabtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizProfileV2Resp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.BizProfileV2Resp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizAccountInfo _AccountInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__accountinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizBaseInfo _BizBaseInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__bizbaseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizMessageList _MsgList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__msglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizBrandInfo _BrandInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__brandinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizMessageList _VideoList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__videolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizServiceInfo _ServiceInfo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__serviceinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _FuncFlag = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has__funcflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_funcflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc _FuncFlagWording = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__funcflagwording()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _PreLoad = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has__preload();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_preload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _SearchGuideInfo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__searchguideinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_searchguideinfo().data(), this->_searchguideinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizTopicList _BizTopicList = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__biztopiclist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizVideoFinderInfo _BizVideoFinderInfo = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__bizvideofinderinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizMessageList _ShortMsgList = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__shortmsglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _VideoTabType = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has__videotabtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_videotabtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _ShortMsgTabType = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has__shortmsgtabtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_shortmsgtabtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MMPro.micromsg.FinderLiveNoticeInfo _LiveInfo = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__liveinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool _FinderVideoIsBizMode = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          set_has__findervideoisbizmode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_findervideoisbizmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.ProfileSetting _Setting = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizNameCard _NameCard = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__namecard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo _LiveExtInfo = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__liveextinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _IpWording = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__ipwording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_ipwording().data(), this->_ipwording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.BizProfileV2Resp._IpWording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .MMPro.micromsg.WxaEcEntranceInfo _WxaEcEntranceInfo = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable__wxaecentranceinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _ShowSubBizRec = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {
          set_has__showsubbizrec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_showsubbizrec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 _AudioTabType = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {
          set_has__audiotabtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &_audiotabtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.BizProfileV2Resp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.BizProfileV2Resp)
  return false;
#undef DO_
}

void BizProfileV2Resp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.BizProfileV2Resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->_baseresponse_, output);
  }

  // optional .MMPro.micromsg.BizAccountInfo _AccountInfo = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->_accountinfo_, output);
  }

  // optional .MMPro.micromsg.BizBaseInfo _BizBaseInfo = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->_bizbaseinfo_, output);
  }

  // optional .MMPro.micromsg.BizMessageList _MsgList = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->_msglist_, output);
  }

  // optional .MMPro.micromsg.BizBrandInfo _BrandInfo = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->_brandinfo_, output);
  }

  // optional .MMPro.micromsg.BizMessageList _VideoList = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->_videolist_, output);
  }

  // optional .MMPro.micromsg.BizServiceInfo _ServiceInfo = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->_serviceinfo_, output);
  }

  // optional uint32 _FuncFlag = 8;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->_funcflag(), output);
  }

  // repeated .MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc _FuncFlagWording = 9;
  for (unsigned int i = 0, n = this->_funcflagwording_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_funcflagwording(i), output);
  }

  // optional uint32 _PreLoad = 10;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_preload(), output);
  }

  // optional string _SearchGuideInfo = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_searchguideinfo().data(), this->_searchguideinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->_searchguideinfo(), output);
  }

  // optional .MMPro.micromsg.BizTopicList _BizTopicList = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->_biztopiclist_, output);
  }

  // optional .MMPro.micromsg.BizVideoFinderInfo _BizVideoFinderInfo = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->_bizvideofinderinfo_, output);
  }

  // optional .MMPro.micromsg.BizMessageList _ShortMsgList = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->_shortmsglist_, output);
  }

  // optional int32 _VideoTabType = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->_videotabtype(), output);
  }

  // optional int32 _ShortMsgTabType = 18;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->_shortmsgtabtype(), output);
  }

  // repeated .MMPro.micromsg.FinderLiveNoticeInfo _LiveInfo = 20;
  for (unsigned int i = 0, n = this->_liveinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_liveinfo(i), output);
  }

  // optional bool _FinderVideoIsBizMode = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->_findervideoisbizmode(), output);
  }

  // optional .MMPro.micromsg.ProfileSetting _Setting = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->_setting_, output);
  }

  // optional .MMPro.micromsg.BizNameCard _NameCard = 23;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->_namecard_, output);
  }

  // optional .MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo _LiveExtInfo = 24;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->_liveextinfo_, output);
  }

  // optional string _IpWording = 25;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_ipwording().data(), this->_ipwording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp._IpWording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->_ipwording(), output);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo _WxaEcEntranceInfo = 26;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->_wxaecentranceinfo_, output);
  }

  // optional uint32 _ShowSubBizRec = 27;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->_showsubbizrec(), output);
  }

  // optional int32 _AudioTabType = 28;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->_audiotabtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.BizProfileV2Resp)
}

::google::protobuf::uint8* BizProfileV2Resp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.BizProfileV2Resp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->_baseresponse_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizAccountInfo _AccountInfo = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->_accountinfo_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizBaseInfo _BizBaseInfo = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->_bizbaseinfo_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizMessageList _MsgList = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->_msglist_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizBrandInfo _BrandInfo = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->_brandinfo_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizMessageList _VideoList = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->_videolist_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizServiceInfo _ServiceInfo = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->_serviceinfo_, deterministic, target);
  }

  // optional uint32 _FuncFlag = 8;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->_funcflag(), target);
  }

  // repeated .MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc _FuncFlagWording = 9;
  for (unsigned int i = 0, n = this->_funcflagwording_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->_funcflagwording(i), deterministic, target);
  }

  // optional uint32 _PreLoad = 10;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_preload(), target);
  }

  // optional string _SearchGuideInfo = 12;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_searchguideinfo().data(), this->_searchguideinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->_searchguideinfo(), target);
  }

  // optional .MMPro.micromsg.BizTopicList _BizTopicList = 13;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->_biztopiclist_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizVideoFinderInfo _BizVideoFinderInfo = 14;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->_bizvideofinderinfo_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizMessageList _ShortMsgList = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->_shortmsglist_, deterministic, target);
  }

  // optional int32 _VideoTabType = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->_videotabtype(), target);
  }

  // optional int32 _ShortMsgTabType = 18;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->_shortmsgtabtype(), target);
  }

  // repeated .MMPro.micromsg.FinderLiveNoticeInfo _LiveInfo = 20;
  for (unsigned int i = 0, n = this->_liveinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->_liveinfo(i), deterministic, target);
  }

  // optional bool _FinderVideoIsBizMode = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->_findervideoisbizmode(), target);
  }

  // optional .MMPro.micromsg.ProfileSetting _Setting = 22;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->_setting_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizNameCard _NameCard = 23;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->_namecard_, deterministic, target);
  }

  // optional .MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo _LiveExtInfo = 24;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->_liveextinfo_, deterministic, target);
  }

  // optional string _IpWording = 25;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_ipwording().data(), this->_ipwording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.BizProfileV2Resp._IpWording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->_ipwording(), target);
  }

  // optional .MMPro.micromsg.WxaEcEntranceInfo _WxaEcEntranceInfo = 26;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->_wxaecentranceinfo_, deterministic, target);
  }

  // optional uint32 _ShowSubBizRec = 27;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->_showsubbizrec(), target);
  }

  // optional int32 _AudioTabType = 28;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->_audiotabtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.BizProfileV2Resp)
  return target;
}

size_t BizProfileV2Resp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.BizProfileV2Resp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  if (has__baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->_baseresponse_);
  }
  // repeated .MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc _FuncFlagWording = 9;
  {
    unsigned int count = this->_funcflagwording_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_funcflagwording(i));
    }
  }

  // repeated .MMPro.micromsg.FinderLiveNoticeInfo _LiveInfo = 20;
  {
    unsigned int count = this->_liveinfo_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->_liveinfo(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string _SearchGuideInfo = 12;
    if (has__searchguideinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_searchguideinfo());
    }

    // optional string _IpWording = 25;
    if (has__ipwording()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_ipwording());
    }

  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional .MMPro.micromsg.BizAccountInfo _AccountInfo = 2;
    if (has__accountinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_accountinfo_);
    }

    // optional .MMPro.micromsg.BizBaseInfo _BizBaseInfo = 3;
    if (has__bizbaseinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_bizbaseinfo_);
    }

    // optional .MMPro.micromsg.BizMessageList _MsgList = 4;
    if (has__msglist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_msglist_);
    }

    // optional .MMPro.micromsg.BizBrandInfo _BrandInfo = 5;
    if (has__brandinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_brandinfo_);
    }

    // optional .MMPro.micromsg.BizMessageList _VideoList = 6;
    if (has__videolist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_videolist_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .MMPro.micromsg.BizServiceInfo _ServiceInfo = 7;
    if (has__serviceinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_serviceinfo_);
    }

    // optional .MMPro.micromsg.BizTopicList _BizTopicList = 13;
    if (has__biztopiclist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_biztopiclist_);
    }

    // optional .MMPro.micromsg.BizVideoFinderInfo _BizVideoFinderInfo = 14;
    if (has__bizvideofinderinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_bizvideofinderinfo_);
    }

    // optional .MMPro.micromsg.BizMessageList _ShortMsgList = 15;
    if (has__shortmsglist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_shortmsglist_);
    }

    // optional .MMPro.micromsg.ProfileSetting _Setting = 22;
    if (has__setting()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_setting_);
    }

    // optional .MMPro.micromsg.BizNameCard _NameCard = 23;
    if (has__namecard()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_namecard_);
    }

    // optional .MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo _LiveExtInfo = 24;
    if (has__liveextinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_liveextinfo_);
    }

    // optional .MMPro.micromsg.WxaEcEntranceInfo _WxaEcEntranceInfo = 26;
    if (has__wxaecentranceinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->_wxaecentranceinfo_);
    }

  }
  if (_has_bits_[16 / 32] & 8323072u) {
    // optional uint32 _FuncFlag = 8;
    if (has__funcflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_funcflag());
    }

    // optional uint32 _PreLoad = 10;
    if (has__preload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_preload());
    }

    // optional int32 _VideoTabType = 17;
    if (has__videotabtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_videotabtype());
    }

    // optional int32 _ShortMsgTabType = 18;
    if (has__shortmsgtabtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_shortmsgtabtype());
    }

    // optional bool _FinderVideoIsBizMode = 21;
    if (has__findervideoisbizmode()) {
      total_size += 2 + 1;
    }

    // optional uint32 _ShowSubBizRec = 27;
    if (has__showsubbizrec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_showsubbizrec());
    }

    // optional int32 _AudioTabType = 28;
    if (has__audiotabtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->_audiotabtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizProfileV2Resp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.BizProfileV2Resp)
  GOOGLE_DCHECK_NE(&from, this);
  const BizProfileV2Resp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizProfileV2Resp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.BizProfileV2Resp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.BizProfileV2Resp)
    MergeFrom(*source);
  }
}

void BizProfileV2Resp::MergeFrom(const BizProfileV2Resp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.BizProfileV2Resp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _funcflagwording_.MergeFrom(from._funcflagwording_);
  _liveinfo_.MergeFrom(from._liveinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__searchguideinfo();
      _searchguideinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._searchguideinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__ipwording();
      _ipwording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._ipwording_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable__baseresponse()->::MMPro::micromsg::BaseResponse::MergeFrom(from._baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable__accountinfo()->::MMPro::micromsg::BizAccountInfo::MergeFrom(from._accountinfo());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable__bizbaseinfo()->::MMPro::micromsg::BizBaseInfo::MergeFrom(from._bizbaseinfo());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable__msglist()->::MMPro::micromsg::BizMessageList::MergeFrom(from._msglist());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable__brandinfo()->::MMPro::micromsg::BizBrandInfo::MergeFrom(from._brandinfo());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable__videolist()->::MMPro::micromsg::BizMessageList::MergeFrom(from._videolist());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable__serviceinfo()->::MMPro::micromsg::BizServiceInfo::MergeFrom(from._serviceinfo());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable__biztopiclist()->::MMPro::micromsg::BizTopicList::MergeFrom(from._biztopiclist());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable__bizvideofinderinfo()->::MMPro::micromsg::BizVideoFinderInfo::MergeFrom(from._bizvideofinderinfo());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable__shortmsglist()->::MMPro::micromsg::BizMessageList::MergeFrom(from._shortmsglist());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable__setting()->::MMPro::micromsg::ProfileSetting::MergeFrom(from._setting());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable__namecard()->::MMPro::micromsg::BizNameCard::MergeFrom(from._namecard());
    }
    if (cached_has_bits & 0x00004000u) {
      mutable__liveextinfo()->::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo::MergeFrom(from._liveextinfo());
    }
    if (cached_has_bits & 0x00008000u) {
      mutable__wxaecentranceinfo()->::MMPro::micromsg::WxaEcEntranceInfo::MergeFrom(from._wxaecentranceinfo());
    }
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      _funcflag_ = from._funcflag_;
    }
    if (cached_has_bits & 0x00020000u) {
      _preload_ = from._preload_;
    }
    if (cached_has_bits & 0x00040000u) {
      _videotabtype_ = from._videotabtype_;
    }
    if (cached_has_bits & 0x00080000u) {
      _shortmsgtabtype_ = from._shortmsgtabtype_;
    }
    if (cached_has_bits & 0x00100000u) {
      _findervideoisbizmode_ = from._findervideoisbizmode_;
    }
    if (cached_has_bits & 0x00200000u) {
      _showsubbizrec_ = from._showsubbizrec_;
    }
    if (cached_has_bits & 0x00400000u) {
      _audiotabtype_ = from._audiotabtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizProfileV2Resp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.BizProfileV2Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizProfileV2Resp::CopyFrom(const BizProfileV2Resp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.BizProfileV2Resp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizProfileV2Resp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has__baseresponse()) {
    if (!this->_baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void BizProfileV2Resp::Swap(BizProfileV2Resp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizProfileV2Resp::InternalSwap(BizProfileV2Resp* other) {
  _funcflagwording_.InternalSwap(&other->_funcflagwording_);
  _liveinfo_.InternalSwap(&other->_liveinfo_);
  _searchguideinfo_.Swap(&other->_searchguideinfo_);
  _ipwording_.Swap(&other->_ipwording_);
  std::swap(_baseresponse_, other->_baseresponse_);
  std::swap(_accountinfo_, other->_accountinfo_);
  std::swap(_bizbaseinfo_, other->_bizbaseinfo_);
  std::swap(_msglist_, other->_msglist_);
  std::swap(_brandinfo_, other->_brandinfo_);
  std::swap(_videolist_, other->_videolist_);
  std::swap(_serviceinfo_, other->_serviceinfo_);
  std::swap(_biztopiclist_, other->_biztopiclist_);
  std::swap(_bizvideofinderinfo_, other->_bizvideofinderinfo_);
  std::swap(_shortmsglist_, other->_shortmsglist_);
  std::swap(_setting_, other->_setting_);
  std::swap(_namecard_, other->_namecard_);
  std::swap(_liveextinfo_, other->_liveextinfo_);
  std::swap(_wxaecentranceinfo_, other->_wxaecentranceinfo_);
  std::swap(_funcflag_, other->_funcflag_);
  std::swap(_preload_, other->_preload_);
  std::swap(_videotabtype_, other->_videotabtype_);
  std::swap(_shortmsgtabtype_, other->_shortmsgtabtype_);
  std::swap(_findervideoisbizmode_, other->_findervideoisbizmode_);
  std::swap(_showsubbizrec_, other->_showsubbizrec_);
  std::swap(_audiotabtype_, other->_audiotabtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizProfileV2Resp::GetMetadata() const {
  protobuf_BizProfileV2Resp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_BizProfileV2Resp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizProfileV2Resp

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
bool BizProfileV2Resp::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizProfileV2Resp::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void BizProfileV2Resp::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizProfileV2Resp::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
const ::MMPro::micromsg::BaseResponse& BizProfileV2Resp::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
::MMPro::micromsg::BaseResponse* BizProfileV2Resp::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._BaseResponse)
  return _baseresponse_;
}
::MMPro::micromsg::BaseResponse* BizProfileV2Resp::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._BaseResponse)
}

// optional .MMPro.micromsg.BizAccountInfo _AccountInfo = 2;
bool BizProfileV2Resp::has__accountinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizProfileV2Resp::set_has__accountinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void BizProfileV2Resp::clear_has__accountinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizProfileV2Resp::clear__accountinfo() {
  if (_accountinfo_ != NULL) _accountinfo_->::MMPro::micromsg::BizAccountInfo::Clear();
  clear_has__accountinfo();
}
const ::MMPro::micromsg::BizAccountInfo& BizProfileV2Resp::_accountinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._AccountInfo)
  return _accountinfo_ != NULL ? *_accountinfo_
                         : *::MMPro::micromsg::BizAccountInfo::internal_default_instance();
}
::MMPro::micromsg::BizAccountInfo* BizProfileV2Resp::mutable__accountinfo() {
  set_has__accountinfo();
  if (_accountinfo_ == NULL) {
    _accountinfo_ = new ::MMPro::micromsg::BizAccountInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._AccountInfo)
  return _accountinfo_;
}
::MMPro::micromsg::BizAccountInfo* BizProfileV2Resp::release__accountinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._AccountInfo)
  clear_has__accountinfo();
  ::MMPro::micromsg::BizAccountInfo* temp = _accountinfo_;
  _accountinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__accountinfo(::MMPro::micromsg::BizAccountInfo* _accountinfo) {
  delete _accountinfo_;
  _accountinfo_ = _accountinfo;
  if (_accountinfo) {
    set_has__accountinfo();
  } else {
    clear_has__accountinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._AccountInfo)
}

// optional .MMPro.micromsg.BizBaseInfo _BizBaseInfo = 3;
bool BizProfileV2Resp::has__bizbaseinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizProfileV2Resp::set_has__bizbaseinfo() {
  _has_bits_[0] |= 0x00000010u;
}
void BizProfileV2Resp::clear_has__bizbaseinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizProfileV2Resp::clear__bizbaseinfo() {
  if (_bizbaseinfo_ != NULL) _bizbaseinfo_->::MMPro::micromsg::BizBaseInfo::Clear();
  clear_has__bizbaseinfo();
}
const ::MMPro::micromsg::BizBaseInfo& BizProfileV2Resp::_bizbaseinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._BizBaseInfo)
  return _bizbaseinfo_ != NULL ? *_bizbaseinfo_
                         : *::MMPro::micromsg::BizBaseInfo::internal_default_instance();
}
::MMPro::micromsg::BizBaseInfo* BizProfileV2Resp::mutable__bizbaseinfo() {
  set_has__bizbaseinfo();
  if (_bizbaseinfo_ == NULL) {
    _bizbaseinfo_ = new ::MMPro::micromsg::BizBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._BizBaseInfo)
  return _bizbaseinfo_;
}
::MMPro::micromsg::BizBaseInfo* BizProfileV2Resp::release__bizbaseinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._BizBaseInfo)
  clear_has__bizbaseinfo();
  ::MMPro::micromsg::BizBaseInfo* temp = _bizbaseinfo_;
  _bizbaseinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__bizbaseinfo(::MMPro::micromsg::BizBaseInfo* _bizbaseinfo) {
  delete _bizbaseinfo_;
  _bizbaseinfo_ = _bizbaseinfo;
  if (_bizbaseinfo) {
    set_has__bizbaseinfo();
  } else {
    clear_has__bizbaseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._BizBaseInfo)
}

// optional .MMPro.micromsg.BizMessageList _MsgList = 4;
bool BizProfileV2Resp::has__msglist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizProfileV2Resp::set_has__msglist() {
  _has_bits_[0] |= 0x00000020u;
}
void BizProfileV2Resp::clear_has__msglist() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizProfileV2Resp::clear__msglist() {
  if (_msglist_ != NULL) _msglist_->::MMPro::micromsg::BizMessageList::Clear();
  clear_has__msglist();
}
const ::MMPro::micromsg::BizMessageList& BizProfileV2Resp::_msglist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._MsgList)
  return _msglist_ != NULL ? *_msglist_
                         : *::MMPro::micromsg::BizMessageList::internal_default_instance();
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::mutable__msglist() {
  set_has__msglist();
  if (_msglist_ == NULL) {
    _msglist_ = new ::MMPro::micromsg::BizMessageList;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._MsgList)
  return _msglist_;
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::release__msglist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._MsgList)
  clear_has__msglist();
  ::MMPro::micromsg::BizMessageList* temp = _msglist_;
  _msglist_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__msglist(::MMPro::micromsg::BizMessageList* _msglist) {
  delete _msglist_;
  _msglist_ = _msglist;
  if (_msglist) {
    set_has__msglist();
  } else {
    clear_has__msglist();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._MsgList)
}

// optional .MMPro.micromsg.BizBrandInfo _BrandInfo = 5;
bool BizProfileV2Resp::has__brandinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BizProfileV2Resp::set_has__brandinfo() {
  _has_bits_[0] |= 0x00000040u;
}
void BizProfileV2Resp::clear_has__brandinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
void BizProfileV2Resp::clear__brandinfo() {
  if (_brandinfo_ != NULL) _brandinfo_->::MMPro::micromsg::BizBrandInfo::Clear();
  clear_has__brandinfo();
}
const ::MMPro::micromsg::BizBrandInfo& BizProfileV2Resp::_brandinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._BrandInfo)
  return _brandinfo_ != NULL ? *_brandinfo_
                         : *::MMPro::micromsg::BizBrandInfo::internal_default_instance();
}
::MMPro::micromsg::BizBrandInfo* BizProfileV2Resp::mutable__brandinfo() {
  set_has__brandinfo();
  if (_brandinfo_ == NULL) {
    _brandinfo_ = new ::MMPro::micromsg::BizBrandInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._BrandInfo)
  return _brandinfo_;
}
::MMPro::micromsg::BizBrandInfo* BizProfileV2Resp::release__brandinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._BrandInfo)
  clear_has__brandinfo();
  ::MMPro::micromsg::BizBrandInfo* temp = _brandinfo_;
  _brandinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__brandinfo(::MMPro::micromsg::BizBrandInfo* _brandinfo) {
  delete _brandinfo_;
  _brandinfo_ = _brandinfo;
  if (_brandinfo) {
    set_has__brandinfo();
  } else {
    clear_has__brandinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._BrandInfo)
}

// optional .MMPro.micromsg.BizMessageList _VideoList = 6;
bool BizProfileV2Resp::has__videolist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BizProfileV2Resp::set_has__videolist() {
  _has_bits_[0] |= 0x00000080u;
}
void BizProfileV2Resp::clear_has__videolist() {
  _has_bits_[0] &= ~0x00000080u;
}
void BizProfileV2Resp::clear__videolist() {
  if (_videolist_ != NULL) _videolist_->::MMPro::micromsg::BizMessageList::Clear();
  clear_has__videolist();
}
const ::MMPro::micromsg::BizMessageList& BizProfileV2Resp::_videolist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._VideoList)
  return _videolist_ != NULL ? *_videolist_
                         : *::MMPro::micromsg::BizMessageList::internal_default_instance();
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::mutable__videolist() {
  set_has__videolist();
  if (_videolist_ == NULL) {
    _videolist_ = new ::MMPro::micromsg::BizMessageList;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._VideoList)
  return _videolist_;
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::release__videolist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._VideoList)
  clear_has__videolist();
  ::MMPro::micromsg::BizMessageList* temp = _videolist_;
  _videolist_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__videolist(::MMPro::micromsg::BizMessageList* _videolist) {
  delete _videolist_;
  _videolist_ = _videolist;
  if (_videolist) {
    set_has__videolist();
  } else {
    clear_has__videolist();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._VideoList)
}

// optional .MMPro.micromsg.BizServiceInfo _ServiceInfo = 7;
bool BizProfileV2Resp::has__serviceinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BizProfileV2Resp::set_has__serviceinfo() {
  _has_bits_[0] |= 0x00000100u;
}
void BizProfileV2Resp::clear_has__serviceinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
void BizProfileV2Resp::clear__serviceinfo() {
  if (_serviceinfo_ != NULL) _serviceinfo_->::MMPro::micromsg::BizServiceInfo::Clear();
  clear_has__serviceinfo();
}
const ::MMPro::micromsg::BizServiceInfo& BizProfileV2Resp::_serviceinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._ServiceInfo)
  return _serviceinfo_ != NULL ? *_serviceinfo_
                         : *::MMPro::micromsg::BizServiceInfo::internal_default_instance();
}
::MMPro::micromsg::BizServiceInfo* BizProfileV2Resp::mutable__serviceinfo() {
  set_has__serviceinfo();
  if (_serviceinfo_ == NULL) {
    _serviceinfo_ = new ::MMPro::micromsg::BizServiceInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._ServiceInfo)
  return _serviceinfo_;
}
::MMPro::micromsg::BizServiceInfo* BizProfileV2Resp::release__serviceinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._ServiceInfo)
  clear_has__serviceinfo();
  ::MMPro::micromsg::BizServiceInfo* temp = _serviceinfo_;
  _serviceinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__serviceinfo(::MMPro::micromsg::BizServiceInfo* _serviceinfo) {
  delete _serviceinfo_;
  _serviceinfo_ = _serviceinfo;
  if (_serviceinfo) {
    set_has__serviceinfo();
  } else {
    clear_has__serviceinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._ServiceInfo)
}

// optional uint32 _FuncFlag = 8;
bool BizProfileV2Resp::has__funcflag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void BizProfileV2Resp::set_has__funcflag() {
  _has_bits_[0] |= 0x00010000u;
}
void BizProfileV2Resp::clear_has__funcflag() {
  _has_bits_[0] &= ~0x00010000u;
}
void BizProfileV2Resp::clear__funcflag() {
  _funcflag_ = 0u;
  clear_has__funcflag();
}
::google::protobuf::uint32 BizProfileV2Resp::_funcflag() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._FuncFlag)
  return _funcflag_;
}
void BizProfileV2Resp::set__funcflag(::google::protobuf::uint32 value) {
  set_has__funcflag();
  _funcflag_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._FuncFlag)
}

// repeated .MMPro.micromsg.BizProfileV2Resp.FuncFlagDesc _FuncFlagWording = 9;
int BizProfileV2Resp::_funcflagwording_size() const {
  return _funcflagwording_.size();
}
void BizProfileV2Resp::clear__funcflagwording() {
  _funcflagwording_.Clear();
}
const ::MMPro::micromsg::BizProfileV2Resp_FuncFlagDesc& BizProfileV2Resp::_funcflagwording(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._FuncFlagWording)
  return _funcflagwording_.Get(index);
}
::MMPro::micromsg::BizProfileV2Resp_FuncFlagDesc* BizProfileV2Resp::mutable__funcflagwording(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._FuncFlagWording)
  return _funcflagwording_.Mutable(index);
}
::MMPro::micromsg::BizProfileV2Resp_FuncFlagDesc* BizProfileV2Resp::add__funcflagwording() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizProfileV2Resp._FuncFlagWording)
  return _funcflagwording_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizProfileV2Resp_FuncFlagDesc >*
BizProfileV2Resp::mutable__funcflagwording() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizProfileV2Resp._FuncFlagWording)
  return &_funcflagwording_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::BizProfileV2Resp_FuncFlagDesc >&
BizProfileV2Resp::_funcflagwording() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizProfileV2Resp._FuncFlagWording)
  return _funcflagwording_;
}

// optional uint32 _PreLoad = 10;
bool BizProfileV2Resp::has__preload() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void BizProfileV2Resp::set_has__preload() {
  _has_bits_[0] |= 0x00020000u;
}
void BizProfileV2Resp::clear_has__preload() {
  _has_bits_[0] &= ~0x00020000u;
}
void BizProfileV2Resp::clear__preload() {
  _preload_ = 0u;
  clear_has__preload();
}
::google::protobuf::uint32 BizProfileV2Resp::_preload() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._PreLoad)
  return _preload_;
}
void BizProfileV2Resp::set__preload(::google::protobuf::uint32 value) {
  set_has__preload();
  _preload_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._PreLoad)
}

// optional string _SearchGuideInfo = 12;
bool BizProfileV2Resp::has__searchguideinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizProfileV2Resp::set_has__searchguideinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void BizProfileV2Resp::clear_has__searchguideinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizProfileV2Resp::clear__searchguideinfo() {
  _searchguideinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__searchguideinfo();
}
const ::std::string& BizProfileV2Resp::_searchguideinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
  return _searchguideinfo_.GetNoArena();
}
void BizProfileV2Resp::set__searchguideinfo(const ::std::string& value) {
  set_has__searchguideinfo();
  _searchguideinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
}
#if LANG_CXX11
void BizProfileV2Resp::set__searchguideinfo(::std::string&& value) {
  set_has__searchguideinfo();
  _searchguideinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
}
#endif
void BizProfileV2Resp::set__searchguideinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__searchguideinfo();
  _searchguideinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
}
void BizProfileV2Resp::set__searchguideinfo(const char* value, size_t size) {
  set_has__searchguideinfo();
  _searchguideinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
}
::std::string* BizProfileV2Resp::mutable__searchguideinfo() {
  set_has__searchguideinfo();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
  return _searchguideinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileV2Resp::release__searchguideinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
  clear_has__searchguideinfo();
  return _searchguideinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileV2Resp::set_allocated__searchguideinfo(::std::string* _searchguideinfo) {
  if (_searchguideinfo != NULL) {
    set_has__searchguideinfo();
  } else {
    clear_has__searchguideinfo();
  }
  _searchguideinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _searchguideinfo);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._SearchGuideInfo)
}

// optional .MMPro.micromsg.BizTopicList _BizTopicList = 13;
bool BizProfileV2Resp::has__biztopiclist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BizProfileV2Resp::set_has__biztopiclist() {
  _has_bits_[0] |= 0x00000200u;
}
void BizProfileV2Resp::clear_has__biztopiclist() {
  _has_bits_[0] &= ~0x00000200u;
}
void BizProfileV2Resp::clear__biztopiclist() {
  if (_biztopiclist_ != NULL) _biztopiclist_->::MMPro::micromsg::BizTopicList::Clear();
  clear_has__biztopiclist();
}
const ::MMPro::micromsg::BizTopicList& BizProfileV2Resp::_biztopiclist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._BizTopicList)
  return _biztopiclist_ != NULL ? *_biztopiclist_
                         : *::MMPro::micromsg::BizTopicList::internal_default_instance();
}
::MMPro::micromsg::BizTopicList* BizProfileV2Resp::mutable__biztopiclist() {
  set_has__biztopiclist();
  if (_biztopiclist_ == NULL) {
    _biztopiclist_ = new ::MMPro::micromsg::BizTopicList;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._BizTopicList)
  return _biztopiclist_;
}
::MMPro::micromsg::BizTopicList* BizProfileV2Resp::release__biztopiclist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._BizTopicList)
  clear_has__biztopiclist();
  ::MMPro::micromsg::BizTopicList* temp = _biztopiclist_;
  _biztopiclist_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__biztopiclist(::MMPro::micromsg::BizTopicList* _biztopiclist) {
  delete _biztopiclist_;
  _biztopiclist_ = _biztopiclist;
  if (_biztopiclist) {
    set_has__biztopiclist();
  } else {
    clear_has__biztopiclist();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._BizTopicList)
}

// optional .MMPro.micromsg.BizVideoFinderInfo _BizVideoFinderInfo = 14;
bool BizProfileV2Resp::has__bizvideofinderinfo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BizProfileV2Resp::set_has__bizvideofinderinfo() {
  _has_bits_[0] |= 0x00000400u;
}
void BizProfileV2Resp::clear_has__bizvideofinderinfo() {
  _has_bits_[0] &= ~0x00000400u;
}
void BizProfileV2Resp::clear__bizvideofinderinfo() {
  if (_bizvideofinderinfo_ != NULL) _bizvideofinderinfo_->::MMPro::micromsg::BizVideoFinderInfo::Clear();
  clear_has__bizvideofinderinfo();
}
const ::MMPro::micromsg::BizVideoFinderInfo& BizProfileV2Resp::_bizvideofinderinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._BizVideoFinderInfo)
  return _bizvideofinderinfo_ != NULL ? *_bizvideofinderinfo_
                         : *::MMPro::micromsg::BizVideoFinderInfo::internal_default_instance();
}
::MMPro::micromsg::BizVideoFinderInfo* BizProfileV2Resp::mutable__bizvideofinderinfo() {
  set_has__bizvideofinderinfo();
  if (_bizvideofinderinfo_ == NULL) {
    _bizvideofinderinfo_ = new ::MMPro::micromsg::BizVideoFinderInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._BizVideoFinderInfo)
  return _bizvideofinderinfo_;
}
::MMPro::micromsg::BizVideoFinderInfo* BizProfileV2Resp::release__bizvideofinderinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._BizVideoFinderInfo)
  clear_has__bizvideofinderinfo();
  ::MMPro::micromsg::BizVideoFinderInfo* temp = _bizvideofinderinfo_;
  _bizvideofinderinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__bizvideofinderinfo(::MMPro::micromsg::BizVideoFinderInfo* _bizvideofinderinfo) {
  delete _bizvideofinderinfo_;
  _bizvideofinderinfo_ = _bizvideofinderinfo;
  if (_bizvideofinderinfo) {
    set_has__bizvideofinderinfo();
  } else {
    clear_has__bizvideofinderinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._BizVideoFinderInfo)
}

// optional .MMPro.micromsg.BizMessageList _ShortMsgList = 15;
bool BizProfileV2Resp::has__shortmsglist() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BizProfileV2Resp::set_has__shortmsglist() {
  _has_bits_[0] |= 0x00000800u;
}
void BizProfileV2Resp::clear_has__shortmsglist() {
  _has_bits_[0] &= ~0x00000800u;
}
void BizProfileV2Resp::clear__shortmsglist() {
  if (_shortmsglist_ != NULL) _shortmsglist_->::MMPro::micromsg::BizMessageList::Clear();
  clear_has__shortmsglist();
}
const ::MMPro::micromsg::BizMessageList& BizProfileV2Resp::_shortmsglist() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._ShortMsgList)
  return _shortmsglist_ != NULL ? *_shortmsglist_
                         : *::MMPro::micromsg::BizMessageList::internal_default_instance();
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::mutable__shortmsglist() {
  set_has__shortmsglist();
  if (_shortmsglist_ == NULL) {
    _shortmsglist_ = new ::MMPro::micromsg::BizMessageList;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._ShortMsgList)
  return _shortmsglist_;
}
::MMPro::micromsg::BizMessageList* BizProfileV2Resp::release__shortmsglist() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._ShortMsgList)
  clear_has__shortmsglist();
  ::MMPro::micromsg::BizMessageList* temp = _shortmsglist_;
  _shortmsglist_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__shortmsglist(::MMPro::micromsg::BizMessageList* _shortmsglist) {
  delete _shortmsglist_;
  _shortmsglist_ = _shortmsglist;
  if (_shortmsglist) {
    set_has__shortmsglist();
  } else {
    clear_has__shortmsglist();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._ShortMsgList)
}

// optional int32 _VideoTabType = 17;
bool BizProfileV2Resp::has__videotabtype() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void BizProfileV2Resp::set_has__videotabtype() {
  _has_bits_[0] |= 0x00040000u;
}
void BizProfileV2Resp::clear_has__videotabtype() {
  _has_bits_[0] &= ~0x00040000u;
}
void BizProfileV2Resp::clear__videotabtype() {
  _videotabtype_ = 0;
  clear_has__videotabtype();
}
::google::protobuf::int32 BizProfileV2Resp::_videotabtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._VideoTabType)
  return _videotabtype_;
}
void BizProfileV2Resp::set__videotabtype(::google::protobuf::int32 value) {
  set_has__videotabtype();
  _videotabtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._VideoTabType)
}

// optional int32 _ShortMsgTabType = 18;
bool BizProfileV2Resp::has__shortmsgtabtype() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void BizProfileV2Resp::set_has__shortmsgtabtype() {
  _has_bits_[0] |= 0x00080000u;
}
void BizProfileV2Resp::clear_has__shortmsgtabtype() {
  _has_bits_[0] &= ~0x00080000u;
}
void BizProfileV2Resp::clear__shortmsgtabtype() {
  _shortmsgtabtype_ = 0;
  clear_has__shortmsgtabtype();
}
::google::protobuf::int32 BizProfileV2Resp::_shortmsgtabtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._ShortMsgTabType)
  return _shortmsgtabtype_;
}
void BizProfileV2Resp::set__shortmsgtabtype(::google::protobuf::int32 value) {
  set_has__shortmsgtabtype();
  _shortmsgtabtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._ShortMsgTabType)
}

// repeated .MMPro.micromsg.FinderLiveNoticeInfo _LiveInfo = 20;
int BizProfileV2Resp::_liveinfo_size() const {
  return _liveinfo_.size();
}
void BizProfileV2Resp::clear__liveinfo() {
  _liveinfo_.Clear();
}
const ::MMPro::micromsg::FinderLiveNoticeInfo& BizProfileV2Resp::_liveinfo(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._LiveInfo)
  return _liveinfo_.Get(index);
}
::MMPro::micromsg::FinderLiveNoticeInfo* BizProfileV2Resp::mutable__liveinfo(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._LiveInfo)
  return _liveinfo_.Mutable(index);
}
::MMPro::micromsg::FinderLiveNoticeInfo* BizProfileV2Resp::add__liveinfo() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.BizProfileV2Resp._LiveInfo)
  return _liveinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::FinderLiveNoticeInfo >*
BizProfileV2Resp::mutable__liveinfo() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.BizProfileV2Resp._LiveInfo)
  return &_liveinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::FinderLiveNoticeInfo >&
BizProfileV2Resp::_liveinfo() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.BizProfileV2Resp._LiveInfo)
  return _liveinfo_;
}

// optional bool _FinderVideoIsBizMode = 21;
bool BizProfileV2Resp::has__findervideoisbizmode() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void BizProfileV2Resp::set_has__findervideoisbizmode() {
  _has_bits_[0] |= 0x00100000u;
}
void BizProfileV2Resp::clear_has__findervideoisbizmode() {
  _has_bits_[0] &= ~0x00100000u;
}
void BizProfileV2Resp::clear__findervideoisbizmode() {
  _findervideoisbizmode_ = false;
  clear_has__findervideoisbizmode();
}
bool BizProfileV2Resp::_findervideoisbizmode() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._FinderVideoIsBizMode)
  return _findervideoisbizmode_;
}
void BizProfileV2Resp::set__findervideoisbizmode(bool value) {
  set_has__findervideoisbizmode();
  _findervideoisbizmode_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._FinderVideoIsBizMode)
}

// optional .MMPro.micromsg.ProfileSetting _Setting = 22;
bool BizProfileV2Resp::has__setting() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BizProfileV2Resp::set_has__setting() {
  _has_bits_[0] |= 0x00001000u;
}
void BizProfileV2Resp::clear_has__setting() {
  _has_bits_[0] &= ~0x00001000u;
}
void BizProfileV2Resp::clear__setting() {
  if (_setting_ != NULL) _setting_->::MMPro::micromsg::ProfileSetting::Clear();
  clear_has__setting();
}
const ::MMPro::micromsg::ProfileSetting& BizProfileV2Resp::_setting() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._Setting)
  return _setting_ != NULL ? *_setting_
                         : *::MMPro::micromsg::ProfileSetting::internal_default_instance();
}
::MMPro::micromsg::ProfileSetting* BizProfileV2Resp::mutable__setting() {
  set_has__setting();
  if (_setting_ == NULL) {
    _setting_ = new ::MMPro::micromsg::ProfileSetting;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._Setting)
  return _setting_;
}
::MMPro::micromsg::ProfileSetting* BizProfileV2Resp::release__setting() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._Setting)
  clear_has__setting();
  ::MMPro::micromsg::ProfileSetting* temp = _setting_;
  _setting_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__setting(::MMPro::micromsg::ProfileSetting* _setting) {
  delete _setting_;
  _setting_ = _setting;
  if (_setting) {
    set_has__setting();
  } else {
    clear_has__setting();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._Setting)
}

// optional .MMPro.micromsg.BizNameCard _NameCard = 23;
bool BizProfileV2Resp::has__namecard() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BizProfileV2Resp::set_has__namecard() {
  _has_bits_[0] |= 0x00002000u;
}
void BizProfileV2Resp::clear_has__namecard() {
  _has_bits_[0] &= ~0x00002000u;
}
void BizProfileV2Resp::clear__namecard() {
  if (_namecard_ != NULL) _namecard_->::MMPro::micromsg::BizNameCard::Clear();
  clear_has__namecard();
}
const ::MMPro::micromsg::BizNameCard& BizProfileV2Resp::_namecard() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._NameCard)
  return _namecard_ != NULL ? *_namecard_
                         : *::MMPro::micromsg::BizNameCard::internal_default_instance();
}
::MMPro::micromsg::BizNameCard* BizProfileV2Resp::mutable__namecard() {
  set_has__namecard();
  if (_namecard_ == NULL) {
    _namecard_ = new ::MMPro::micromsg::BizNameCard;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._NameCard)
  return _namecard_;
}
::MMPro::micromsg::BizNameCard* BizProfileV2Resp::release__namecard() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._NameCard)
  clear_has__namecard();
  ::MMPro::micromsg::BizNameCard* temp = _namecard_;
  _namecard_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__namecard(::MMPro::micromsg::BizNameCard* _namecard) {
  delete _namecard_;
  _namecard_ = _namecard;
  if (_namecard) {
    set_has__namecard();
  } else {
    clear_has__namecard();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._NameCard)
}

// optional .MMPro.micromsg.BizProfileV2Resp.FinderLiveNoticeExtinfo _LiveExtInfo = 24;
bool BizProfileV2Resp::has__liveextinfo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void BizProfileV2Resp::set_has__liveextinfo() {
  _has_bits_[0] |= 0x00004000u;
}
void BizProfileV2Resp::clear_has__liveextinfo() {
  _has_bits_[0] &= ~0x00004000u;
}
void BizProfileV2Resp::clear__liveextinfo() {
  if (_liveextinfo_ != NULL) _liveextinfo_->::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo::Clear();
  clear_has__liveextinfo();
}
const ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo& BizProfileV2Resp::_liveextinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._LiveExtInfo)
  return _liveextinfo_ != NULL ? *_liveextinfo_
                         : *::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo::internal_default_instance();
}
::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo* BizProfileV2Resp::mutable__liveextinfo() {
  set_has__liveextinfo();
  if (_liveextinfo_ == NULL) {
    _liveextinfo_ = new ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._LiveExtInfo)
  return _liveextinfo_;
}
::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo* BizProfileV2Resp::release__liveextinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._LiveExtInfo)
  clear_has__liveextinfo();
  ::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo* temp = _liveextinfo_;
  _liveextinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__liveextinfo(::MMPro::micromsg::BizProfileV2Resp_FinderLiveNoticeExtinfo* _liveextinfo) {
  delete _liveextinfo_;
  _liveextinfo_ = _liveextinfo;
  if (_liveextinfo) {
    set_has__liveextinfo();
  } else {
    clear_has__liveextinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._LiveExtInfo)
}

// optional string _IpWording = 25;
bool BizProfileV2Resp::has__ipwording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizProfileV2Resp::set_has__ipwording() {
  _has_bits_[0] |= 0x00000002u;
}
void BizProfileV2Resp::clear_has__ipwording() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizProfileV2Resp::clear__ipwording() {
  _ipwording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__ipwording();
}
const ::std::string& BizProfileV2Resp::_ipwording() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._IpWording)
  return _ipwording_.GetNoArena();
}
void BizProfileV2Resp::set__ipwording(const ::std::string& value) {
  set_has__ipwording();
  _ipwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._IpWording)
}
#if LANG_CXX11
void BizProfileV2Resp::set__ipwording(::std::string&& value) {
  set_has__ipwording();
  _ipwording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.BizProfileV2Resp._IpWording)
}
#endif
void BizProfileV2Resp::set__ipwording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__ipwording();
  _ipwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.BizProfileV2Resp._IpWording)
}
void BizProfileV2Resp::set__ipwording(const char* value, size_t size) {
  set_has__ipwording();
  _ipwording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.BizProfileV2Resp._IpWording)
}
::std::string* BizProfileV2Resp::mutable__ipwording() {
  set_has__ipwording();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._IpWording)
  return _ipwording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizProfileV2Resp::release__ipwording() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._IpWording)
  clear_has__ipwording();
  return _ipwording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizProfileV2Resp::set_allocated__ipwording(::std::string* _ipwording) {
  if (_ipwording != NULL) {
    set_has__ipwording();
  } else {
    clear_has__ipwording();
  }
  _ipwording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _ipwording);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._IpWording)
}

// optional .MMPro.micromsg.WxaEcEntranceInfo _WxaEcEntranceInfo = 26;
bool BizProfileV2Resp::has__wxaecentranceinfo() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BizProfileV2Resp::set_has__wxaecentranceinfo() {
  _has_bits_[0] |= 0x00008000u;
}
void BizProfileV2Resp::clear_has__wxaecentranceinfo() {
  _has_bits_[0] &= ~0x00008000u;
}
void BizProfileV2Resp::clear__wxaecentranceinfo() {
  if (_wxaecentranceinfo_ != NULL) _wxaecentranceinfo_->::MMPro::micromsg::WxaEcEntranceInfo::Clear();
  clear_has__wxaecentranceinfo();
}
const ::MMPro::micromsg::WxaEcEntranceInfo& BizProfileV2Resp::_wxaecentranceinfo() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._WxaEcEntranceInfo)
  return _wxaecentranceinfo_ != NULL ? *_wxaecentranceinfo_
                         : *::MMPro::micromsg::WxaEcEntranceInfo::internal_default_instance();
}
::MMPro::micromsg::WxaEcEntranceInfo* BizProfileV2Resp::mutable__wxaecentranceinfo() {
  set_has__wxaecentranceinfo();
  if (_wxaecentranceinfo_ == NULL) {
    _wxaecentranceinfo_ = new ::MMPro::micromsg::WxaEcEntranceInfo;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.BizProfileV2Resp._WxaEcEntranceInfo)
  return _wxaecentranceinfo_;
}
::MMPro::micromsg::WxaEcEntranceInfo* BizProfileV2Resp::release__wxaecentranceinfo() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.BizProfileV2Resp._WxaEcEntranceInfo)
  clear_has__wxaecentranceinfo();
  ::MMPro::micromsg::WxaEcEntranceInfo* temp = _wxaecentranceinfo_;
  _wxaecentranceinfo_ = NULL;
  return temp;
}
void BizProfileV2Resp::set_allocated__wxaecentranceinfo(::MMPro::micromsg::WxaEcEntranceInfo* _wxaecentranceinfo) {
  delete _wxaecentranceinfo_;
  _wxaecentranceinfo_ = _wxaecentranceinfo;
  if (_wxaecentranceinfo) {
    set_has__wxaecentranceinfo();
  } else {
    clear_has__wxaecentranceinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.BizProfileV2Resp._WxaEcEntranceInfo)
}

// optional uint32 _ShowSubBizRec = 27;
bool BizProfileV2Resp::has__showsubbizrec() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void BizProfileV2Resp::set_has__showsubbizrec() {
  _has_bits_[0] |= 0x00200000u;
}
void BizProfileV2Resp::clear_has__showsubbizrec() {
  _has_bits_[0] &= ~0x00200000u;
}
void BizProfileV2Resp::clear__showsubbizrec() {
  _showsubbizrec_ = 0u;
  clear_has__showsubbizrec();
}
::google::protobuf::uint32 BizProfileV2Resp::_showsubbizrec() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._ShowSubBizRec)
  return _showsubbizrec_;
}
void BizProfileV2Resp::set__showsubbizrec(::google::protobuf::uint32 value) {
  set_has__showsubbizrec();
  _showsubbizrec_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._ShowSubBizRec)
}

// optional int32 _AudioTabType = 28;
bool BizProfileV2Resp::has__audiotabtype() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void BizProfileV2Resp::set_has__audiotabtype() {
  _has_bits_[0] |= 0x00400000u;
}
void BizProfileV2Resp::clear_has__audiotabtype() {
  _has_bits_[0] &= ~0x00400000u;
}
void BizProfileV2Resp::clear__audiotabtype() {
  _audiotabtype_ = 0;
  clear_has__audiotabtype();
}
::google::protobuf::int32 BizProfileV2Resp::_audiotabtype() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.BizProfileV2Resp._AudioTabType)
  return _audiotabtype_;
}
void BizProfileV2Resp::set__audiotabtype(::google::protobuf::int32 value) {
  set_has__audiotabtype();
  _audiotabtype_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.BizProfileV2Resp._AudioTabType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
