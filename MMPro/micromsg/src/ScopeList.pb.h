// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScopeList.proto

#ifndef PROTOBUF_ScopeList_2eproto__INCLUDED
#define PROTOBUF_ScopeList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class ScopeList;
class ScopeListDefaultTypeInternal;
extern ScopeListDefaultTypeInternal _ScopeList_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_ScopeList_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ScopeList_2eproto

// ===================================================================

class ScopeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.ScopeList) */ {
 public:
  ScopeList();
  virtual ~ScopeList();

  ScopeList(const ScopeList& from);

  inline ScopeList& operator=(const ScopeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScopeList& default_instance();

  static inline const ScopeList* internal_default_instance() {
    return reinterpret_cast<const ScopeList*>(
               &_ScopeList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ScopeList* other);

  // implements Message ----------------------------------------------

  inline ScopeList* New() const PROTOBUF_FINAL { return New(NULL); }

  ScopeList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScopeList& from);
  void MergeFrom(const ScopeList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScopeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _Scope = 1;
  bool has__scope() const;
  void clear__scope();
  static const int kScopeFieldNumber = 1;
  const ::std::string& _scope() const;
  void set__scope(const ::std::string& value);
  #if LANG_CXX11
  void set__scope(::std::string&& value);
  #endif
  void set__scope(const char* value);
  void set__scope(const char* value, size_t size);
  ::std::string* mutable__scope();
  ::std::string* release__scope();
  void set_allocated__scope(::std::string* _scope);

  // optional string _Desc = 2;
  bool has__desc() const;
  void clear__desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& _desc() const;
  void set__desc(const ::std::string& value);
  #if LANG_CXX11
  void set__desc(::std::string&& value);
  #endif
  void set__desc(const char* value);
  void set__desc(const char* value, size_t size);
  ::std::string* mutable__desc();
  ::std::string* release__desc();
  void set_allocated__desc(::std::string* _desc);

  // optional string _ExtDesc = 4;
  bool has__extdesc() const;
  void clear__extdesc();
  static const int kExtDescFieldNumber = 4;
  const ::std::string& _extdesc() const;
  void set__extdesc(const ::std::string& value);
  #if LANG_CXX11
  void set__extdesc(::std::string&& value);
  #endif
  void set__extdesc(const char* value);
  void set__extdesc(const char* value, size_t size);
  ::std::string* mutable__extdesc();
  ::std::string* release__extdesc();
  void set_allocated__extdesc(::std::string* _extdesc);

  // optional string _AuthDesc = 5;
  bool has__authdesc() const;
  void clear__authdesc();
  static const int kAuthDescFieldNumber = 5;
  const ::std::string& _authdesc() const;
  void set__authdesc(const ::std::string& value);
  #if LANG_CXX11
  void set__authdesc(::std::string&& value);
  #endif
  void set__authdesc(const char* value);
  void set__authdesc(const char* value, size_t size);
  ::std::string* mutable__authdesc();
  ::std::string* release__authdesc();
  void set_allocated__authdesc(::std::string* _authdesc);

  // optional string _DetailDesc = 6;
  bool has__detaildesc() const;
  void clear__detaildesc();
  static const int kDetailDescFieldNumber = 6;
  const ::std::string& _detaildesc() const;
  void set__detaildesc(const ::std::string& value);
  #if LANG_CXX11
  void set__detaildesc(::std::string&& value);
  #endif
  void set__detaildesc(const char* value);
  void set__detaildesc(const char* value, size_t size);
  ::std::string* mutable__detaildesc();
  ::std::string* release__detaildesc();
  void set_allocated__detaildesc(::std::string* _detaildesc);

  // optional string _Title = 7;
  bool has__title() const;
  void clear__title();
  static const int kTitleFieldNumber = 7;
  const ::std::string& _title() const;
  void set__title(const ::std::string& value);
  #if LANG_CXX11
  void set__title(::std::string&& value);
  #endif
  void set__title(const char* value);
  void set__title(const char* value, size_t size);
  ::std::string* mutable__title();
  ::std::string* release__title();
  void set_allocated__title(::std::string* _title);

  // optional uint32 _State = 3;
  bool has__state() const;
  void clear__state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 _state() const;
  void set__state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.ScopeList)
 private:
  void set_has__scope();
  void clear_has__scope();
  void set_has__desc();
  void clear_has__desc();
  void set_has__state();
  void clear_has__state();
  void set_has__extdesc();
  void clear_has__extdesc();
  void set_has__authdesc();
  void clear_has__authdesc();
  void set_has__detaildesc();
  void clear_has__detaildesc();
  void set_has__title();
  void clear_has__title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _scope_;
  ::google::protobuf::internal::ArenaStringPtr _desc_;
  ::google::protobuf::internal::ArenaStringPtr _extdesc_;
  ::google::protobuf::internal::ArenaStringPtr _authdesc_;
  ::google::protobuf::internal::ArenaStringPtr _detaildesc_;
  ::google::protobuf::internal::ArenaStringPtr _title_;
  ::google::protobuf::uint32 _state_;
  friend struct protobuf_ScopeList_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ScopeList

// optional string _Scope = 1;
inline bool ScopeList::has__scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScopeList::set_has__scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScopeList::clear_has__scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScopeList::clear__scope() {
  _scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__scope();
}
inline const ::std::string& ScopeList::_scope() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Scope)
  return _scope_.GetNoArena();
}
inline void ScopeList::set__scope(const ::std::string& value) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Scope)
}
#if LANG_CXX11
inline void ScopeList::set__scope(::std::string&& value) {
  set_has__scope();
  _scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Scope)
}
#endif
inline void ScopeList::set__scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Scope)
}
inline void ScopeList::set__scope(const char* value, size_t size) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Scope)
}
inline ::std::string* ScopeList::mutable__scope() {
  set_has__scope();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Scope)
  return _scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__scope() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Scope)
  clear_has__scope();
  return _scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__scope(::std::string* _scope) {
  if (_scope != NULL) {
    set_has__scope();
  } else {
    clear_has__scope();
  }
  _scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _scope);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Scope)
}

// optional string _Desc = 2;
inline bool ScopeList::has__desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScopeList::set_has__desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScopeList::clear_has__desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScopeList::clear__desc() {
  _desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__desc();
}
inline const ::std::string& ScopeList::_desc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Desc)
  return _desc_.GetNoArena();
}
inline void ScopeList::set__desc(const ::std::string& value) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Desc)
}
#if LANG_CXX11
inline void ScopeList::set__desc(::std::string&& value) {
  set_has__desc();
  _desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Desc)
}
#endif
inline void ScopeList::set__desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Desc)
}
inline void ScopeList::set__desc(const char* value, size_t size) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Desc)
}
inline ::std::string* ScopeList::mutable__desc() {
  set_has__desc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Desc)
  return _desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__desc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Desc)
  clear_has__desc();
  return _desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__desc(::std::string* _desc) {
  if (_desc != NULL) {
    set_has__desc();
  } else {
    clear_has__desc();
  }
  _desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _desc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Desc)
}

// optional uint32 _State = 3;
inline bool ScopeList::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ScopeList::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ScopeList::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ScopeList::clear__state() {
  _state_ = 0u;
  clear_has__state();
}
inline ::google::protobuf::uint32 ScopeList::_state() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._State)
  return _state_;
}
inline void ScopeList::set__state(::google::protobuf::uint32 value) {
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._State)
}

// optional string _ExtDesc = 4;
inline bool ScopeList::has__extdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScopeList::set_has__extdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScopeList::clear_has__extdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScopeList::clear__extdesc() {
  _extdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__extdesc();
}
inline const ::std::string& ScopeList::_extdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._ExtDesc)
  return _extdesc_.GetNoArena();
}
inline void ScopeList::set__extdesc(const ::std::string& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._ExtDesc)
}
#if LANG_CXX11
inline void ScopeList::set__extdesc(::std::string&& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._ExtDesc)
}
#endif
inline void ScopeList::set__extdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._ExtDesc)
}
inline void ScopeList::set__extdesc(const char* value, size_t size) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._ExtDesc)
}
inline ::std::string* ScopeList::mutable__extdesc() {
  set_has__extdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._ExtDesc)
  return _extdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__extdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._ExtDesc)
  clear_has__extdesc();
  return _extdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__extdesc(::std::string* _extdesc) {
  if (_extdesc != NULL) {
    set_has__extdesc();
  } else {
    clear_has__extdesc();
  }
  _extdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _extdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._ExtDesc)
}

// optional string _AuthDesc = 5;
inline bool ScopeList::has__authdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScopeList::set_has__authdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScopeList::clear_has__authdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScopeList::clear__authdesc() {
  _authdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authdesc();
}
inline const ::std::string& ScopeList::_authdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._AuthDesc)
  return _authdesc_.GetNoArena();
}
inline void ScopeList::set__authdesc(const ::std::string& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._AuthDesc)
}
#if LANG_CXX11
inline void ScopeList::set__authdesc(::std::string&& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._AuthDesc)
}
#endif
inline void ScopeList::set__authdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._AuthDesc)
}
inline void ScopeList::set__authdesc(const char* value, size_t size) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._AuthDesc)
}
inline ::std::string* ScopeList::mutable__authdesc() {
  set_has__authdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._AuthDesc)
  return _authdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__authdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._AuthDesc)
  clear_has__authdesc();
  return _authdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__authdesc(::std::string* _authdesc) {
  if (_authdesc != NULL) {
    set_has__authdesc();
  } else {
    clear_has__authdesc();
  }
  _authdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._AuthDesc)
}

// optional string _DetailDesc = 6;
inline bool ScopeList::has__detaildesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScopeList::set_has__detaildesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScopeList::clear_has__detaildesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScopeList::clear__detaildesc() {
  _detaildesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__detaildesc();
}
inline const ::std::string& ScopeList::_detaildesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._DetailDesc)
  return _detaildesc_.GetNoArena();
}
inline void ScopeList::set__detaildesc(const ::std::string& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._DetailDesc)
}
#if LANG_CXX11
inline void ScopeList::set__detaildesc(::std::string&& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._DetailDesc)
}
#endif
inline void ScopeList::set__detaildesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._DetailDesc)
}
inline void ScopeList::set__detaildesc(const char* value, size_t size) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._DetailDesc)
}
inline ::std::string* ScopeList::mutable__detaildesc() {
  set_has__detaildesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._DetailDesc)
  return _detaildesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__detaildesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._DetailDesc)
  clear_has__detaildesc();
  return _detaildesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__detaildesc(::std::string* _detaildesc) {
  if (_detaildesc != NULL) {
    set_has__detaildesc();
  } else {
    clear_has__detaildesc();
  }
  _detaildesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _detaildesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._DetailDesc)
}

// optional string _Title = 7;
inline bool ScopeList::has__title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScopeList::set_has__title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScopeList::clear_has__title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScopeList::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
inline const ::std::string& ScopeList::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Title)
  return _title_.GetNoArena();
}
inline void ScopeList::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Title)
}
#if LANG_CXX11
inline void ScopeList::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Title)
}
#endif
inline void ScopeList::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Title)
}
inline void ScopeList::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Title)
}
inline ::std::string* ScopeList::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScopeList::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScopeList::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Title)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ScopeList_2eproto__INCLUDED
