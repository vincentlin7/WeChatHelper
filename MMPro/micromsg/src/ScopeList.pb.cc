// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScopeList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ScopeList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MMPro {
namespace micromsg {
class ScopeListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ScopeList> {
} _ScopeList_default_instance_;

namespace protobuf_ScopeList_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _extdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _authdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _detaildesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScopeList, _title_),
  0,
  1,
  6,
  2,
  3,
  4,
  5,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 12, sizeof(ScopeList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScopeList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ScopeList.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _ScopeList_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ScopeList_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017ScopeList.proto\022\016MMPro.micromsg\"\204\001\n\tSc"
      "opeList\022\016\n\006_Scope\030\001 \001(\t\022\r\n\005_Desc\030\002 \001(\t\022\016"
      "\n\006_State\030\003 \001(\r\022\020\n\010_ExtDesc\030\004 \001(\t\022\021\n\t_Aut"
      "hDesc\030\005 \001(\t\022\023\n\013_DetailDesc\030\006 \001(\t\022\016\n\006_Tit"
      "le\030\007 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 168);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ScopeList.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ScopeList_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScopeList::kScopeFieldNumber;
const int ScopeList::kDescFieldNumber;
const int ScopeList::kStateFieldNumber;
const int ScopeList::kExtDescFieldNumber;
const int ScopeList::kAuthDescFieldNumber;
const int ScopeList::kDetailDescFieldNumber;
const int ScopeList::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScopeList::ScopeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ScopeList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MMPro.micromsg.ScopeList)
}
ScopeList::ScopeList(const ScopeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__scope()) {
    _scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._scope_);
  }
  _desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__desc()) {
    _desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._desc_);
  }
  _extdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__extdesc()) {
    _extdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._extdesc_);
  }
  _authdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__authdesc()) {
    _authdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authdesc_);
  }
  _detaildesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__detaildesc()) {
    _detaildesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._detaildesc_);
  }
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has__title()) {
    _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
  }
  _state_ = from._state_;
  // @@protoc_insertion_point(copy_constructor:MMPro.micromsg.ScopeList)
}

void ScopeList::SharedCtor() {
  _cached_size_ = 0;
  _scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _extdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _detaildesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _state_ = 0u;
}

ScopeList::~ScopeList() {
  // @@protoc_insertion_point(destructor:MMPro.micromsg.ScopeList)
  SharedDtor();
}

void ScopeList::SharedDtor() {
  _scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _extdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _authdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _detaildesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScopeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScopeList::descriptor() {
  protobuf_ScopeList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ScopeList_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScopeList& ScopeList::default_instance() {
  protobuf_ScopeList_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScopeList* ScopeList::New(::google::protobuf::Arena* arena) const {
  ScopeList* n = new ScopeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScopeList::Clear() {
// @@protoc_insertion_point(message_clear_start:MMPro.micromsg.ScopeList)
  if (_has_bits_[0 / 32] & 63u) {
    if (has__scope()) {
      GOOGLE_DCHECK(!_scope_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_scope_.UnsafeRawStringPointer())->clear();
    }
    if (has__desc()) {
      GOOGLE_DCHECK(!_desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_desc_.UnsafeRawStringPointer())->clear();
    }
    if (has__extdesc()) {
      GOOGLE_DCHECK(!_extdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_extdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__authdesc()) {
      GOOGLE_DCHECK(!_authdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_authdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__detaildesc()) {
      GOOGLE_DCHECK(!_detaildesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_detaildesc_.UnsafeRawStringPointer())->clear();
    }
    if (has__title()) {
      GOOGLE_DCHECK(!_title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*_title_.UnsafeRawStringPointer())->clear();
    }
  }
  _state_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScopeList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MMPro.micromsg.ScopeList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string _Scope = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__scope()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_scope().data(), this->_scope().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._Scope");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Desc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_desc().data(), this->_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._Desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 _State = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has__state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _ExtDesc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__extdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_extdesc().data(), this->_extdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._ExtDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _AuthDesc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__authdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_authdesc().data(), this->_authdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._AuthDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _DetailDesc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__detaildesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_detaildesc().data(), this->_detaildesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._DetailDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string _Title = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->_title().data(), this->_title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MMPro.micromsg.ScopeList._Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MMPro.micromsg.ScopeList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MMPro.micromsg.ScopeList)
  return false;
#undef DO_
}

void ScopeList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MMPro.micromsg.ScopeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Scope = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_scope().data(), this->_scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Scope");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->_scope(), output);
  }

  // optional string _Desc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_desc().data(), this->_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->_desc(), output);
  }

  // optional uint32 _State = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_state(), output);
  }

  // optional string _ExtDesc = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_extdesc().data(), this->_extdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._ExtDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->_extdesc(), output);
  }

  // optional string _AuthDesc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authdesc().data(), this->_authdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._AuthDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_authdesc(), output);
  }

  // optional string _DetailDesc = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_detaildesc().data(), this->_detaildesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._DetailDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->_detaildesc(), output);
  }

  // optional string _Title = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_title(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MMPro.micromsg.ScopeList)
}

::google::protobuf::uint8* ScopeList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MMPro.micromsg.ScopeList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string _Scope = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_scope().data(), this->_scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Scope");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->_scope(), target);
  }

  // optional string _Desc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_desc().data(), this->_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->_desc(), target);
  }

  // optional uint32 _State = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_state(), target);
  }

  // optional string _ExtDesc = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_extdesc().data(), this->_extdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._ExtDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->_extdesc(), target);
  }

  // optional string _AuthDesc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_authdesc().data(), this->_authdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._AuthDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_authdesc(), target);
  }

  // optional string _DetailDesc = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_detaildesc().data(), this->_detaildesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._DetailDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->_detaildesc(), target);
  }

  // optional string _Title = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_title().data(), this->_title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MMPro.micromsg.ScopeList._Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_title(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MMPro.micromsg.ScopeList)
  return target;
}

size_t ScopeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MMPro.micromsg.ScopeList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string _Scope = 1;
    if (has__scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_scope());
    }

    // optional string _Desc = 2;
    if (has__desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_desc());
    }

    // optional string _ExtDesc = 4;
    if (has__extdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_extdesc());
    }

    // optional string _AuthDesc = 5;
    if (has__authdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_authdesc());
    }

    // optional string _DetailDesc = 6;
    if (has__detaildesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_detaildesc());
    }

    // optional string _Title = 7;
    if (has__title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_title());
    }

    // optional uint32 _State = 3;
    if (has__state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScopeList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MMPro.micromsg.ScopeList)
  GOOGLE_DCHECK_NE(&from, this);
  const ScopeList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScopeList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MMPro.micromsg.ScopeList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MMPro.micromsg.ScopeList)
    MergeFrom(*source);
  }
}

void ScopeList::MergeFrom(const ScopeList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MMPro.micromsg.ScopeList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has__scope();
      _scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._scope_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has__desc();
      _desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has__extdesc();
      _extdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._extdesc_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has__authdesc();
      _authdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._authdesc_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has__detaildesc();
      _detaildesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._detaildesc_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has__title();
      _title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._title_);
    }
    if (cached_has_bits & 0x00000040u) {
      _state_ = from._state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScopeList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MMPro.micromsg.ScopeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScopeList::CopyFrom(const ScopeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MMPro.micromsg.ScopeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScopeList::IsInitialized() const {
  return true;
}

void ScopeList::Swap(ScopeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScopeList::InternalSwap(ScopeList* other) {
  _scope_.Swap(&other->_scope_);
  _desc_.Swap(&other->_desc_);
  _extdesc_.Swap(&other->_extdesc_);
  _authdesc_.Swap(&other->_authdesc_);
  _detaildesc_.Swap(&other->_detaildesc_);
  _title_.Swap(&other->_title_);
  std::swap(_state_, other->_state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScopeList::GetMetadata() const {
  protobuf_ScopeList_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ScopeList_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScopeList

// optional string _Scope = 1;
bool ScopeList::has__scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScopeList::set_has__scope() {
  _has_bits_[0] |= 0x00000001u;
}
void ScopeList::clear_has__scope() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScopeList::clear__scope() {
  _scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__scope();
}
const ::std::string& ScopeList::_scope() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Scope)
  return _scope_.GetNoArena();
}
void ScopeList::set__scope(const ::std::string& value) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Scope)
}
#if LANG_CXX11
void ScopeList::set__scope(::std::string&& value) {
  set_has__scope();
  _scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Scope)
}
#endif
void ScopeList::set__scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Scope)
}
void ScopeList::set__scope(const char* value, size_t size) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Scope)
}
::std::string* ScopeList::mutable__scope() {
  set_has__scope();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Scope)
  return _scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__scope() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Scope)
  clear_has__scope();
  return _scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__scope(::std::string* _scope) {
  if (_scope != NULL) {
    set_has__scope();
  } else {
    clear_has__scope();
  }
  _scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _scope);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Scope)
}

// optional string _Desc = 2;
bool ScopeList::has__desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScopeList::set_has__desc() {
  _has_bits_[0] |= 0x00000002u;
}
void ScopeList::clear_has__desc() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScopeList::clear__desc() {
  _desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__desc();
}
const ::std::string& ScopeList::_desc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Desc)
  return _desc_.GetNoArena();
}
void ScopeList::set__desc(const ::std::string& value) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Desc)
}
#if LANG_CXX11
void ScopeList::set__desc(::std::string&& value) {
  set_has__desc();
  _desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Desc)
}
#endif
void ScopeList::set__desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Desc)
}
void ScopeList::set__desc(const char* value, size_t size) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Desc)
}
::std::string* ScopeList::mutable__desc() {
  set_has__desc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Desc)
  return _desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__desc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Desc)
  clear_has__desc();
  return _desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__desc(::std::string* _desc) {
  if (_desc != NULL) {
    set_has__desc();
  } else {
    clear_has__desc();
  }
  _desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _desc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Desc)
}

// optional uint32 _State = 3;
bool ScopeList::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ScopeList::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
void ScopeList::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
void ScopeList::clear__state() {
  _state_ = 0u;
  clear_has__state();
}
::google::protobuf::uint32 ScopeList::_state() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._State)
  return _state_;
}
void ScopeList::set__state(::google::protobuf::uint32 value) {
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._State)
}

// optional string _ExtDesc = 4;
bool ScopeList::has__extdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScopeList::set_has__extdesc() {
  _has_bits_[0] |= 0x00000004u;
}
void ScopeList::clear_has__extdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScopeList::clear__extdesc() {
  _extdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__extdesc();
}
const ::std::string& ScopeList::_extdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._ExtDesc)
  return _extdesc_.GetNoArena();
}
void ScopeList::set__extdesc(const ::std::string& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._ExtDesc)
}
#if LANG_CXX11
void ScopeList::set__extdesc(::std::string&& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._ExtDesc)
}
#endif
void ScopeList::set__extdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._ExtDesc)
}
void ScopeList::set__extdesc(const char* value, size_t size) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._ExtDesc)
}
::std::string* ScopeList::mutable__extdesc() {
  set_has__extdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._ExtDesc)
  return _extdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__extdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._ExtDesc)
  clear_has__extdesc();
  return _extdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__extdesc(::std::string* _extdesc) {
  if (_extdesc != NULL) {
    set_has__extdesc();
  } else {
    clear_has__extdesc();
  }
  _extdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _extdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._ExtDesc)
}

// optional string _AuthDesc = 5;
bool ScopeList::has__authdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ScopeList::set_has__authdesc() {
  _has_bits_[0] |= 0x00000008u;
}
void ScopeList::clear_has__authdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
void ScopeList::clear__authdesc() {
  _authdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authdesc();
}
const ::std::string& ScopeList::_authdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._AuthDesc)
  return _authdesc_.GetNoArena();
}
void ScopeList::set__authdesc(const ::std::string& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._AuthDesc)
}
#if LANG_CXX11
void ScopeList::set__authdesc(::std::string&& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._AuthDesc)
}
#endif
void ScopeList::set__authdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._AuthDesc)
}
void ScopeList::set__authdesc(const char* value, size_t size) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._AuthDesc)
}
::std::string* ScopeList::mutable__authdesc() {
  set_has__authdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._AuthDesc)
  return _authdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__authdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._AuthDesc)
  clear_has__authdesc();
  return _authdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__authdesc(::std::string* _authdesc) {
  if (_authdesc != NULL) {
    set_has__authdesc();
  } else {
    clear_has__authdesc();
  }
  _authdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._AuthDesc)
}

// optional string _DetailDesc = 6;
bool ScopeList::has__detaildesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ScopeList::set_has__detaildesc() {
  _has_bits_[0] |= 0x00000010u;
}
void ScopeList::clear_has__detaildesc() {
  _has_bits_[0] &= ~0x00000010u;
}
void ScopeList::clear__detaildesc() {
  _detaildesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__detaildesc();
}
const ::std::string& ScopeList::_detaildesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._DetailDesc)
  return _detaildesc_.GetNoArena();
}
void ScopeList::set__detaildesc(const ::std::string& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._DetailDesc)
}
#if LANG_CXX11
void ScopeList::set__detaildesc(::std::string&& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._DetailDesc)
}
#endif
void ScopeList::set__detaildesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._DetailDesc)
}
void ScopeList::set__detaildesc(const char* value, size_t size) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._DetailDesc)
}
::std::string* ScopeList::mutable__detaildesc() {
  set_has__detaildesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._DetailDesc)
  return _detaildesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__detaildesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._DetailDesc)
  clear_has__detaildesc();
  return _detaildesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__detaildesc(::std::string* _detaildesc) {
  if (_detaildesc != NULL) {
    set_has__detaildesc();
  } else {
    clear_has__detaildesc();
  }
  _detaildesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _detaildesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._DetailDesc)
}

// optional string _Title = 7;
bool ScopeList::has__title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ScopeList::set_has__title() {
  _has_bits_[0] |= 0x00000020u;
}
void ScopeList::clear_has__title() {
  _has_bits_[0] &= ~0x00000020u;
}
void ScopeList::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
const ::std::string& ScopeList::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.ScopeList._Title)
  return _title_.GetNoArena();
}
void ScopeList::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.ScopeList._Title)
}
#if LANG_CXX11
void ScopeList::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.ScopeList._Title)
}
#endif
void ScopeList::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.ScopeList._Title)
}
void ScopeList::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.ScopeList._Title)
}
::std::string* ScopeList::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.ScopeList._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScopeList::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.ScopeList._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScopeList::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.ScopeList._Title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)
