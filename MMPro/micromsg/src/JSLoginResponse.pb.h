// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JSLoginResponse.proto

#ifndef PROTOBUF_JSLoginResponse_2eproto__INCLUDED
#define PROTOBUF_JSLoginResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "BaseResponse.pb.h"
// @@protoc_insertion_point(includes)
namespace MMPro {
namespace micromsg {
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class Error;
class ErrorDefaultTypeInternal;
extern ErrorDefaultTypeInternal _Error_default_instance_;
class JSApiAuthorise;
class JSApiAuthoriseDefaultTypeInternal;
extern JSApiAuthoriseDefaultTypeInternal _JSApiAuthorise_default_instance_;
class JSLoginResponse;
class JSLoginResponseDefaultTypeInternal;
extern JSLoginResponseDefaultTypeInternal _JSLoginResponse_default_instance_;
}  // namespace micromsg
}  // namespace MMPro

namespace MMPro {
namespace micromsg {

namespace protobuf_JSLoginResponse_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_JSLoginResponse_2eproto

// ===================================================================

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static inline const Error* internal_default_instance() {
    return reinterpret_cast<const Error*>(
               &_Error_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const PROTOBUF_FINAL { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Error* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _Errmsg = 2;
  bool has__errmsg() const;
  void clear__errmsg();
  static const int kErrmsgFieldNumber = 2;
  const ::std::string& _errmsg() const;
  void set__errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set__errmsg(::std::string&& value);
  #endif
  void set__errmsg(const char* value);
  void set__errmsg(const char* value, size_t size);
  ::std::string* mutable__errmsg();
  ::std::string* release__errmsg();
  void set_allocated__errmsg(::std::string* _errmsg);

  // optional uint32 _Errcode = 1;
  bool has__errcode() const;
  void clear__errcode();
  static const int kErrcodeFieldNumber = 1;
  ::google::protobuf::uint32 _errcode() const;
  void set__errcode(::google::protobuf::uint32 value);

  // optional uint32 _Errno = 3;
  bool has__errno() const;
  void clear__errno();
  static const int kErrnoFieldNumber = 3;
  ::google::protobuf::uint32 _errno() const;
  void set__errno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.Error)
 private:
  void set_has__errcode();
  void clear_has__errcode();
  void set_has__errmsg();
  void clear_has__errmsg();
  void set_has__errno();
  void clear_has__errno();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _errmsg_;
  ::google::protobuf::uint32 _errcode_;
  ::google::protobuf::uint32 _errno_;
  friend struct protobuf_JSLoginResponse_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSApiAuthorise : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.JSApiAuthorise) */ {
 public:
  JSApiAuthorise();
  virtual ~JSApiAuthorise();

  JSApiAuthorise(const JSApiAuthorise& from);

  inline JSApiAuthorise& operator=(const JSApiAuthorise& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSApiAuthorise& default_instance();

  static inline const JSApiAuthorise* internal_default_instance() {
    return reinterpret_cast<const JSApiAuthorise*>(
               &_JSApiAuthorise_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(JSApiAuthorise* other);

  // implements Message ----------------------------------------------

  inline JSApiAuthorise* New() const PROTOBUF_FINAL { return New(NULL); }

  JSApiAuthorise* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSApiAuthorise& from);
  void MergeFrom(const JSApiAuthorise& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSApiAuthorise* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string _Scope = 1;
  bool has__scope() const;
  void clear__scope();
  static const int kScopeFieldNumber = 1;
  const ::std::string& _scope() const;
  void set__scope(const ::std::string& value);
  #if LANG_CXX11
  void set__scope(::std::string&& value);
  #endif
  void set__scope(const char* value);
  void set__scope(const char* value, size_t size);
  ::std::string* mutable__scope();
  ::std::string* release__scope();
  void set_allocated__scope(::std::string* _scope);

  // optional string _Desc = 2;
  bool has__desc() const;
  void clear__desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& _desc() const;
  void set__desc(const ::std::string& value);
  #if LANG_CXX11
  void set__desc(::std::string&& value);
  #endif
  void set__desc(const char* value);
  void set__desc(const char* value, size_t size);
  ::std::string* mutable__desc();
  ::std::string* release__desc();
  void set_allocated__desc(::std::string* _desc);

  // optional string _ExtDesc = 4;
  bool has__extdesc() const;
  void clear__extdesc();
  static const int kExtDescFieldNumber = 4;
  const ::std::string& _extdesc() const;
  void set__extdesc(const ::std::string& value);
  #if LANG_CXX11
  void set__extdesc(::std::string&& value);
  #endif
  void set__extdesc(const char* value);
  void set__extdesc(const char* value, size_t size);
  ::std::string* mutable__extdesc();
  ::std::string* release__extdesc();
  void set_allocated__extdesc(::std::string* _extdesc);

  // optional string _AuthDesc = 5;
  bool has__authdesc() const;
  void clear__authdesc();
  static const int kAuthDescFieldNumber = 5;
  const ::std::string& _authdesc() const;
  void set__authdesc(const ::std::string& value);
  #if LANG_CXX11
  void set__authdesc(::std::string&& value);
  #endif
  void set__authdesc(const char* value);
  void set__authdesc(const char* value, size_t size);
  ::std::string* mutable__authdesc();
  ::std::string* release__authdesc();
  void set_allocated__authdesc(::std::string* _authdesc);

  // optional string _DetailDesc = 6;
  bool has__detaildesc() const;
  void clear__detaildesc();
  static const int kDetailDescFieldNumber = 6;
  const ::std::string& _detaildesc() const;
  void set__detaildesc(const ::std::string& value);
  #if LANG_CXX11
  void set__detaildesc(::std::string&& value);
  #endif
  void set__detaildesc(const char* value);
  void set__detaildesc(const char* value, size_t size);
  ::std::string* mutable__detaildesc();
  ::std::string* release__detaildesc();
  void set_allocated__detaildesc(::std::string* _detaildesc);

  // optional string _Title = 7;
  bool has__title() const;
  void clear__title();
  static const int kTitleFieldNumber = 7;
  const ::std::string& _title() const;
  void set__title(const ::std::string& value);
  #if LANG_CXX11
  void set__title(::std::string&& value);
  #endif
  void set__title(const char* value);
  void set__title(const char* value, size_t size);
  ::std::string* mutable__title();
  ::std::string* release__title();
  void set_allocated__title(::std::string* _title);

  // optional uint32 _State = 3;
  bool has__state() const;
  void clear__state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 _state() const;
  void set__state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.JSApiAuthorise)
 private:
  void set_has__scope();
  void clear_has__scope();
  void set_has__desc();
  void clear_has__desc();
  void set_has__state();
  void clear_has__state();
  void set_has__extdesc();
  void clear_has__extdesc();
  void set_has__authdesc();
  void clear_has__authdesc();
  void set_has__detaildesc();
  void clear_has__detaildesc();
  void set_has__title();
  void clear_has__title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr _scope_;
  ::google::protobuf::internal::ArenaStringPtr _desc_;
  ::google::protobuf::internal::ArenaStringPtr _extdesc_;
  ::google::protobuf::internal::ArenaStringPtr _authdesc_;
  ::google::protobuf::internal::ArenaStringPtr _detaildesc_;
  ::google::protobuf::internal::ArenaStringPtr _title_;
  ::google::protobuf::uint32 _state_;
  friend struct protobuf_JSLoginResponse_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSLoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MMPro.micromsg.JSLoginResponse) */ {
 public:
  JSLoginResponse();
  virtual ~JSLoginResponse();

  JSLoginResponse(const JSLoginResponse& from);

  inline JSLoginResponse& operator=(const JSLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSLoginResponse& default_instance();

  static inline const JSLoginResponse* internal_default_instance() {
    return reinterpret_cast<const JSLoginResponse*>(
               &_JSLoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(JSLoginResponse* other);

  // implements Message ----------------------------------------------

  inline JSLoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  JSLoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSLoginResponse& from);
  void MergeFrom(const JSLoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSLoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MMPro.micromsg.JSApiAuthorise _Authorise = 4;
  int _authorise_size() const;
  void clear__authorise();
  static const int kAuthoriseFieldNumber = 4;
  const ::MMPro::micromsg::JSApiAuthorise& _authorise(int index) const;
  ::MMPro::micromsg::JSApiAuthorise* mutable__authorise(int index);
  ::MMPro::micromsg::JSApiAuthorise* add__authorise();
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::JSApiAuthorise >*
      mutable__authorise();
  const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::JSApiAuthorise >&
      _authorise() const;

  // optional string _Code = 3;
  bool has__code() const;
  void clear__code();
  static const int kCodeFieldNumber = 3;
  const ::std::string& _code() const;
  void set__code(const ::std::string& value);
  #if LANG_CXX11
  void set__code(::std::string&& value);
  #endif
  void set__code(const char* value);
  void set__code(const char* value, size_t size);
  ::std::string* mutable__code();
  ::std::string* release__code();
  void set_allocated__code(::std::string* _code);

  // optional string _AppName = 5;
  bool has__appname() const;
  void clear__appname();
  static const int kAppNameFieldNumber = 5;
  const ::std::string& _appname() const;
  void set__appname(const ::std::string& value);
  #if LANG_CXX11
  void set__appname(::std::string&& value);
  #endif
  void set__appname(const char* value);
  void set__appname(const char* value, size_t size);
  ::std::string* mutable__appname();
  ::std::string* release__appname();
  void set_allocated__appname(::std::string* _appname);

  // optional string _AppIConUrl = 6;
  bool has__appiconurl() const;
  void clear__appiconurl();
  static const int kAppIConUrlFieldNumber = 6;
  const ::std::string& _appiconurl() const;
  void set__appiconurl(const ::std::string& value);
  #if LANG_CXX11
  void set__appiconurl(::std::string&& value);
  #endif
  void set__appiconurl(const char* value);
  void set__appiconurl(const char* value, size_t size);
  ::std::string* mutable__appiconurl();
  ::std::string* release__appiconurl();
  void set_allocated__appiconurl(::std::string* _appiconurl);

  // optional string _akbK = 7;
  bool has__akbk() const;
  void clear__akbk();
  static const int kAkbKFieldNumber = 7;
  const ::std::string& _akbk() const;
  void set__akbk(const ::std::string& value);
  #if LANG_CXX11
  void set__akbk(::std::string&& value);
  #endif
  void set__akbk(const char* value);
  void set__akbk(const char* value, size_t size);
  ::std::string* mutable__akbk();
  ::std::string* release__akbk();
  void set_allocated__akbk(::std::string* _akbk);

  // optional string _amne = 8;
  bool has__amne() const;
  void clear__amne();
  static const int kAmneFieldNumber = 8;
  const ::std::string& _amne() const;
  void set__amne(const ::std::string& value);
  #if LANG_CXX11
  void set__amne(::std::string&& value);
  #endif
  void set__amne(const char* value);
  void set__amne(const char* value, size_t size);
  ::std::string* mutable__amne();
  ::std::string* release__amne();
  void set_allocated__amne(::std::string* _amne);

  // optional string _amnf = 9;
  bool has__amnf() const;
  void clear__amnf();
  static const int kAmnfFieldNumber = 9;
  const ::std::string& _amnf() const;
  void set__amnf(const ::std::string& value);
  #if LANG_CXX11
  void set__amnf(::std::string&& value);
  #endif
  void set__amnf(const char* value);
  void set__amnf(const char* value, size_t size);
  ::std::string* mutable__amnf();
  ::std::string* release__amnf();
  void set_allocated__amnf(::std::string* _amnf);

  // optional string _State = 11;
  bool has__state() const;
  void clear__state();
  static const int kStateFieldNumber = 11;
  const ::std::string& _state() const;
  void set__state(const ::std::string& value);
  #if LANG_CXX11
  void set__state(::std::string&& value);
  #endif
  void set__state(const char* value);
  void set__state(const char* value, size_t size);
  ::std::string* mutable__state();
  ::std::string* release__state();
  void set_allocated__state(::std::string* _state);

  // optional string _tnG = 12;
  bool has__tng() const;
  void clear__tng();
  static const int kTnGFieldNumber = 12;
  const ::std::string& _tng() const;
  void set__tng(const ::std::string& value);
  #if LANG_CXX11
  void set__tng(::std::string&& value);
  #endif
  void set__tng(const char* value);
  void set__tng(const char* value, size_t size);
  ::std::string* mutable__tng();
  ::std::string* release__tng();
  void set_allocated__tng(::std::string* _tng);

  // required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
  bool has__baseresponse() const;
  void clear__baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::MMPro::micromsg::BaseResponse& _baseresponse() const;
  ::MMPro::micromsg::BaseResponse* mutable__baseresponse();
  ::MMPro::micromsg::BaseResponse* release__baseresponse();
  void set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse);

  // optional .MMPro.micromsg.Error _Error = 2;
  bool has__error() const;
  void clear__error();
  static const int kErrorFieldNumber = 2;
  const ::MMPro::micromsg::Error& _error() const;
  ::MMPro::micromsg::Error* mutable__error();
  ::MMPro::micromsg::Error* release__error();
  void set_allocated__error(::MMPro::micromsg::Error* _error);

  // optional uint32 _amng = 10;
  bool has__amng() const;
  void clear__amng();
  static const int kAmngFieldNumber = 10;
  ::google::protobuf::uint32 _amng() const;
  void set__amng(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MMPro.micromsg.JSLoginResponse)
 private:
  void set_has__baseresponse();
  void clear_has__baseresponse();
  void set_has__error();
  void clear_has__error();
  void set_has__code();
  void clear_has__code();
  void set_has__appname();
  void clear_has__appname();
  void set_has__appiconurl();
  void clear_has__appiconurl();
  void set_has__akbk();
  void clear_has__akbk();
  void set_has__amne();
  void clear_has__amne();
  void set_has__amnf();
  void clear_has__amnf();
  void set_has__amng();
  void clear_has__amng();
  void set_has__state();
  void clear_has__state();
  void set_has__tng();
  void clear_has__tng();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::JSApiAuthorise > _authorise_;
  ::google::protobuf::internal::ArenaStringPtr _code_;
  ::google::protobuf::internal::ArenaStringPtr _appname_;
  ::google::protobuf::internal::ArenaStringPtr _appiconurl_;
  ::google::protobuf::internal::ArenaStringPtr _akbk_;
  ::google::protobuf::internal::ArenaStringPtr _amne_;
  ::google::protobuf::internal::ArenaStringPtr _amnf_;
  ::google::protobuf::internal::ArenaStringPtr _state_;
  ::google::protobuf::internal::ArenaStringPtr _tng_;
  ::MMPro::micromsg::BaseResponse* _baseresponse_;
  ::MMPro::micromsg::Error* _error_;
  ::google::protobuf::uint32 _amng_;
  friend struct protobuf_JSLoginResponse_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// optional uint32 _Errcode = 1;
inline bool Error::has__errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Error::set_has__errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Error::clear_has__errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Error::clear__errcode() {
  _errcode_ = 0u;
  clear_has__errcode();
}
inline ::google::protobuf::uint32 Error::_errcode() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.Error._Errcode)
  return _errcode_;
}
inline void Error::set__errcode(::google::protobuf::uint32 value) {
  set_has__errcode();
  _errcode_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.Error._Errcode)
}

// optional string _Errmsg = 2;
inline bool Error::has__errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Error::set_has__errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Error::clear_has__errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Error::clear__errmsg() {
  _errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__errmsg();
}
inline const ::std::string& Error::_errmsg() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.Error._Errmsg)
  return _errmsg_.GetNoArena();
}
inline void Error::set__errmsg(const ::std::string& value) {
  set_has__errmsg();
  _errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.Error._Errmsg)
}
#if LANG_CXX11
inline void Error::set__errmsg(::std::string&& value) {
  set_has__errmsg();
  _errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.Error._Errmsg)
}
#endif
inline void Error::set__errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__errmsg();
  _errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.Error._Errmsg)
}
inline void Error::set__errmsg(const char* value, size_t size) {
  set_has__errmsg();
  _errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.Error._Errmsg)
}
inline ::std::string* Error::mutable__errmsg() {
  set_has__errmsg();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.Error._Errmsg)
  return _errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release__errmsg() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.Error._Errmsg)
  clear_has__errmsg();
  return _errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated__errmsg(::std::string* _errmsg) {
  if (_errmsg != NULL) {
    set_has__errmsg();
  } else {
    clear_has__errmsg();
  }
  _errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _errmsg);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.Error._Errmsg)
}

// optional uint32 _Errno = 3;
inline bool Error::has__errno() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Error::set_has__errno() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Error::clear_has__errno() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Error::clear__errno() {
  _errno_ = 0u;
  clear_has__errno();
}
inline ::google::protobuf::uint32 Error::_errno() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.Error._Errno)
  return _errno_;
}
inline void Error::set__errno(::google::protobuf::uint32 value) {
  set_has__errno();
  _errno_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.Error._Errno)
}

// -------------------------------------------------------------------

// JSApiAuthorise

// optional string _Scope = 1;
inline bool JSApiAuthorise::has__scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSApiAuthorise::set_has__scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSApiAuthorise::clear_has__scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSApiAuthorise::clear__scope() {
  _scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__scope();
}
inline const ::std::string& JSApiAuthorise::_scope() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._Scope)
  return _scope_.GetNoArena();
}
inline void JSApiAuthorise::set__scope(const ::std::string& value) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._Scope)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__scope(::std::string&& value) {
  set_has__scope();
  _scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._Scope)
}
#endif
inline void JSApiAuthorise::set__scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._Scope)
}
inline void JSApiAuthorise::set__scope(const char* value, size_t size) {
  set_has__scope();
  _scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._Scope)
}
inline ::std::string* JSApiAuthorise::mutable__scope() {
  set_has__scope();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._Scope)
  return _scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__scope() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._Scope)
  clear_has__scope();
  return _scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__scope(::std::string* _scope) {
  if (_scope != NULL) {
    set_has__scope();
  } else {
    clear_has__scope();
  }
  _scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _scope);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._Scope)
}

// optional string _Desc = 2;
inline bool JSApiAuthorise::has__desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSApiAuthorise::set_has__desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSApiAuthorise::clear_has__desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSApiAuthorise::clear__desc() {
  _desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__desc();
}
inline const ::std::string& JSApiAuthorise::_desc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._Desc)
  return _desc_.GetNoArena();
}
inline void JSApiAuthorise::set__desc(const ::std::string& value) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._Desc)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__desc(::std::string&& value) {
  set_has__desc();
  _desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._Desc)
}
#endif
inline void JSApiAuthorise::set__desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._Desc)
}
inline void JSApiAuthorise::set__desc(const char* value, size_t size) {
  set_has__desc();
  _desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._Desc)
}
inline ::std::string* JSApiAuthorise::mutable__desc() {
  set_has__desc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._Desc)
  return _desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__desc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._Desc)
  clear_has__desc();
  return _desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__desc(::std::string* _desc) {
  if (_desc != NULL) {
    set_has__desc();
  } else {
    clear_has__desc();
  }
  _desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _desc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._Desc)
}

// optional uint32 _State = 3;
inline bool JSApiAuthorise::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JSApiAuthorise::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JSApiAuthorise::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JSApiAuthorise::clear__state() {
  _state_ = 0u;
  clear_has__state();
}
inline ::google::protobuf::uint32 JSApiAuthorise::_state() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._State)
  return _state_;
}
inline void JSApiAuthorise::set__state(::google::protobuf::uint32 value) {
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._State)
}

// optional string _ExtDesc = 4;
inline bool JSApiAuthorise::has__extdesc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSApiAuthorise::set_has__extdesc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSApiAuthorise::clear_has__extdesc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSApiAuthorise::clear__extdesc() {
  _extdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__extdesc();
}
inline const ::std::string& JSApiAuthorise::_extdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._ExtDesc)
  return _extdesc_.GetNoArena();
}
inline void JSApiAuthorise::set__extdesc(const ::std::string& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._ExtDesc)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__extdesc(::std::string&& value) {
  set_has__extdesc();
  _extdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._ExtDesc)
}
#endif
inline void JSApiAuthorise::set__extdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._ExtDesc)
}
inline void JSApiAuthorise::set__extdesc(const char* value, size_t size) {
  set_has__extdesc();
  _extdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._ExtDesc)
}
inline ::std::string* JSApiAuthorise::mutable__extdesc() {
  set_has__extdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._ExtDesc)
  return _extdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__extdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._ExtDesc)
  clear_has__extdesc();
  return _extdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__extdesc(::std::string* _extdesc) {
  if (_extdesc != NULL) {
    set_has__extdesc();
  } else {
    clear_has__extdesc();
  }
  _extdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _extdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._ExtDesc)
}

// optional string _AuthDesc = 5;
inline bool JSApiAuthorise::has__authdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JSApiAuthorise::set_has__authdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JSApiAuthorise::clear_has__authdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JSApiAuthorise::clear__authdesc() {
  _authdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__authdesc();
}
inline const ::std::string& JSApiAuthorise::_authdesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._AuthDesc)
  return _authdesc_.GetNoArena();
}
inline void JSApiAuthorise::set__authdesc(const ::std::string& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._AuthDesc)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__authdesc(::std::string&& value) {
  set_has__authdesc();
  _authdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._AuthDesc)
}
#endif
inline void JSApiAuthorise::set__authdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._AuthDesc)
}
inline void JSApiAuthorise::set__authdesc(const char* value, size_t size) {
  set_has__authdesc();
  _authdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._AuthDesc)
}
inline ::std::string* JSApiAuthorise::mutable__authdesc() {
  set_has__authdesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._AuthDesc)
  return _authdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__authdesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._AuthDesc)
  clear_has__authdesc();
  return _authdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__authdesc(::std::string* _authdesc) {
  if (_authdesc != NULL) {
    set_has__authdesc();
  } else {
    clear_has__authdesc();
  }
  _authdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _authdesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._AuthDesc)
}

// optional string _DetailDesc = 6;
inline bool JSApiAuthorise::has__detaildesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JSApiAuthorise::set_has__detaildesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JSApiAuthorise::clear_has__detaildesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JSApiAuthorise::clear__detaildesc() {
  _detaildesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__detaildesc();
}
inline const ::std::string& JSApiAuthorise::_detaildesc() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._DetailDesc)
  return _detaildesc_.GetNoArena();
}
inline void JSApiAuthorise::set__detaildesc(const ::std::string& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._DetailDesc)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__detaildesc(::std::string&& value) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._DetailDesc)
}
#endif
inline void JSApiAuthorise::set__detaildesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._DetailDesc)
}
inline void JSApiAuthorise::set__detaildesc(const char* value, size_t size) {
  set_has__detaildesc();
  _detaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._DetailDesc)
}
inline ::std::string* JSApiAuthorise::mutable__detaildesc() {
  set_has__detaildesc();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._DetailDesc)
  return _detaildesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__detaildesc() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._DetailDesc)
  clear_has__detaildesc();
  return _detaildesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__detaildesc(::std::string* _detaildesc) {
  if (_detaildesc != NULL) {
    set_has__detaildesc();
  } else {
    clear_has__detaildesc();
  }
  _detaildesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _detaildesc);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._DetailDesc)
}

// optional string _Title = 7;
inline bool JSApiAuthorise::has__title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JSApiAuthorise::set_has__title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JSApiAuthorise::clear_has__title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JSApiAuthorise::clear__title() {
  _title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__title();
}
inline const ::std::string& JSApiAuthorise::_title() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSApiAuthorise._Title)
  return _title_.GetNoArena();
}
inline void JSApiAuthorise::set__title(const ::std::string& value) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSApiAuthorise._Title)
}
#if LANG_CXX11
inline void JSApiAuthorise::set__title(::std::string&& value) {
  set_has__title();
  _title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSApiAuthorise._Title)
}
#endif
inline void JSApiAuthorise::set__title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSApiAuthorise._Title)
}
inline void JSApiAuthorise::set__title(const char* value, size_t size) {
  set_has__title();
  _title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSApiAuthorise._Title)
}
inline ::std::string* JSApiAuthorise::mutable__title() {
  set_has__title();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSApiAuthorise._Title)
  return _title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSApiAuthorise::release__title() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSApiAuthorise._Title)
  clear_has__title();
  return _title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSApiAuthorise::set_allocated__title(::std::string* _title) {
  if (_title != NULL) {
    set_has__title();
  } else {
    clear_has__title();
  }
  _title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _title);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSApiAuthorise._Title)
}

// -------------------------------------------------------------------

// JSLoginResponse

// required .MMPro.micromsg.BaseResponse _BaseResponse = 1;
inline bool JSLoginResponse::has__baseresponse() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JSLoginResponse::set_has__baseresponse() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JSLoginResponse::clear_has__baseresponse() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JSLoginResponse::clear__baseresponse() {
  if (_baseresponse_ != NULL) _baseresponse_->::MMPro::micromsg::BaseResponse::Clear();
  clear_has__baseresponse();
}
inline const ::MMPro::micromsg::BaseResponse& JSLoginResponse::_baseresponse() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._BaseResponse)
  return _baseresponse_ != NULL ? *_baseresponse_
                         : *::MMPro::micromsg::BaseResponse::internal_default_instance();
}
inline ::MMPro::micromsg::BaseResponse* JSLoginResponse::mutable__baseresponse() {
  set_has__baseresponse();
  if (_baseresponse_ == NULL) {
    _baseresponse_ = new ::MMPro::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._BaseResponse)
  return _baseresponse_;
}
inline ::MMPro::micromsg::BaseResponse* JSLoginResponse::release__baseresponse() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._BaseResponse)
  clear_has__baseresponse();
  ::MMPro::micromsg::BaseResponse* temp = _baseresponse_;
  _baseresponse_ = NULL;
  return temp;
}
inline void JSLoginResponse::set_allocated__baseresponse(::MMPro::micromsg::BaseResponse* _baseresponse) {
  delete _baseresponse_;
  _baseresponse_ = _baseresponse;
  if (_baseresponse) {
    set_has__baseresponse();
  } else {
    clear_has__baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._BaseResponse)
}

// optional .MMPro.micromsg.Error _Error = 2;
inline bool JSLoginResponse::has__error() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void JSLoginResponse::set_has__error() {
  _has_bits_[0] |= 0x00000200u;
}
inline void JSLoginResponse::clear_has__error() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void JSLoginResponse::clear__error() {
  if (_error_ != NULL) _error_->::MMPro::micromsg::Error::Clear();
  clear_has__error();
}
inline const ::MMPro::micromsg::Error& JSLoginResponse::_error() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Error)
  return _error_ != NULL ? *_error_
                         : *::MMPro::micromsg::Error::internal_default_instance();
}
inline ::MMPro::micromsg::Error* JSLoginResponse::mutable__error() {
  set_has__error();
  if (_error_ == NULL) {
    _error_ = new ::MMPro::micromsg::Error;
  }
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Error)
  return _error_;
}
inline ::MMPro::micromsg::Error* JSLoginResponse::release__error() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._Error)
  clear_has__error();
  ::MMPro::micromsg::Error* temp = _error_;
  _error_ = NULL;
  return temp;
}
inline void JSLoginResponse::set_allocated__error(::MMPro::micromsg::Error* _error) {
  delete _error_;
  _error_ = _error;
  if (_error) {
    set_has__error();
  } else {
    clear_has__error();
  }
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._Error)
}

// optional string _Code = 3;
inline bool JSLoginResponse::has__code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSLoginResponse::set_has__code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSLoginResponse::clear_has__code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSLoginResponse::clear__code() {
  _code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__code();
}
inline const ::std::string& JSLoginResponse::_code() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Code)
  return _code_.GetNoArena();
}
inline void JSLoginResponse::set__code(const ::std::string& value) {
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._Code)
}
#if LANG_CXX11
inline void JSLoginResponse::set__code(::std::string&& value) {
  set_has__code();
  _code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._Code)
}
#endif
inline void JSLoginResponse::set__code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._Code)
}
inline void JSLoginResponse::set__code(const char* value, size_t size) {
  set_has__code();
  _code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._Code)
}
inline ::std::string* JSLoginResponse::mutable__code() {
  set_has__code();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Code)
  return _code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__code() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._Code)
  clear_has__code();
  return _code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__code(::std::string* _code) {
  if (_code != NULL) {
    set_has__code();
  } else {
    clear_has__code();
  }
  _code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _code);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._Code)
}

// repeated .MMPro.micromsg.JSApiAuthorise _Authorise = 4;
inline int JSLoginResponse::_authorise_size() const {
  return _authorise_.size();
}
inline void JSLoginResponse::clear__authorise() {
  _authorise_.Clear();
}
inline const ::MMPro::micromsg::JSApiAuthorise& JSLoginResponse::_authorise(int index) const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._Authorise)
  return _authorise_.Get(index);
}
inline ::MMPro::micromsg::JSApiAuthorise* JSLoginResponse::mutable__authorise(int index) {
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._Authorise)
  return _authorise_.Mutable(index);
}
inline ::MMPro::micromsg::JSApiAuthorise* JSLoginResponse::add__authorise() {
  // @@protoc_insertion_point(field_add:MMPro.micromsg.JSLoginResponse._Authorise)
  return _authorise_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::JSApiAuthorise >*
JSLoginResponse::mutable__authorise() {
  // @@protoc_insertion_point(field_mutable_list:MMPro.micromsg.JSLoginResponse._Authorise)
  return &_authorise_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MMPro::micromsg::JSApiAuthorise >&
JSLoginResponse::_authorise() const {
  // @@protoc_insertion_point(field_list:MMPro.micromsg.JSLoginResponse._Authorise)
  return _authorise_;
}

// optional string _AppName = 5;
inline bool JSLoginResponse::has__appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSLoginResponse::set_has__appname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSLoginResponse::clear_has__appname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSLoginResponse::clear__appname() {
  _appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appname();
}
inline const ::std::string& JSLoginResponse::_appname() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._AppName)
  return _appname_.GetNoArena();
}
inline void JSLoginResponse::set__appname(const ::std::string& value) {
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._AppName)
}
#if LANG_CXX11
inline void JSLoginResponse::set__appname(::std::string&& value) {
  set_has__appname();
  _appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._AppName)
}
#endif
inline void JSLoginResponse::set__appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._AppName)
}
inline void JSLoginResponse::set__appname(const char* value, size_t size) {
  set_has__appname();
  _appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._AppName)
}
inline ::std::string* JSLoginResponse::mutable__appname() {
  set_has__appname();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._AppName)
  return _appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__appname() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._AppName)
  clear_has__appname();
  return _appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__appname(::std::string* _appname) {
  if (_appname != NULL) {
    set_has__appname();
  } else {
    clear_has__appname();
  }
  _appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appname);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._AppName)
}

// optional string _AppIConUrl = 6;
inline bool JSLoginResponse::has__appiconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSLoginResponse::set_has__appiconurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSLoginResponse::clear_has__appiconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSLoginResponse::clear__appiconurl() {
  _appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__appiconurl();
}
inline const ::std::string& JSLoginResponse::_appiconurl() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  return _appiconurl_.GetNoArena();
}
inline void JSLoginResponse::set__appiconurl(const ::std::string& value) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
#if LANG_CXX11
inline void JSLoginResponse::set__appiconurl(::std::string&& value) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
#endif
inline void JSLoginResponse::set__appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
inline void JSLoginResponse::set__appiconurl(const char* value, size_t size) {
  set_has__appiconurl();
  _appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}
inline ::std::string* JSLoginResponse::mutable__appiconurl() {
  set_has__appiconurl();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  return _appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__appiconurl() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._AppIConUrl)
  clear_has__appiconurl();
  return _appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__appiconurl(::std::string* _appiconurl) {
  if (_appiconurl != NULL) {
    set_has__appiconurl();
  } else {
    clear_has__appiconurl();
  }
  _appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _appiconurl);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._AppIConUrl)
}

// optional string _akbK = 7;
inline bool JSLoginResponse::has__akbk() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JSLoginResponse::set_has__akbk() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JSLoginResponse::clear_has__akbk() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JSLoginResponse::clear__akbk() {
  _akbk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__akbk();
}
inline const ::std::string& JSLoginResponse::_akbk() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._akbK)
  return _akbk_.GetNoArena();
}
inline void JSLoginResponse::set__akbk(const ::std::string& value) {
  set_has__akbk();
  _akbk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._akbK)
}
#if LANG_CXX11
inline void JSLoginResponse::set__akbk(::std::string&& value) {
  set_has__akbk();
  _akbk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._akbK)
}
#endif
inline void JSLoginResponse::set__akbk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__akbk();
  _akbk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._akbK)
}
inline void JSLoginResponse::set__akbk(const char* value, size_t size) {
  set_has__akbk();
  _akbk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._akbK)
}
inline ::std::string* JSLoginResponse::mutable__akbk() {
  set_has__akbk();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._akbK)
  return _akbk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__akbk() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._akbK)
  clear_has__akbk();
  return _akbk_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__akbk(::std::string* _akbk) {
  if (_akbk != NULL) {
    set_has__akbk();
  } else {
    clear_has__akbk();
  }
  _akbk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _akbk);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._akbK)
}

// optional string _amne = 8;
inline bool JSLoginResponse::has__amne() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JSLoginResponse::set_has__amne() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JSLoginResponse::clear_has__amne() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JSLoginResponse::clear__amne() {
  _amne_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__amne();
}
inline const ::std::string& JSLoginResponse::_amne() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._amne)
  return _amne_.GetNoArena();
}
inline void JSLoginResponse::set__amne(const ::std::string& value) {
  set_has__amne();
  _amne_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._amne)
}
#if LANG_CXX11
inline void JSLoginResponse::set__amne(::std::string&& value) {
  set_has__amne();
  _amne_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._amne)
}
#endif
inline void JSLoginResponse::set__amne(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__amne();
  _amne_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._amne)
}
inline void JSLoginResponse::set__amne(const char* value, size_t size) {
  set_has__amne();
  _amne_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._amne)
}
inline ::std::string* JSLoginResponse::mutable__amne() {
  set_has__amne();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._amne)
  return _amne_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__amne() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._amne)
  clear_has__amne();
  return _amne_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__amne(::std::string* _amne) {
  if (_amne != NULL) {
    set_has__amne();
  } else {
    clear_has__amne();
  }
  _amne_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _amne);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._amne)
}

// optional string _amnf = 9;
inline bool JSLoginResponse::has__amnf() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JSLoginResponse::set_has__amnf() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JSLoginResponse::clear_has__amnf() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JSLoginResponse::clear__amnf() {
  _amnf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__amnf();
}
inline const ::std::string& JSLoginResponse::_amnf() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._amnf)
  return _amnf_.GetNoArena();
}
inline void JSLoginResponse::set__amnf(const ::std::string& value) {
  set_has__amnf();
  _amnf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._amnf)
}
#if LANG_CXX11
inline void JSLoginResponse::set__amnf(::std::string&& value) {
  set_has__amnf();
  _amnf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._amnf)
}
#endif
inline void JSLoginResponse::set__amnf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__amnf();
  _amnf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._amnf)
}
inline void JSLoginResponse::set__amnf(const char* value, size_t size) {
  set_has__amnf();
  _amnf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._amnf)
}
inline ::std::string* JSLoginResponse::mutable__amnf() {
  set_has__amnf();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._amnf)
  return _amnf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__amnf() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._amnf)
  clear_has__amnf();
  return _amnf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__amnf(::std::string* _amnf) {
  if (_amnf != NULL) {
    set_has__amnf();
  } else {
    clear_has__amnf();
  }
  _amnf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _amnf);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._amnf)
}

// optional uint32 _amng = 10;
inline bool JSLoginResponse::has__amng() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void JSLoginResponse::set_has__amng() {
  _has_bits_[0] |= 0x00000400u;
}
inline void JSLoginResponse::clear_has__amng() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void JSLoginResponse::clear__amng() {
  _amng_ = 0u;
  clear_has__amng();
}
inline ::google::protobuf::uint32 JSLoginResponse::_amng() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._amng)
  return _amng_;
}
inline void JSLoginResponse::set__amng(::google::protobuf::uint32 value) {
  set_has__amng();
  _amng_ = value;
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._amng)
}

// optional string _State = 11;
inline bool JSLoginResponse::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JSLoginResponse::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JSLoginResponse::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JSLoginResponse::clear__state() {
  _state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__state();
}
inline const ::std::string& JSLoginResponse::_state() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._State)
  return _state_.GetNoArena();
}
inline void JSLoginResponse::set__state(const ::std::string& value) {
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._State)
}
#if LANG_CXX11
inline void JSLoginResponse::set__state(::std::string&& value) {
  set_has__state();
  _state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._State)
}
#endif
inline void JSLoginResponse::set__state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._State)
}
inline void JSLoginResponse::set__state(const char* value, size_t size) {
  set_has__state();
  _state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._State)
}
inline ::std::string* JSLoginResponse::mutable__state() {
  set_has__state();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._State)
  return _state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__state() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._State)
  clear_has__state();
  return _state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__state(::std::string* _state) {
  if (_state != NULL) {
    set_has__state();
  } else {
    clear_has__state();
  }
  _state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _state);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._State)
}

// optional string _tnG = 12;
inline bool JSLoginResponse::has__tng() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JSLoginResponse::set_has__tng() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JSLoginResponse::clear_has__tng() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JSLoginResponse::clear__tng() {
  _tng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has__tng();
}
inline const ::std::string& JSLoginResponse::_tng() const {
  // @@protoc_insertion_point(field_get:MMPro.micromsg.JSLoginResponse._tnG)
  return _tng_.GetNoArena();
}
inline void JSLoginResponse::set__tng(const ::std::string& value) {
  set_has__tng();
  _tng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MMPro.micromsg.JSLoginResponse._tnG)
}
#if LANG_CXX11
inline void JSLoginResponse::set__tng(::std::string&& value) {
  set_has__tng();
  _tng_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MMPro.micromsg.JSLoginResponse._tnG)
}
#endif
inline void JSLoginResponse::set__tng(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has__tng();
  _tng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MMPro.micromsg.JSLoginResponse._tnG)
}
inline void JSLoginResponse::set__tng(const char* value, size_t size) {
  set_has__tng();
  _tng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MMPro.micromsg.JSLoginResponse._tnG)
}
inline ::std::string* JSLoginResponse::mutable__tng() {
  set_has__tng();
  // @@protoc_insertion_point(field_mutable:MMPro.micromsg.JSLoginResponse._tnG)
  return _tng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSLoginResponse::release__tng() {
  // @@protoc_insertion_point(field_release:MMPro.micromsg.JSLoginResponse._tnG)
  clear_has__tng();
  return _tng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSLoginResponse::set_allocated__tng(::std::string* _tng) {
  if (_tng != NULL) {
    set_has__tng();
  } else {
    clear_has__tng();
  }
  _tng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), _tng);
  // @@protoc_insertion_point(field_set_allocated:MMPro.micromsg.JSLoginResponse._tnG)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg
}  // namespace MMPro

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JSLoginResponse_2eproto__INCLUDED
